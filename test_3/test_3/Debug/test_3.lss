
test_3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00008890  10008000  10008000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000070  10010890  10010890  00010890  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00002734  10010900  10010900  00010900  2**2
                  ALLOC
  3 .stack        00000804  10013034  10013034  00010900  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  00010900  2**0
                  CONTENTS, READONLY
  5 .comment      000000b4  00000000  00000000  00010928  2**0
                  CONTENTS, READONLY
  6 .debug_info   0001fe44  00000000  00000000  000109dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002a81  00000000  00000000  00030820  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00005547  00000000  00000000  000332a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 000005b0  00000000  00000000  000387e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000007a8  00000000  00000000  00038d98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  000064c0  00000000  00000000  00039540  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   000097a5  00000000  00000000  0003fa00  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0010973e  00000000  00000000  000491a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000018f4  00000000  00000000  001528e4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

10008000 <app_entry>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void app_entry(void)
{
10008000:	b510      	push	{r4, lr}

    /* Initialize the relocate segment */
    pSrc = &_etext;
    pDest = &_srelocate;

    if (pSrc != pDest) {
10008002:	4a16      	ldr	r2, [pc, #88]	; (1000805c <app_entry+0x5c>)
10008004:	4b16      	ldr	r3, [pc, #88]	; (10008060 <app_entry+0x60>)
10008006:	429a      	cmp	r2, r3
10008008:	d012      	beq.n	10008030 <app_entry+0x30>
        for (; pDest < &_erelocate;) {
1000800a:	001a      	movs	r2, r3
1000800c:	4b15      	ldr	r3, [pc, #84]	; (10008064 <app_entry+0x64>)
1000800e:	429a      	cmp	r2, r3
10008010:	d20e      	bcs.n	10008030 <app_entry+0x30>
10008012:	4b15      	ldr	r3, [pc, #84]	; (10008068 <app_entry+0x68>)
10008014:	4a13      	ldr	r2, [pc, #76]	; (10008064 <app_entry+0x64>)
10008016:	3203      	adds	r2, #3
10008018:	1ad2      	subs	r2, r2, r3
1000801a:	0892      	lsrs	r2, r2, #2
1000801c:	3201      	adds	r2, #1
1000801e:	0092      	lsls	r2, r2, #2
10008020:	2300      	movs	r3, #0
            *pDest++ = *pSrc++;
10008022:	480f      	ldr	r0, [pc, #60]	; (10008060 <app_entry+0x60>)
10008024:	490d      	ldr	r1, [pc, #52]	; (1000805c <app_entry+0x5c>)
10008026:	58cc      	ldr	r4, [r1, r3]
10008028:	50c4      	str	r4, [r0, r3]
1000802a:	3304      	adds	r3, #4
        for (; pDest < &_erelocate;) {
1000802c:	4293      	cmp	r3, r2
1000802e:	d1fa      	bne.n	10008026 <app_entry+0x26>
        }
    }

    /* Clear the zero segment */
    for (pDest = &_szero; pDest < &_ezero;) {
10008030:	4a0e      	ldr	r2, [pc, #56]	; (1000806c <app_entry+0x6c>)
10008032:	4b0f      	ldr	r3, [pc, #60]	; (10008070 <app_entry+0x70>)
10008034:	429a      	cmp	r2, r3
10008036:	d20b      	bcs.n	10008050 <app_entry+0x50>
10008038:	0013      	movs	r3, r2
1000803a:	43d2      	mvns	r2, r2
1000803c:	490c      	ldr	r1, [pc, #48]	; (10008070 <app_entry+0x70>)
1000803e:	1852      	adds	r2, r2, r1
10008040:	2103      	movs	r1, #3
10008042:	438a      	bics	r2, r1
10008044:	3204      	adds	r2, #4
10008046:	18d2      	adds	r2, r2, r3
        *pDest++ = 0;
10008048:	2100      	movs	r1, #0
1000804a:	c302      	stmia	r3!, {r1}
    for (pDest = &_szero; pDest < &_ezero;) {
1000804c:	429a      	cmp	r2, r3
1000804e:	d1fc      	bne.n	1000804a <app_entry+0x4a>
    }

    /* Initialize the C library */
    __libc_init_array();
10008050:	4b08      	ldr	r3, [pc, #32]	; (10008074 <app_entry+0x74>)
10008052:	4798      	blx	r3

    /* Branch to main function */
    main();
10008054:	4b08      	ldr	r3, [pc, #32]	; (10008078 <app_entry+0x78>)
10008056:	4798      	blx	r3

    /* return to BLE OS*/
    return;
}
10008058:	bd10      	pop	{r4, pc}
1000805a:	46c0      	nop			; (mov r8, r8)
1000805c:	10010890 	.word	0x10010890
10008060:	10010890 	.word	0x10010890
10008064:	10010900 	.word	0x10010900
10008068:	10010894 	.word	0x10010894
1000806c:	10010900 	.word	0x10010900
10008070:	10013034 	.word	0x10013034
10008074:	1000ea65 	.word	0x1000ea65
10008078:	1000ac3d 	.word	0x1000ac3d

1000807c <__do_global_dtors_aux>:
1000807c:	b510      	push	{r4, lr}
1000807e:	4c06      	ldr	r4, [pc, #24]	; (10008098 <__do_global_dtors_aux+0x1c>)
10008080:	7823      	ldrb	r3, [r4, #0]
10008082:	2b00      	cmp	r3, #0
10008084:	d107      	bne.n	10008096 <__do_global_dtors_aux+0x1a>
10008086:	4b05      	ldr	r3, [pc, #20]	; (1000809c <__do_global_dtors_aux+0x20>)
10008088:	2b00      	cmp	r3, #0
1000808a:	d002      	beq.n	10008092 <__do_global_dtors_aux+0x16>
1000808c:	4804      	ldr	r0, [pc, #16]	; (100080a0 <__do_global_dtors_aux+0x24>)
1000808e:	e000      	b.n	10008092 <__do_global_dtors_aux+0x16>
10008090:	bf00      	nop
10008092:	2301      	movs	r3, #1
10008094:	7023      	strb	r3, [r4, #0]
10008096:	bd10      	pop	{r4, pc}
10008098:	10010900 	.word	0x10010900
1000809c:	00000000 	.word	0x00000000
100080a0:	10010890 	.word	0x10010890

100080a4 <frame_dummy>:
100080a4:	4b08      	ldr	r3, [pc, #32]	; (100080c8 <frame_dummy+0x24>)
100080a6:	b510      	push	{r4, lr}
100080a8:	2b00      	cmp	r3, #0
100080aa:	d003      	beq.n	100080b4 <frame_dummy+0x10>
100080ac:	4907      	ldr	r1, [pc, #28]	; (100080cc <frame_dummy+0x28>)
100080ae:	4808      	ldr	r0, [pc, #32]	; (100080d0 <frame_dummy+0x2c>)
100080b0:	e000      	b.n	100080b4 <frame_dummy+0x10>
100080b2:	bf00      	nop
100080b4:	4807      	ldr	r0, [pc, #28]	; (100080d4 <frame_dummy+0x30>)
100080b6:	6803      	ldr	r3, [r0, #0]
100080b8:	2b00      	cmp	r3, #0
100080ba:	d100      	bne.n	100080be <frame_dummy+0x1a>
100080bc:	bd10      	pop	{r4, pc}
100080be:	4b06      	ldr	r3, [pc, #24]	; (100080d8 <frame_dummy+0x34>)
100080c0:	2b00      	cmp	r3, #0
100080c2:	d0fb      	beq.n	100080bc <frame_dummy+0x18>
100080c4:	4798      	blx	r3
100080c6:	e7f9      	b.n	100080bc <frame_dummy+0x18>
100080c8:	00000000 	.word	0x00000000
100080cc:	10010904 	.word	0x10010904
100080d0:	10010890 	.word	0x10010890
100080d4:	10010890 	.word	0x10010890
100080d8:	00000000 	.word	0x00000000

100080dc <gpio_get_config_defaults>:
 *  \param[out] config  Configuration structure to initialize to default values.
 */
void gpio_get_config_defaults(struct gpio_config *const config)
{
	/* Default configuration values */
	config->direction  = GPIO_PIN_DIR_INPUT;
100080dc:	2300      	movs	r3, #0
100080de:	7003      	strb	r3, [r0, #0]
	config->input_pull = GPIO_PIN_PULL_UP;
100080e0:	2201      	movs	r2, #1
100080e2:	7042      	strb	r2, [r0, #1]
	config->powersave  = false;
100080e4:	7083      	strb	r3, [r0, #2]
	config->aon_wakeup = false;
100080e6:	70c3      	strb	r3, [r0, #3]
}
100080e8:	4770      	bx	lr
	...

100080ec <gpio_pin_set_config>:
 *  \retval STATUS_RESOURCE_NOT_AVAILABLE   Requested gpio is already in use.
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
100080ec:	b570      	push	{r4, r5, r6, lr}
	* GPIO_0 & GPIO_1 are used for SWD.
	*/
	if ((gpio_pin == PIN_LP_GPIO_0) || \
		(gpio_pin == PIN_LP_GPIO_1))
	{
		status = STATUS_ERR_INVALID_ARG;
100080ee:	2317      	movs	r3, #23
	if ((gpio_pin == PIN_LP_GPIO_0) || \
100080f0:	2801      	cmp	r0, #1
100080f2:	d92e      	bls.n	10008152 <gpio_pin_set_config+0x66>
	} else {
		if (gpio_pin <= 7) {
100080f4:	2807      	cmp	r0, #7
100080f6:	d82e      	bhi.n	10008156 <gpio_pin_set_config+0x6a>
			LPMCU_MISC_REGS0->PINMUX_SEL_0.reg &= ~(7 << ((gpio_pin % 8) * 4));
100080f8:	4d64      	ldr	r5, [pc, #400]	; (1000828c <gpio_pin_set_config+0x1a0>)
100080fa:	6c6a      	ldr	r2, [r5, #68]	; 0x44
100080fc:	3b10      	subs	r3, #16
100080fe:	4003      	ands	r3, r0
10008100:	009b      	lsls	r3, r3, #2
10008102:	2407      	movs	r4, #7
10008104:	409c      	lsls	r4, r3
10008106:	43a2      	bics	r2, r4
10008108:	646a      	str	r2, [r5, #68]	; 0x44
		} else if (44 <= gpio_pin  && gpio_pin < 48) {
			/* Set GPIO_MSx as digital mode */
			AON_GP_REGS0->MS_GPIO_MODE.vec.ANALOG_ENABLE_ &= ~(1 << (gpio_pin - PIN_GPIO_MS4));
		}
		
		if ((gpio_pin == PIN_AO_GPIO_0) || (gpio_pin == PIN_AO_GPIO_1) ||
1000810a:	0003      	movs	r3, r0
1000810c:	3b1d      	subs	r3, #29
1000810e:	2b02      	cmp	r3, #2
10008110:	d857      	bhi.n	100081c2 <gpio_pin_set_config+0xd6>
				(gpio_pin == PIN_AO_GPIO_2)) {
			/* Active Low, Always On Pull Enable Control */
			if (config->input_pull == GPIO_PIN_PULL_UP) {
10008112:	784b      	ldrb	r3, [r1, #1]
10008114:	2b01      	cmp	r3, #1
10008116:	d04b      	beq.n	100081b0 <gpio_pin_set_config+0xc4>
				AON_GP_REGS0->AON_PULL_ENABLE.reg &= ~(1 << (31 - gpio_pin));
			} else {
				AON_GP_REGS0->AON_PULL_ENABLE.reg |= 1 << (31 - gpio_pin);
10008118:	4d5d      	ldr	r5, [pc, #372]	; (10008290 <gpio_pin_set_config+0x1a4>)
1000811a:	7d2b      	ldrb	r3, [r5, #20]
1000811c:	241f      	movs	r4, #31
1000811e:	1a24      	subs	r4, r4, r0
10008120:	2201      	movs	r2, #1
10008122:	40a2      	lsls	r2, r4
10008124:	4313      	orrs	r3, r2
10008126:	b2db      	uxtb	r3, r3
10008128:	752b      	strb	r3, [r5, #20]
			}
			if (config->aon_wakeup) {
1000812a:	78ca      	ldrb	r2, [r1, #3]
	enum status_code status = STATUS_OK;
1000812c:	2300      	movs	r3, #0
			if (config->aon_wakeup) {
1000812e:	2a00      	cmp	r2, #0
10008130:	d00f      	beq.n	10008152 <gpio_pin_set_config+0x66>
				/* Enable AON_GPIO_x to be a wakeup MCU from sleep mode */
				AON_GP_REGS0->AON_PINMUX_SEL.reg |= 1 << (4 * (31 - gpio_pin));
10008132:	4957      	ldr	r1, [pc, #348]	; (10008290 <gpio_pin_set_config+0x1a4>)
10008134:	880b      	ldrh	r3, [r1, #0]
10008136:	221f      	movs	r2, #31
10008138:	1a10      	subs	r0, r2, r0
1000813a:	0080      	lsls	r0, r0, #2
1000813c:	3a1e      	subs	r2, #30
1000813e:	4082      	lsls	r2, r0
10008140:	4313      	orrs	r3, r2
10008142:	b29b      	uxth	r3, r3
10008144:	800b      	strh	r3, [r1, #0]
				/* Enable AON_GPIO_x to wake up the BLE domain from sleep mode */
				AON_PWR_SEQ0->GPIO_WAKEUP_CTRL.bit.BLE_ENABLE = 1;
10008146:	4a53      	ldr	r2, [pc, #332]	; (10008294 <gpio_pin_set_config+0x1a8>)
10008148:	7813      	ldrb	r3, [r2, #0]
1000814a:	2102      	movs	r1, #2
1000814c:	430b      	orrs	r3, r1
1000814e:	7013      	strb	r3, [r2, #0]
	enum status_code status = STATUS_OK;
10008150:	2300      	movs	r3, #0
				}
			}
		}
	}
	return status;
}
10008152:	0018      	movs	r0, r3
10008154:	bd70      	pop	{r4, r5, r6, pc}
		} else if (gpio_pin <= 15) {
10008156:	280f      	cmp	r0, #15
10008158:	d809      	bhi.n	1000816e <gpio_pin_set_config+0x82>
			LPMCU_MISC_REGS0->PINMUX_SEL_1.reg &= ~(7 << ((gpio_pin % 8) * 4));
1000815a:	4d4c      	ldr	r5, [pc, #304]	; (1000828c <gpio_pin_set_config+0x1a0>)
1000815c:	6caa      	ldr	r2, [r5, #72]	; 0x48
1000815e:	2307      	movs	r3, #7
10008160:	4003      	ands	r3, r0
10008162:	009b      	lsls	r3, r3, #2
10008164:	2407      	movs	r4, #7
10008166:	409c      	lsls	r4, r3
10008168:	43a2      	bics	r2, r4
1000816a:	64aa      	str	r2, [r5, #72]	; 0x48
1000816c:	e7cd      	b.n	1000810a <gpio_pin_set_config+0x1e>
		} else if (gpio_pin <= 23) {
1000816e:	2817      	cmp	r0, #23
10008170:	d809      	bhi.n	10008186 <gpio_pin_set_config+0x9a>
			LPMCU_MISC_REGS0->PINMUX_SEL_2.reg &= ~(7 << ((gpio_pin % 8) * 4));
10008172:	4d46      	ldr	r5, [pc, #280]	; (1000828c <gpio_pin_set_config+0x1a0>)
10008174:	6cea      	ldr	r2, [r5, #76]	; 0x4c
10008176:	2307      	movs	r3, #7
10008178:	4003      	ands	r3, r0
1000817a:	009b      	lsls	r3, r3, #2
1000817c:	2407      	movs	r4, #7
1000817e:	409c      	lsls	r4, r3
10008180:	43a2      	bics	r2, r4
10008182:	64ea      	str	r2, [r5, #76]	; 0x4c
10008184:	e7c1      	b.n	1000810a <gpio_pin_set_config+0x1e>
		} else if (44 <= gpio_pin  && gpio_pin < 48) {
10008186:	0003      	movs	r3, r0
10008188:	3b2c      	subs	r3, #44	; 0x2c
1000818a:	2b03      	cmp	r3, #3
1000818c:	d8bd      	bhi.n	1000810a <gpio_pin_set_config+0x1e>
			AON_GP_REGS0->MS_GPIO_MODE.vec.ANALOG_ENABLE_ &= ~(1 << (gpio_pin - PIN_GPIO_MS4));
1000818e:	4d40      	ldr	r5, [pc, #256]	; (10008290 <gpio_pin_set_config+0x1a4>)
10008190:	2482      	movs	r4, #130	; 0x82
10008192:	00e4      	lsls	r4, r4, #3
10008194:	5d2b      	ldrb	r3, [r5, r4]
10008196:	071b      	lsls	r3, r3, #28
10008198:	0002      	movs	r2, r0
1000819a:	3a2c      	subs	r2, #44	; 0x2c
1000819c:	2601      	movs	r6, #1
1000819e:	4096      	lsls	r6, r2
100081a0:	0f1b      	lsrs	r3, r3, #28
100081a2:	5d2a      	ldrb	r2, [r5, r4]
100081a4:	43b3      	bics	r3, r6
100081a6:	260f      	movs	r6, #15
100081a8:	43b2      	bics	r2, r6
100081aa:	4313      	orrs	r3, r2
100081ac:	552b      	strb	r3, [r5, r4]
100081ae:	e7ac      	b.n	1000810a <gpio_pin_set_config+0x1e>
				AON_GP_REGS0->AON_PULL_ENABLE.reg &= ~(1 << (31 - gpio_pin));
100081b0:	4d37      	ldr	r5, [pc, #220]	; (10008290 <gpio_pin_set_config+0x1a4>)
100081b2:	7d2b      	ldrb	r3, [r5, #20]
100081b4:	241f      	movs	r4, #31
100081b6:	1a24      	subs	r4, r4, r0
100081b8:	2201      	movs	r2, #1
100081ba:	40a2      	lsls	r2, r4
100081bc:	4393      	bics	r3, r2
100081be:	752b      	strb	r3, [r5, #20]
100081c0:	e7b3      	b.n	1000812a <gpio_pin_set_config+0x3e>
			if(config->direction == GPIO_PIN_DIR_INPUT) {
100081c2:	780a      	ldrb	r2, [r1, #0]
100081c4:	2a00      	cmp	r2, #0
100081c6:	d140      	bne.n	1000824a <gpio_pin_set_config+0x15e>
				if(gpio_pin < 16) {
100081c8:	280f      	cmp	r0, #15
100081ca:	d810      	bhi.n	100081ee <gpio_pin_set_config+0x102>
					GPIO0->OUTENCLR.reg = (1 << gpio_pin);
100081cc:	2301      	movs	r3, #1
100081ce:	4083      	lsls	r3, r0
100081d0:	b29b      	uxth	r3, r3
100081d2:	4a31      	ldr	r2, [pc, #196]	; (10008298 <gpio_pin_set_config+0x1ac>)
100081d4:	8293      	strh	r3, [r2, #20]
	enum status_code status = STATUS_OK;
100081d6:	2300      	movs	r3, #0
				if (gpio_pin < 32) {
100081d8:	281f      	cmp	r0, #31
100081da:	d8ba      	bhi.n	10008152 <gpio_pin_set_config+0x66>
					switch(config->input_pull) {
100081dc:	784b      	ldrb	r3, [r1, #1]
100081de:	2b01      	cmp	r3, #1
100081e0:	d020      	beq.n	10008224 <gpio_pin_set_config+0x138>
100081e2:	2b00      	cmp	r3, #0
100081e4:	d016      	beq.n	10008214 <gpio_pin_set_config+0x128>
100081e6:	2b02      	cmp	r3, #2
100081e8:	d024      	beq.n	10008234 <gpio_pin_set_config+0x148>
							status = STATUS_ERR_INVALID_ARG;
100081ea:	2317      	movs	r3, #23
100081ec:	e7b1      	b.n	10008152 <gpio_pin_set_config+0x66>
				} else if (gpio_pin < 32){
100081ee:	281f      	cmp	r0, #31
100081f0:	d807      	bhi.n	10008202 <gpio_pin_set_config+0x116>
					GPIO1->OUTENCLR.reg = (1 << (gpio_pin % 16));
100081f2:	220f      	movs	r2, #15
100081f4:	4002      	ands	r2, r0
100081f6:	2301      	movs	r3, #1
100081f8:	4093      	lsls	r3, r2
100081fa:	b29b      	uxth	r3, r3
100081fc:	4a27      	ldr	r2, [pc, #156]	; (1000829c <gpio_pin_set_config+0x1b0>)
100081fe:	8293      	strh	r3, [r2, #20]
10008200:	e7ec      	b.n	100081dc <gpio_pin_set_config+0xf0>
					GPIO2->OUTENCLR.reg = (1 << (gpio_pin % 16));
10008202:	230f      	movs	r3, #15
10008204:	4018      	ands	r0, r3
10008206:	3b0e      	subs	r3, #14
10008208:	4083      	lsls	r3, r0
1000820a:	b29b      	uxth	r3, r3
1000820c:	4a24      	ldr	r2, [pc, #144]	; (100082a0 <gpio_pin_set_config+0x1b4>)
1000820e:	8293      	strh	r3, [r2, #20]
	enum status_code status = STATUS_OK;
10008210:	2300      	movs	r3, #0
10008212:	e79e      	b.n	10008152 <gpio_pin_set_config+0x66>
							LPMCU_MISC_REGS0->PULL_ENABLE.reg |= (1 << gpio_pin);
10008214:	4a1d      	ldr	r2, [pc, #116]	; (1000828c <gpio_pin_set_config+0x1a0>)
10008216:	6d11      	ldr	r1, [r2, #80]	; 0x50
10008218:	2301      	movs	r3, #1
1000821a:	4083      	lsls	r3, r0
1000821c:	430b      	orrs	r3, r1
1000821e:	6513      	str	r3, [r2, #80]	; 0x50
	enum status_code status = STATUS_OK;
10008220:	2300      	movs	r3, #0
							break;
10008222:	e796      	b.n	10008152 <gpio_pin_set_config+0x66>
							LPMCU_MISC_REGS0->PULL_ENABLE.reg &= ~(1 << gpio_pin);
10008224:	4919      	ldr	r1, [pc, #100]	; (1000828c <gpio_pin_set_config+0x1a0>)
10008226:	6d0b      	ldr	r3, [r1, #80]	; 0x50
10008228:	2201      	movs	r2, #1
1000822a:	4082      	lsls	r2, r0
1000822c:	4393      	bics	r3, r2
1000822e:	650b      	str	r3, [r1, #80]	; 0x50
	enum status_code status = STATUS_OK;
10008230:	2300      	movs	r3, #0
							break;
10008232:	e78e      	b.n	10008152 <gpio_pin_set_config+0x66>
							LPMCU_MISC_REGS0->RTYPE_PAD_0.reg |= (1 << gpio_pin);
10008234:	4b15      	ldr	r3, [pc, #84]	; (1000828c <gpio_pin_set_config+0x1a0>)
10008236:	6d59      	ldr	r1, [r3, #84]	; 0x54
10008238:	2201      	movs	r2, #1
1000823a:	4082      	lsls	r2, r0
1000823c:	4311      	orrs	r1, r2
1000823e:	6559      	str	r1, [r3, #84]	; 0x54
							LPMCU_MISC_REGS0->PULL_ENABLE.reg &= ~(1 << gpio_pin);
10008240:	6d19      	ldr	r1, [r3, #80]	; 0x50
10008242:	4391      	bics	r1, r2
10008244:	6519      	str	r1, [r3, #80]	; 0x50
	enum status_code status = STATUS_OK;
10008246:	2300      	movs	r3, #0
							break;
10008248:	e783      	b.n	10008152 <gpio_pin_set_config+0x66>
	enum status_code status = STATUS_OK;
1000824a:	2300      	movs	r3, #0
			} else if(config->direction == GPIO_PIN_DIR_OUTPUT) {
1000824c:	2a01      	cmp	r2, #1
1000824e:	d000      	beq.n	10008252 <gpio_pin_set_config+0x166>
10008250:	e77f      	b.n	10008152 <gpio_pin_set_config+0x66>
				if (gpio_pin < 16) {
10008252:	280f      	cmp	r0, #15
10008254:	d90a      	bls.n	1000826c <gpio_pin_set_config+0x180>
				} else if (gpio_pin < 32) {
10008256:	281f      	cmp	r0, #31
10008258:	d90f      	bls.n	1000827a <gpio_pin_set_config+0x18e>
					GPIO2->OUTENSET.reg = (1 << (gpio_pin % 16));
1000825a:	230f      	movs	r3, #15
1000825c:	4018      	ands	r0, r3
1000825e:	3b0e      	subs	r3, #14
10008260:	4083      	lsls	r3, r0
10008262:	b29b      	uxth	r3, r3
10008264:	4a0e      	ldr	r2, [pc, #56]	; (100082a0 <gpio_pin_set_config+0x1b4>)
10008266:	8213      	strh	r3, [r2, #16]
	enum status_code status = STATUS_OK;
10008268:	2300      	movs	r3, #0
1000826a:	e772      	b.n	10008152 <gpio_pin_set_config+0x66>
					GPIO0->OUTENSET.reg = (1 << gpio_pin);
1000826c:	3301      	adds	r3, #1
1000826e:	4083      	lsls	r3, r0
10008270:	b29b      	uxth	r3, r3
10008272:	4a09      	ldr	r2, [pc, #36]	; (10008298 <gpio_pin_set_config+0x1ac>)
10008274:	8213      	strh	r3, [r2, #16]
	enum status_code status = STATUS_OK;
10008276:	2300      	movs	r3, #0
10008278:	e76b      	b.n	10008152 <gpio_pin_set_config+0x66>
					GPIO1->OUTENSET.reg = (1 << (gpio_pin % 16));
1000827a:	230f      	movs	r3, #15
1000827c:	4018      	ands	r0, r3
1000827e:	3b0e      	subs	r3, #14
10008280:	4083      	lsls	r3, r0
10008282:	b29b      	uxth	r3, r3
10008284:	4a05      	ldr	r2, [pc, #20]	; (1000829c <gpio_pin_set_config+0x1b0>)
10008286:	8213      	strh	r3, [r2, #16]
	enum status_code status = STATUS_OK;
10008288:	2300      	movs	r3, #0
1000828a:	e762      	b.n	10008152 <gpio_pin_set_config+0x66>
1000828c:	4000b000 	.word	0x4000b000
10008290:	4000f000 	.word	0x4000f000
10008294:	4000e000 	.word	0x4000e000
10008298:	40010000 	.word	0x40010000
1000829c:	40011000 	.word	0x40011000
100082a0:	40013000 	.word	0x40013000

100082a4 <gpio_pin_set_output_level>:
 *  \param[in] gpio_pin  Index of the GPIO pin to write to.
 *  \param[in] level     Logical level to set the given pin to.
 */
void gpio_pin_set_output_level(const uint8_t gpio_pin, const bool level)
{
	if (gpio_pin < 16) {
100082a4:	280f      	cmp	r0, #15
100082a6:	d810      	bhi.n	100082ca <gpio_pin_set_output_level+0x26>
		if(level) {
100082a8:	2900      	cmp	r1, #0
100082aa:	d007      	beq.n	100082bc <gpio_pin_set_output_level+0x18>
			GPIO0->DATAOUT.reg |= (1 << gpio_pin);
100082ac:	491d      	ldr	r1, [pc, #116]	; (10008324 <gpio_pin_set_output_level+0x80>)
100082ae:	888b      	ldrh	r3, [r1, #4]
100082b0:	2201      	movs	r2, #1
100082b2:	4082      	lsls	r2, r0
100082b4:	4313      	orrs	r3, r2
100082b6:	b29b      	uxth	r3, r3
100082b8:	808b      	strh	r3, [r1, #4]
			GPIO2->DATAOUT.reg |= (1 << (gpio_pin % 16));
		} else {
			GPIO2->DATAOUT.reg &= ~(1 << (gpio_pin % 16));
		}
	}
}
100082ba:	4770      	bx	lr
			GPIO0->DATAOUT.reg &= ~(1 << gpio_pin);
100082bc:	4919      	ldr	r1, [pc, #100]	; (10008324 <gpio_pin_set_output_level+0x80>)
100082be:	888b      	ldrh	r3, [r1, #4]
100082c0:	2201      	movs	r2, #1
100082c2:	4082      	lsls	r2, r0
100082c4:	4393      	bics	r3, r2
100082c6:	808b      	strh	r3, [r1, #4]
100082c8:	e7f7      	b.n	100082ba <gpio_pin_set_output_level+0x16>
	} else if (gpio_pin < 32) {
100082ca:	281f      	cmp	r0, #31
100082cc:	d814      	bhi.n	100082f8 <gpio_pin_set_output_level+0x54>
		if(level) {
100082ce:	2900      	cmp	r1, #0
100082d0:	d009      	beq.n	100082e6 <gpio_pin_set_output_level+0x42>
			GPIO1->DATAOUT.reg |= (1 << (gpio_pin % 16));
100082d2:	4915      	ldr	r1, [pc, #84]	; (10008328 <gpio_pin_set_output_level+0x84>)
100082d4:	888b      	ldrh	r3, [r1, #4]
100082d6:	220f      	movs	r2, #15
100082d8:	4010      	ands	r0, r2
100082da:	3a0e      	subs	r2, #14
100082dc:	4082      	lsls	r2, r0
100082de:	4313      	orrs	r3, r2
100082e0:	b29b      	uxth	r3, r3
100082e2:	808b      	strh	r3, [r1, #4]
100082e4:	e7e9      	b.n	100082ba <gpio_pin_set_output_level+0x16>
			GPIO1->DATAOUT.reg &= ~(1 << (gpio_pin % 16));
100082e6:	4910      	ldr	r1, [pc, #64]	; (10008328 <gpio_pin_set_output_level+0x84>)
100082e8:	888b      	ldrh	r3, [r1, #4]
100082ea:	220f      	movs	r2, #15
100082ec:	4010      	ands	r0, r2
100082ee:	3a0e      	subs	r2, #14
100082f0:	4082      	lsls	r2, r0
100082f2:	4393      	bics	r3, r2
100082f4:	808b      	strh	r3, [r1, #4]
100082f6:	e7e0      	b.n	100082ba <gpio_pin_set_output_level+0x16>
		if(level) {
100082f8:	2900      	cmp	r1, #0
100082fa:	d108      	bne.n	1000830e <gpio_pin_set_output_level+0x6a>
			GPIO2->DATAOUT.reg &= ~(1 << (gpio_pin % 16));
100082fc:	490b      	ldr	r1, [pc, #44]	; (1000832c <gpio_pin_set_output_level+0x88>)
100082fe:	888b      	ldrh	r3, [r1, #4]
10008300:	220f      	movs	r2, #15
10008302:	4010      	ands	r0, r2
10008304:	3a0e      	subs	r2, #14
10008306:	4082      	lsls	r2, r0
10008308:	4393      	bics	r3, r2
1000830a:	808b      	strh	r3, [r1, #4]
}
1000830c:	e7d5      	b.n	100082ba <gpio_pin_set_output_level+0x16>
			GPIO2->DATAOUT.reg |= (1 << (gpio_pin % 16));
1000830e:	4907      	ldr	r1, [pc, #28]	; (1000832c <gpio_pin_set_output_level+0x88>)
10008310:	888b      	ldrh	r3, [r1, #4]
10008312:	220f      	movs	r2, #15
10008314:	4010      	ands	r0, r2
10008316:	3a0e      	subs	r2, #14
10008318:	4082      	lsls	r2, r0
1000831a:	4313      	orrs	r3, r2
1000831c:	b29b      	uxth	r3, r3
1000831e:	808b      	strh	r3, [r1, #4]
10008320:	e7cb      	b.n	100082ba <gpio_pin_set_output_level+0x16>
10008322:	46c0      	nop			; (mov r8, r8)
10008324:	40010000 	.word	0x40010000
10008328:	40011000 	.word	0x40011000
1000832c:	40013000 	.word	0x40013000

10008330 <gpio_pinmux_cofiguration>:
 *
 *  \param[in] gpio_pin   Index of the GPIO pin to toggle.
 *  \param[in] pinmux_sel PINMUX selection.
 */
void gpio_pinmux_cofiguration(const uint8_t gpio_pin, uint16_t pinmux_sel)
{
10008330:	b570      	push	{r4, r5, r6, lr}
	uint8_t megamux_sel = (pinmux_sel >> 8) & 0xFF;
10008332:	0a0a      	lsrs	r2, r1, #8

	pinmux_sel &= 0xFF;
10008334:	23ff      	movs	r3, #255	; 0xff
10008336:	4019      	ands	r1, r3

	if (gpio_pin <= 7) {
10008338:	2807      	cmp	r0, #7
1000833a:	d832      	bhi.n	100083a2 <gpio_pinmux_cofiguration+0x72>
		LPMCU_MISC_REGS0->PINMUX_SEL_0.reg &= ~(7 << ((gpio_pin % 8) * 4));
1000833c:	4c4d      	ldr	r4, [pc, #308]	; (10008474 <gpio_pinmux_cofiguration+0x144>)
1000833e:	6c65      	ldr	r5, [r4, #68]	; 0x44
10008340:	3bf8      	subs	r3, #248	; 0xf8
10008342:	4003      	ands	r3, r0
10008344:	009b      	lsls	r3, r3, #2
10008346:	2607      	movs	r6, #7
10008348:	409e      	lsls	r6, r3
1000834a:	43b5      	bics	r5, r6
1000834c:	6465      	str	r5, [r4, #68]	; 0x44
		LPMCU_MISC_REGS0->PINMUX_SEL_0.reg |= (pinmux_sel << ((gpio_pin % 8)*4));
1000834e:	6c65      	ldr	r5, [r4, #68]	; 0x44
10008350:	000e      	movs	r6, r1
10008352:	409e      	lsls	r6, r3
10008354:	0033      	movs	r3, r6
10008356:	432b      	orrs	r3, r5
10008358:	6463      	str	r3, [r4, #68]	; 0x44
		if (pinmux_sel == 0x01) {
1000835a:	2901      	cmp	r1, #1
1000835c:	d000      	beq.n	10008360 <gpio_pinmux_cofiguration+0x30>
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_5.reg &= ~(0x3F << ((gpio_pin % 4) * 8));
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_5.reg |= (megamux_sel << ((gpio_pin % 4) * 8));
			}
		}
	}
}
1000835e:	bd70      	pop	{r4, r5, r6, pc}
			if (gpio_pin <= 3) {
10008360:	2803      	cmp	r0, #3
10008362:	d80e      	bhi.n	10008382 <gpio_pinmux_cofiguration+0x52>
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_0.reg &= ~(0x3F << ((gpio_pin % 4) * 8));
10008364:	31a0      	adds	r1, #160	; 0xa0
10008366:	31ff      	adds	r1, #255	; 0xff
10008368:	5865      	ldr	r5, [r4, r1]
1000836a:	2303      	movs	r3, #3
1000836c:	4018      	ands	r0, r3
1000836e:	00c0      	lsls	r0, r0, #3
10008370:	333c      	adds	r3, #60	; 0x3c
10008372:	4083      	lsls	r3, r0
10008374:	439d      	bics	r5, r3
10008376:	5065      	str	r5, [r4, r1]
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_0.reg |= (megamux_sel << ((gpio_pin % 4) * 8));
10008378:	5863      	ldr	r3, [r4, r1]
1000837a:	4082      	lsls	r2, r0
1000837c:	431a      	orrs	r2, r3
1000837e:	5062      	str	r2, [r4, r1]
10008380:	e7ed      	b.n	1000835e <gpio_pinmux_cofiguration+0x2e>
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_1.reg &= ~(0x3F << ((gpio_pin % 4) * 8));
10008382:	4c3c      	ldr	r4, [pc, #240]	; (10008474 <gpio_pinmux_cofiguration+0x144>)
10008384:	21d2      	movs	r1, #210	; 0xd2
10008386:	0049      	lsls	r1, r1, #1
10008388:	5865      	ldr	r5, [r4, r1]
1000838a:	2303      	movs	r3, #3
1000838c:	4018      	ands	r0, r3
1000838e:	00c0      	lsls	r0, r0, #3
10008390:	333c      	adds	r3, #60	; 0x3c
10008392:	4083      	lsls	r3, r0
10008394:	439d      	bics	r5, r3
10008396:	5065      	str	r5, [r4, r1]
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_1.reg |= (megamux_sel << ((gpio_pin % 4) * 8));
10008398:	5863      	ldr	r3, [r4, r1]
1000839a:	4082      	lsls	r2, r0
1000839c:	431a      	orrs	r2, r3
1000839e:	5062      	str	r2, [r4, r1]
100083a0:	e7dd      	b.n	1000835e <gpio_pinmux_cofiguration+0x2e>
	} else if (gpio_pin <= 15) {
100083a2:	280f      	cmp	r0, #15
100083a4:	d831      	bhi.n	1000840a <gpio_pinmux_cofiguration+0xda>
		LPMCU_MISC_REGS0->PINMUX_SEL_1.reg &= ~(7 << ((gpio_pin % 8) * 4));
100083a6:	4c33      	ldr	r4, [pc, #204]	; (10008474 <gpio_pinmux_cofiguration+0x144>)
100083a8:	6ca5      	ldr	r5, [r4, #72]	; 0x48
100083aa:	2307      	movs	r3, #7
100083ac:	4003      	ands	r3, r0
100083ae:	009b      	lsls	r3, r3, #2
100083b0:	2607      	movs	r6, #7
100083b2:	409e      	lsls	r6, r3
100083b4:	43b5      	bics	r5, r6
100083b6:	64a5      	str	r5, [r4, #72]	; 0x48
		LPMCU_MISC_REGS0->PINMUX_SEL_1.reg |= (pinmux_sel << ((gpio_pin % 8)*4));
100083b8:	6ca5      	ldr	r5, [r4, #72]	; 0x48
100083ba:	000e      	movs	r6, r1
100083bc:	409e      	lsls	r6, r3
100083be:	0033      	movs	r3, r6
100083c0:	432b      	orrs	r3, r5
100083c2:	64a3      	str	r3, [r4, #72]	; 0x48
		if (pinmux_sel == 0x01) {
100083c4:	2901      	cmp	r1, #1
100083c6:	d1ca      	bne.n	1000835e <gpio_pinmux_cofiguration+0x2e>
			if (gpio_pin <= 11) {
100083c8:	280b      	cmp	r0, #11
100083ca:	d80e      	bhi.n	100083ea <gpio_pinmux_cofiguration+0xba>
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_2.reg &= ~(0x3F << ((gpio_pin % 4) * 8));
100083cc:	31a8      	adds	r1, #168	; 0xa8
100083ce:	31ff      	adds	r1, #255	; 0xff
100083d0:	5865      	ldr	r5, [r4, r1]
100083d2:	2303      	movs	r3, #3
100083d4:	4018      	ands	r0, r3
100083d6:	00c0      	lsls	r0, r0, #3
100083d8:	333c      	adds	r3, #60	; 0x3c
100083da:	4083      	lsls	r3, r0
100083dc:	439d      	bics	r5, r3
100083de:	5065      	str	r5, [r4, r1]
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_2.reg |= (megamux_sel << ((gpio_pin % 4) * 8));
100083e0:	5863      	ldr	r3, [r4, r1]
100083e2:	4082      	lsls	r2, r0
100083e4:	431a      	orrs	r2, r3
100083e6:	5062      	str	r2, [r4, r1]
100083e8:	e7b9      	b.n	1000835e <gpio_pinmux_cofiguration+0x2e>
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_3.reg &= ~(0x3F << ((gpio_pin % 4) * 8));
100083ea:	4c22      	ldr	r4, [pc, #136]	; (10008474 <gpio_pinmux_cofiguration+0x144>)
100083ec:	21d6      	movs	r1, #214	; 0xd6
100083ee:	0049      	lsls	r1, r1, #1
100083f0:	5865      	ldr	r5, [r4, r1]
100083f2:	2303      	movs	r3, #3
100083f4:	4018      	ands	r0, r3
100083f6:	00c0      	lsls	r0, r0, #3
100083f8:	333c      	adds	r3, #60	; 0x3c
100083fa:	4083      	lsls	r3, r0
100083fc:	439d      	bics	r5, r3
100083fe:	5065      	str	r5, [r4, r1]
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_3.reg |= (megamux_sel << ((gpio_pin % 4) * 8));
10008400:	5863      	ldr	r3, [r4, r1]
10008402:	4082      	lsls	r2, r0
10008404:	431a      	orrs	r2, r3
10008406:	5062      	str	r2, [r4, r1]
10008408:	e7a9      	b.n	1000835e <gpio_pinmux_cofiguration+0x2e>
	} else if (gpio_pin <= 23) {
1000840a:	2817      	cmp	r0, #23
1000840c:	d8a7      	bhi.n	1000835e <gpio_pinmux_cofiguration+0x2e>
		LPMCU_MISC_REGS0->PINMUX_SEL_2.reg &= ~(7 << ((gpio_pin % 8) * 4));
1000840e:	4c19      	ldr	r4, [pc, #100]	; (10008474 <gpio_pinmux_cofiguration+0x144>)
10008410:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
10008412:	2307      	movs	r3, #7
10008414:	4003      	ands	r3, r0
10008416:	009b      	lsls	r3, r3, #2
10008418:	2607      	movs	r6, #7
1000841a:	409e      	lsls	r6, r3
1000841c:	43b5      	bics	r5, r6
1000841e:	64e5      	str	r5, [r4, #76]	; 0x4c
		LPMCU_MISC_REGS0->PINMUX_SEL_2.reg |= (pinmux_sel << ((gpio_pin % 8)*4));
10008420:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
10008422:	000e      	movs	r6, r1
10008424:	409e      	lsls	r6, r3
10008426:	0033      	movs	r3, r6
10008428:	432b      	orrs	r3, r5
1000842a:	64e3      	str	r3, [r4, #76]	; 0x4c
		if (pinmux_sel == 0x01) {
1000842c:	2901      	cmp	r1, #1
1000842e:	d196      	bne.n	1000835e <gpio_pinmux_cofiguration+0x2e>
			if (gpio_pin <= 19) {
10008430:	2813      	cmp	r0, #19
10008432:	d90f      	bls.n	10008454 <gpio_pinmux_cofiguration+0x124>
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_5.reg &= ~(0x3F << ((gpio_pin % 4) * 8));
10008434:	4c0f      	ldr	r4, [pc, #60]	; (10008474 <gpio_pinmux_cofiguration+0x144>)
10008436:	21da      	movs	r1, #218	; 0xda
10008438:	0049      	lsls	r1, r1, #1
1000843a:	5865      	ldr	r5, [r4, r1]
1000843c:	2303      	movs	r3, #3
1000843e:	4018      	ands	r0, r3
10008440:	00c0      	lsls	r0, r0, #3
10008442:	333c      	adds	r3, #60	; 0x3c
10008444:	4083      	lsls	r3, r0
10008446:	439d      	bics	r5, r3
10008448:	5065      	str	r5, [r4, r1]
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_5.reg |= (megamux_sel << ((gpio_pin % 4) * 8));
1000844a:	5863      	ldr	r3, [r4, r1]
1000844c:	4082      	lsls	r2, r0
1000844e:	431a      	orrs	r2, r3
10008450:	5062      	str	r2, [r4, r1]
}
10008452:	e784      	b.n	1000835e <gpio_pinmux_cofiguration+0x2e>
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_4.reg &= ~(0x3F << ((gpio_pin % 4) * 8));
10008454:	31b0      	adds	r1, #176	; 0xb0
10008456:	31ff      	adds	r1, #255	; 0xff
10008458:	5865      	ldr	r5, [r4, r1]
1000845a:	2303      	movs	r3, #3
1000845c:	4018      	ands	r0, r3
1000845e:	00c0      	lsls	r0, r0, #3
10008460:	333c      	adds	r3, #60	; 0x3c
10008462:	4083      	lsls	r3, r0
10008464:	439d      	bics	r5, r3
10008466:	5065      	str	r5, [r4, r1]
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_4.reg |= (megamux_sel << ((gpio_pin % 4) * 8));
10008468:	5863      	ldr	r3, [r4, r1]
1000846a:	4082      	lsls	r2, r0
1000846c:	431a      	orrs	r2, r3
1000846e:	5062      	str	r2, [r4, r1]
10008470:	e775      	b.n	1000835e <gpio_pinmux_cofiguration+0x2e>
10008472:	46c0      	nop			; (mov r8, r8)
10008474:	4000b000 	.word	0x4000b000

10008478 <system_clock_config>:
 * \retval STATUS_ERR_INVALID_ARG  If data is invalid
 */
enum status_code system_clock_config(enum system_clock_resource resoure, \
				enum system_clock_freq freq)
{
	switch (resoure) {
10008478:	2801      	cmp	r0, #1
1000847a:	d019      	beq.n	100084b0 <system_clock_config+0x38>
1000847c:	2800      	cmp	r0, #0
1000847e:	d003      	beq.n	10008488 <system_clock_config+0x10>
10008480:	2802      	cmp	r0, #2
10008482:	d028      	beq.n	100084d6 <system_clock_config+0x5e>
					LPMCU_MISC_REGS_LPMCU_CONTROL_USE_ARM_LP_CLK);
			system_clock_value = 26000000;
			break;

		default:
			return STATUS_ERR_INVALID_ARG;
10008484:	2017      	movs	r0, #23
10008486:	e012      	b.n	100084ae <system_clock_config+0x36>
			LPMCU_MISC_REGS0->LPMCU_CONTROL.reg |= \
10008488:	4a17      	ldr	r2, [pc, #92]	; (100084e8 <system_clock_config+0x70>)
1000848a:	6993      	ldr	r3, [r2, #24]
1000848c:	200c      	movs	r0, #12
1000848e:	4303      	orrs	r3, r0
10008490:	6193      	str	r3, [r2, #24]
			system_clock_value = 26000000;
10008492:	4a16      	ldr	r2, [pc, #88]	; (100084ec <system_clock_config+0x74>)
10008494:	4b16      	ldr	r3, [pc, #88]	; (100084f0 <system_clock_config+0x78>)
10008496:	601a      	str	r2, [r3, #0]
	}

	LPMCU_MISC_REGS0->LPMCU_CONTROL.reg &= \
10008498:	4a13      	ldr	r2, [pc, #76]	; (100084e8 <system_clock_config+0x70>)
1000849a:	6993      	ldr	r3, [r2, #24]
1000849c:	2003      	movs	r0, #3
1000849e:	4383      	bics	r3, r0
100084a0:	6193      	str	r3, [r2, #24]
		~LPMCU_MISC_REGS_LPMCU_CONTROL_LPMCU_CLK_SEL_Msk;
	LPMCU_MISC_REGS0->LPMCU_CONTROL.reg |= \
100084a2:	6990      	ldr	r0, [r2, #24]
		LPMCU_MISC_REGS_LPMCU_CONTROL_LPMCU_CLK_SEL(freq);
100084a4:	2303      	movs	r3, #3
100084a6:	4019      	ands	r1, r3
	LPMCU_MISC_REGS0->LPMCU_CONTROL.reg |= \
100084a8:	4301      	orrs	r1, r0
100084aa:	6191      	str	r1, [r2, #24]

	return STATUS_OK;
100084ac:	2000      	movs	r0, #0
}
100084ae:	4770      	bx	lr
			LPMCU_MISC_REGS0->LPMCU_CONTROL.reg |= \
100084b0:	4b0d      	ldr	r3, [pc, #52]	; (100084e8 <system_clock_config+0x70>)
100084b2:	699a      	ldr	r2, [r3, #24]
100084b4:	2008      	movs	r0, #8
100084b6:	4302      	orrs	r2, r0
100084b8:	619a      	str	r2, [r3, #24]
			LPMCU_MISC_REGS0->LPMCU_CONTROL.reg &= \
100084ba:	699a      	ldr	r2, [r3, #24]
100084bc:	3804      	subs	r0, #4
100084be:	4382      	bics	r2, r0
100084c0:	619a      	str	r2, [r3, #24]
			AON_GP_REGS0->AON_PMU_CTRL.reg |= \
100084c2:	4a0c      	ldr	r2, [pc, #48]	; (100084f4 <system_clock_config+0x7c>)
100084c4:	6850      	ldr	r0, [r2, #4]
100084c6:	2380      	movs	r3, #128	; 0x80
100084c8:	031b      	lsls	r3, r3, #12
100084ca:	4303      	orrs	r3, r0
100084cc:	6053      	str	r3, [r2, #4]
			system_clock_value = 2000000;
100084ce:	4a0a      	ldr	r2, [pc, #40]	; (100084f8 <system_clock_config+0x80>)
100084d0:	4b07      	ldr	r3, [pc, #28]	; (100084f0 <system_clock_config+0x78>)
100084d2:	601a      	str	r2, [r3, #0]
			break;
100084d4:	e7e0      	b.n	10008498 <system_clock_config+0x20>
			LPMCU_MISC_REGS0->LPMCU_CONTROL.reg &= \
100084d6:	4a04      	ldr	r2, [pc, #16]	; (100084e8 <system_clock_config+0x70>)
100084d8:	6993      	ldr	r3, [r2, #24]
100084da:	200c      	movs	r0, #12
100084dc:	4383      	bics	r3, r0
100084de:	6193      	str	r3, [r2, #24]
			system_clock_value = 26000000;
100084e0:	4a02      	ldr	r2, [pc, #8]	; (100084ec <system_clock_config+0x74>)
100084e2:	4b03      	ldr	r3, [pc, #12]	; (100084f0 <system_clock_config+0x78>)
100084e4:	601a      	str	r2, [r3, #0]
			break;
100084e6:	e7d7      	b.n	10008498 <system_clock_config+0x20>
100084e8:	4000b000 	.word	0x4000b000
100084ec:	018cba80 	.word	0x018cba80
100084f0:	10011ed8 	.word	0x10011ed8
100084f4:	4000f000 	.word	0x4000f000
100084f8:	001e8480 	.word	0x001e8480

100084fc <system_clock_get_value>:
 *
 * \return system clock value.
 */
uint32_t system_clock_get_value(void)
{
	return system_clock_value;
100084fc:	4b01      	ldr	r3, [pc, #4]	; (10008504 <system_clock_get_value+0x8>)
100084fe:	6818      	ldr	r0, [r3, #0]
}
10008500:	4770      	bx	lr
10008502:	46c0      	nop			; (mov r8, r8)
10008504:	10011ed8 	.word	0x10011ed8

10008508 <system_clock_peripheral_enable>:
 * \return Status of operation.
 * \retval STATUS_OK               Clock config correctly
 * \retval STATUS_ERR_INVALID_ARG  If data is invalid
 */
enum status_code system_clock_peripheral_enable(enum system_peripheral peripheral)
{
10008508:	b500      	push	{lr}
	switch (peripheral) {
1000850a:	2835      	cmp	r0, #53	; 0x35
1000850c:	d900      	bls.n	10008510 <system_clock_peripheral_enable+0x8>
1000850e:	e1a2      	b.n	10008856 <system_clock_peripheral_enable+0x34e>
10008510:	0080      	lsls	r0, r0, #2
10008512:	4bd2      	ldr	r3, [pc, #840]	; (1000885c <system_clock_peripheral_enable+0x354>)
10008514:	581b      	ldr	r3, [r3, r0]
10008516:	469f      	mov	pc, r3
		case PERIPHERAL_SPI_FLASH:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008518:	4ad1      	ldr	r2, [pc, #836]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000851a:	68d3      	ldr	r3, [r2, #12]
1000851c:	2102      	movs	r1, #2
1000851e:	430b      	orrs	r3, r1
10008520:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008522:	2000      	movs	r0, #0
}
10008524:	bd00      	pop	{pc}
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008526:	4ace      	ldr	r2, [pc, #824]	; (10008860 <system_clock_peripheral_enable+0x358>)
10008528:	68d3      	ldr	r3, [r2, #12]
1000852a:	2104      	movs	r1, #4
1000852c:	430b      	orrs	r3, r1
1000852e:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
10008530:	2000      	movs	r0, #0
		break;
10008532:	e7f7      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008534:	4aca      	ldr	r2, [pc, #808]	; (10008860 <system_clock_peripheral_enable+0x358>)
10008536:	68d3      	ldr	r3, [r2, #12]
10008538:	2108      	movs	r1, #8
1000853a:	430b      	orrs	r3, r1
1000853c:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
1000853e:	2000      	movs	r0, #0
		break;
10008540:	e7f0      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008542:	4ac7      	ldr	r2, [pc, #796]	; (10008860 <system_clock_peripheral_enable+0x358>)
10008544:	68d3      	ldr	r3, [r2, #12]
10008546:	2110      	movs	r1, #16
10008548:	430b      	orrs	r3, r1
1000854a:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
1000854c:	2000      	movs	r0, #0
		break;
1000854e:	e7e9      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008550:	4ac3      	ldr	r2, [pc, #780]	; (10008860 <system_clock_peripheral_enable+0x358>)
10008552:	68d3      	ldr	r3, [r2, #12]
10008554:	2120      	movs	r1, #32
10008556:	430b      	orrs	r3, r1
10008558:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
1000855a:	2000      	movs	r0, #0
		break;
1000855c:	e7e2      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000855e:	4ac0      	ldr	r2, [pc, #768]	; (10008860 <system_clock_peripheral_enable+0x358>)
10008560:	68d3      	ldr	r3, [r2, #12]
10008562:	2180      	movs	r1, #128	; 0x80
10008564:	430b      	orrs	r3, r1
10008566:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
10008568:	2000      	movs	r0, #0
		break;
1000856a:	e7db      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000856c:	4abc      	ldr	r2, [pc, #752]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000856e:	68d1      	ldr	r1, [r2, #12]
10008570:	2380      	movs	r3, #128	; 0x80
10008572:	005b      	lsls	r3, r3, #1
10008574:	430b      	orrs	r3, r1
10008576:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
10008578:	2000      	movs	r0, #0
		break;
1000857a:	e7d3      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000857c:	4ab8      	ldr	r2, [pc, #736]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000857e:	68d1      	ldr	r1, [r2, #12]
10008580:	2380      	movs	r3, #128	; 0x80
10008582:	011b      	lsls	r3, r3, #4
10008584:	430b      	orrs	r3, r1
10008586:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
10008588:	2000      	movs	r0, #0
		break;
1000858a:	e7cb      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000858c:	4ab4      	ldr	r2, [pc, #720]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000858e:	68d1      	ldr	r1, [r2, #12]
10008590:	2380      	movs	r3, #128	; 0x80
10008592:	015b      	lsls	r3, r3, #5
10008594:	430b      	orrs	r3, r1
10008596:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
10008598:	2000      	movs	r0, #0
		break;
1000859a:	e7c3      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000859c:	4ab0      	ldr	r2, [pc, #704]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000859e:	68d1      	ldr	r1, [r2, #12]
100085a0:	2380      	movs	r3, #128	; 0x80
100085a2:	019b      	lsls	r3, r3, #6
100085a4:	430b      	orrs	r3, r1
100085a6:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
100085a8:	2000      	movs	r0, #0
		break;
100085aa:	e7bb      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
100085ac:	4aac      	ldr	r2, [pc, #688]	; (10008860 <system_clock_peripheral_enable+0x358>)
100085ae:	68d1      	ldr	r1, [r2, #12]
100085b0:	2380      	movs	r3, #128	; 0x80
100085b2:	01db      	lsls	r3, r3, #7
100085b4:	430b      	orrs	r3, r1
100085b6:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
100085b8:	2000      	movs	r0, #0
		break;
100085ba:	e7b3      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
100085bc:	4aa8      	ldr	r2, [pc, #672]	; (10008860 <system_clock_peripheral_enable+0x358>)
100085be:	68d1      	ldr	r1, [r2, #12]
100085c0:	2380      	movs	r3, #128	; 0x80
100085c2:	021b      	lsls	r3, r3, #8
100085c4:	430b      	orrs	r3, r1
100085c6:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
100085c8:	2000      	movs	r0, #0
		break;
100085ca:	e7ab      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
100085cc:	4aa4      	ldr	r2, [pc, #656]	; (10008860 <system_clock_peripheral_enable+0x358>)
100085ce:	68d1      	ldr	r1, [r2, #12]
100085d0:	2380      	movs	r3, #128	; 0x80
100085d2:	025b      	lsls	r3, r3, #9
100085d4:	430b      	orrs	r3, r1
100085d6:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
100085d8:	2000      	movs	r0, #0
		break;
100085da:	e7a3      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
100085dc:	4aa0      	ldr	r2, [pc, #640]	; (10008860 <system_clock_peripheral_enable+0x358>)
100085de:	68d1      	ldr	r1, [r2, #12]
100085e0:	2380      	movs	r3, #128	; 0x80
100085e2:	029b      	lsls	r3, r3, #10
100085e4:	430b      	orrs	r3, r1
100085e6:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
100085e8:	2000      	movs	r0, #0
		break;
100085ea:	e79b      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
100085ec:	4a9c      	ldr	r2, [pc, #624]	; (10008860 <system_clock_peripheral_enable+0x358>)
100085ee:	68d1      	ldr	r1, [r2, #12]
100085f0:	2380      	movs	r3, #128	; 0x80
100085f2:	02db      	lsls	r3, r3, #11
100085f4:	430b      	orrs	r3, r1
100085f6:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
100085f8:	2000      	movs	r0, #0
		break;
100085fa:	e793      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
100085fc:	4a98      	ldr	r2, [pc, #608]	; (10008860 <system_clock_peripheral_enable+0x358>)
100085fe:	68d1      	ldr	r1, [r2, #12]
10008600:	2380      	movs	r3, #128	; 0x80
10008602:	031b      	lsls	r3, r3, #12
10008604:	430b      	orrs	r3, r1
10008606:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
10008608:	2000      	movs	r0, #0
		break;
1000860a:	e78b      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000860c:	4a94      	ldr	r2, [pc, #592]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000860e:	68d1      	ldr	r1, [r2, #12]
10008610:	2380      	movs	r3, #128	; 0x80
10008612:	035b      	lsls	r3, r3, #13
10008614:	430b      	orrs	r3, r1
10008616:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
10008618:	2000      	movs	r0, #0
		break;
1000861a:	e783      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000861c:	4a90      	ldr	r2, [pc, #576]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000861e:	68d1      	ldr	r1, [r2, #12]
10008620:	2380      	movs	r3, #128	; 0x80
10008622:	039b      	lsls	r3, r3, #14
10008624:	430b      	orrs	r3, r1
10008626:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
10008628:	2000      	movs	r0, #0
		break;
1000862a:	e77b      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000862c:	4a8c      	ldr	r2, [pc, #560]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000862e:	68d1      	ldr	r1, [r2, #12]
10008630:	2380      	movs	r3, #128	; 0x80
10008632:	03db      	lsls	r3, r3, #15
10008634:	430b      	orrs	r3, r1
10008636:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
10008638:	2000      	movs	r0, #0
		break;
1000863a:	e773      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000863c:	4a88      	ldr	r2, [pc, #544]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000863e:	68d1      	ldr	r1, [r2, #12]
10008640:	2380      	movs	r3, #128	; 0x80
10008642:	041b      	lsls	r3, r3, #16
10008644:	430b      	orrs	r3, r1
10008646:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
10008648:	2000      	movs	r0, #0
		break;
1000864a:	e76b      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000864c:	4a84      	ldr	r2, [pc, #528]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000864e:	68d1      	ldr	r1, [r2, #12]
10008650:	2380      	movs	r3, #128	; 0x80
10008652:	045b      	lsls	r3, r3, #17
10008654:	430b      	orrs	r3, r1
10008656:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
10008658:	2000      	movs	r0, #0
		break;
1000865a:	e763      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000865c:	4a80      	ldr	r2, [pc, #512]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000865e:	68d1      	ldr	r1, [r2, #12]
10008660:	2380      	movs	r3, #128	; 0x80
10008662:	049b      	lsls	r3, r3, #18
10008664:	430b      	orrs	r3, r1
10008666:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
10008668:	2000      	movs	r0, #0
		break;
1000866a:	e75b      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000866c:	4a7c      	ldr	r2, [pc, #496]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000866e:	68d1      	ldr	r1, [r2, #12]
10008670:	2380      	movs	r3, #128	; 0x80
10008672:	04db      	lsls	r3, r3, #19
10008674:	430b      	orrs	r3, r1
10008676:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
10008678:	2000      	movs	r0, #0
		break;
1000867a:	e753      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000867c:	4a78      	ldr	r2, [pc, #480]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000867e:	68d1      	ldr	r1, [r2, #12]
10008680:	2380      	movs	r3, #128	; 0x80
10008682:	051b      	lsls	r3, r3, #20
10008684:	430b      	orrs	r3, r1
10008686:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
10008688:	2000      	movs	r0, #0
		break;
1000868a:	e74b      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000868c:	4a74      	ldr	r2, [pc, #464]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000868e:	68d1      	ldr	r1, [r2, #12]
10008690:	2380      	movs	r3, #128	; 0x80
10008692:	055b      	lsls	r3, r3, #21
10008694:	430b      	orrs	r3, r1
10008696:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
10008698:	2000      	movs	r0, #0
		break;
1000869a:	e743      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
1000869c:	4a70      	ldr	r2, [pc, #448]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000869e:	68d1      	ldr	r1, [r2, #12]
100086a0:	2380      	movs	r3, #128	; 0x80
100086a2:	059b      	lsls	r3, r3, #22
100086a4:	430b      	orrs	r3, r1
100086a6:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
100086a8:	2000      	movs	r0, #0
		break;
100086aa:	e73b      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
100086ac:	4a6c      	ldr	r2, [pc, #432]	; (10008860 <system_clock_peripheral_enable+0x358>)
100086ae:	68d1      	ldr	r1, [r2, #12]
100086b0:	2380      	movs	r3, #128	; 0x80
100086b2:	05db      	lsls	r3, r3, #23
100086b4:	430b      	orrs	r3, r1
100086b6:	60d3      	str	r3, [r2, #12]
	return STATUS_OK;
100086b8:	2000      	movs	r0, #0
		break;
100086ba:	e733      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
100086bc:	4a68      	ldr	r2, [pc, #416]	; (10008860 <system_clock_peripheral_enable+0x358>)
100086be:	6913      	ldr	r3, [r2, #16]
100086c0:	2101      	movs	r1, #1
100086c2:	430b      	orrs	r3, r1
100086c4:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
100086c6:	2000      	movs	r0, #0
		break;
100086c8:	e72c      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
100086ca:	4a65      	ldr	r2, [pc, #404]	; (10008860 <system_clock_peripheral_enable+0x358>)
100086cc:	6913      	ldr	r3, [r2, #16]
100086ce:	2102      	movs	r1, #2
100086d0:	430b      	orrs	r3, r1
100086d2:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
100086d4:	2000      	movs	r0, #0
		break;
100086d6:	e725      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
100086d8:	4a61      	ldr	r2, [pc, #388]	; (10008860 <system_clock_peripheral_enable+0x358>)
100086da:	6913      	ldr	r3, [r2, #16]
100086dc:	2104      	movs	r1, #4
100086de:	430b      	orrs	r3, r1
100086e0:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
100086e2:	2000      	movs	r0, #0
		break;
100086e4:	e71e      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
100086e6:	4a5e      	ldr	r2, [pc, #376]	; (10008860 <system_clock_peripheral_enable+0x358>)
100086e8:	6913      	ldr	r3, [r2, #16]
100086ea:	2108      	movs	r1, #8
100086ec:	430b      	orrs	r3, r1
100086ee:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
100086f0:	2000      	movs	r0, #0
		break;
100086f2:	e717      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
100086f4:	4a5a      	ldr	r2, [pc, #360]	; (10008860 <system_clock_peripheral_enable+0x358>)
100086f6:	6913      	ldr	r3, [r2, #16]
100086f8:	2110      	movs	r1, #16
100086fa:	430b      	orrs	r3, r1
100086fc:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
100086fe:	2000      	movs	r0, #0
		break;
10008700:	e710      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008702:	4a57      	ldr	r2, [pc, #348]	; (10008860 <system_clock_peripheral_enable+0x358>)
10008704:	6913      	ldr	r3, [r2, #16]
10008706:	2120      	movs	r1, #32
10008708:	430b      	orrs	r3, r1
1000870a:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
1000870c:	2000      	movs	r0, #0
		break;
1000870e:	e709      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008710:	4a53      	ldr	r2, [pc, #332]	; (10008860 <system_clock_peripheral_enable+0x358>)
10008712:	6913      	ldr	r3, [r2, #16]
10008714:	2140      	movs	r1, #64	; 0x40
10008716:	430b      	orrs	r3, r1
10008718:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
1000871a:	2000      	movs	r0, #0
		break;
1000871c:	e702      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000871e:	4a50      	ldr	r2, [pc, #320]	; (10008860 <system_clock_peripheral_enable+0x358>)
10008720:	6913      	ldr	r3, [r2, #16]
10008722:	2180      	movs	r1, #128	; 0x80
10008724:	430b      	orrs	r3, r1
10008726:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
10008728:	2000      	movs	r0, #0
		break;
1000872a:	e6fb      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000872c:	4a4c      	ldr	r2, [pc, #304]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000872e:	6911      	ldr	r1, [r2, #16]
10008730:	2380      	movs	r3, #128	; 0x80
10008732:	005b      	lsls	r3, r3, #1
10008734:	430b      	orrs	r3, r1
10008736:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
10008738:	2000      	movs	r0, #0
		break;
1000873a:	e6f3      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000873c:	4a48      	ldr	r2, [pc, #288]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000873e:	6911      	ldr	r1, [r2, #16]
10008740:	2380      	movs	r3, #128	; 0x80
10008742:	009b      	lsls	r3, r3, #2
10008744:	430b      	orrs	r3, r1
10008746:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
10008748:	2000      	movs	r0, #0
		break;
1000874a:	e6eb      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000874c:	4a44      	ldr	r2, [pc, #272]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000874e:	6911      	ldr	r1, [r2, #16]
10008750:	2380      	movs	r3, #128	; 0x80
10008752:	00db      	lsls	r3, r3, #3
10008754:	430b      	orrs	r3, r1
10008756:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
10008758:	2000      	movs	r0, #0
		break;
1000875a:	e6e3      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000875c:	4a40      	ldr	r2, [pc, #256]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000875e:	6911      	ldr	r1, [r2, #16]
10008760:	2380      	movs	r3, #128	; 0x80
10008762:	011b      	lsls	r3, r3, #4
10008764:	430b      	orrs	r3, r1
10008766:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
10008768:	2000      	movs	r0, #0
		break;
1000876a:	e6db      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000876c:	4a3c      	ldr	r2, [pc, #240]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000876e:	6911      	ldr	r1, [r2, #16]
10008770:	2380      	movs	r3, #128	; 0x80
10008772:	015b      	lsls	r3, r3, #5
10008774:	430b      	orrs	r3, r1
10008776:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
10008778:	2000      	movs	r0, #0
		break;
1000877a:	e6d3      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000877c:	4a38      	ldr	r2, [pc, #224]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000877e:	6911      	ldr	r1, [r2, #16]
10008780:	2380      	movs	r3, #128	; 0x80
10008782:	019b      	lsls	r3, r3, #6
10008784:	430b      	orrs	r3, r1
10008786:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
10008788:	2000      	movs	r0, #0
		break;
1000878a:	e6cb      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000878c:	4a34      	ldr	r2, [pc, #208]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000878e:	6911      	ldr	r1, [r2, #16]
10008790:	2380      	movs	r3, #128	; 0x80
10008792:	01db      	lsls	r3, r3, #7
10008794:	430b      	orrs	r3, r1
10008796:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
10008798:	2000      	movs	r0, #0
		break;
1000879a:	e6c3      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000879c:	4a30      	ldr	r2, [pc, #192]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000879e:	6911      	ldr	r1, [r2, #16]
100087a0:	2380      	movs	r3, #128	; 0x80
100087a2:	021b      	lsls	r3, r3, #8
100087a4:	430b      	orrs	r3, r1
100087a6:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
100087a8:	2000      	movs	r0, #0
		break;
100087aa:	e6bb      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
100087ac:	4a2c      	ldr	r2, [pc, #176]	; (10008860 <system_clock_peripheral_enable+0x358>)
100087ae:	6911      	ldr	r1, [r2, #16]
100087b0:	2380      	movs	r3, #128	; 0x80
100087b2:	025b      	lsls	r3, r3, #9
100087b4:	430b      	orrs	r3, r1
100087b6:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
100087b8:	2000      	movs	r0, #0
		break;
100087ba:	e6b3      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
100087bc:	4a28      	ldr	r2, [pc, #160]	; (10008860 <system_clock_peripheral_enable+0x358>)
100087be:	6911      	ldr	r1, [r2, #16]
100087c0:	2380      	movs	r3, #128	; 0x80
100087c2:	029b      	lsls	r3, r3, #10
100087c4:	430b      	orrs	r3, r1
100087c6:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
100087c8:	2000      	movs	r0, #0
		break;
100087ca:	e6ab      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
100087cc:	4a24      	ldr	r2, [pc, #144]	; (10008860 <system_clock_peripheral_enable+0x358>)
100087ce:	6911      	ldr	r1, [r2, #16]
100087d0:	2380      	movs	r3, #128	; 0x80
100087d2:	02db      	lsls	r3, r3, #11
100087d4:	430b      	orrs	r3, r1
100087d6:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
100087d8:	2000      	movs	r0, #0
		break;
100087da:	e6a3      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
100087dc:	4a20      	ldr	r2, [pc, #128]	; (10008860 <system_clock_peripheral_enable+0x358>)
100087de:	6911      	ldr	r1, [r2, #16]
100087e0:	2380      	movs	r3, #128	; 0x80
100087e2:	031b      	lsls	r3, r3, #12
100087e4:	430b      	orrs	r3, r1
100087e6:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
100087e8:	2000      	movs	r0, #0
		break;
100087ea:	e69b      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
100087ec:	4a1c      	ldr	r2, [pc, #112]	; (10008860 <system_clock_peripheral_enable+0x358>)
100087ee:	6911      	ldr	r1, [r2, #16]
100087f0:	2380      	movs	r3, #128	; 0x80
100087f2:	035b      	lsls	r3, r3, #13
100087f4:	430b      	orrs	r3, r1
100087f6:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
100087f8:	2000      	movs	r0, #0
		break;
100087fa:	e693      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
100087fc:	4a18      	ldr	r2, [pc, #96]	; (10008860 <system_clock_peripheral_enable+0x358>)
100087fe:	6911      	ldr	r1, [r2, #16]
10008800:	2380      	movs	r3, #128	; 0x80
10008802:	039b      	lsls	r3, r3, #14
10008804:	430b      	orrs	r3, r1
10008806:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
10008808:	2000      	movs	r0, #0
		break;
1000880a:	e68b      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000880c:	4a14      	ldr	r2, [pc, #80]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000880e:	6911      	ldr	r1, [r2, #16]
10008810:	2380      	movs	r3, #128	; 0x80
10008812:	03db      	lsls	r3, r3, #15
10008814:	430b      	orrs	r3, r1
10008816:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
10008818:	2000      	movs	r0, #0
		break;
1000881a:	e683      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
1000881c:	4a10      	ldr	r2, [pc, #64]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000881e:	6911      	ldr	r1, [r2, #16]
10008820:	2380      	movs	r3, #128	; 0x80
10008822:	041b      	lsls	r3, r3, #16
10008824:	430b      	orrs	r3, r1
10008826:	6113      	str	r3, [r2, #16]
	return STATUS_OK;
10008828:	2000      	movs	r0, #0
		break;
1000882a:	e67b      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->BTMCU_CONTROL.reg |= \
1000882c:	4a0c      	ldr	r2, [pc, #48]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000882e:	7d13      	ldrb	r3, [r2, #20]
10008830:	2101      	movs	r1, #1
10008832:	430b      	orrs	r3, r1
10008834:	7513      	strb	r3, [r2, #20]
	return STATUS_OK;
10008836:	2000      	movs	r0, #0
		break;
10008838:	e674      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->BTMCU_CONTROL.reg |= \
1000883a:	4a09      	ldr	r2, [pc, #36]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000883c:	7d13      	ldrb	r3, [r2, #20]
1000883e:	2102      	movs	r1, #2
10008840:	430b      	orrs	r3, r1
10008842:	7513      	strb	r3, [r2, #20]
	return STATUS_OK;
10008844:	2000      	movs	r0, #0
		break;
10008846:	e66d      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			LPMCU_MISC_REGS0->BTMCU_CONTROL.reg |= \
10008848:	4a05      	ldr	r2, [pc, #20]	; (10008860 <system_clock_peripheral_enable+0x358>)
1000884a:	7d13      	ldrb	r3, [r2, #20]
1000884c:	2104      	movs	r1, #4
1000884e:	430b      	orrs	r3, r1
10008850:	7513      	strb	r3, [r2, #20]
	return STATUS_OK;
10008852:	2000      	movs	r0, #0
		break;
10008854:	e666      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
			return STATUS_ERR_INVALID_ARG;
10008856:	2017      	movs	r0, #23
10008858:	e664      	b.n	10008524 <system_clock_peripheral_enable+0x1c>
1000885a:	46c0      	nop			; (mov r8, r8)
1000885c:	1000fd04 	.word	0x1000fd04
10008860:	4000b000 	.word	0x4000b000

10008864 <system_peripheral_reset>:
 * \return Status of operation.
 * \retval STATUS_OK               Clock config correctly
 * \retval STATUS_ERR_INVALID_ARG  If data is invalid
 */
enum status_code system_peripheral_reset(enum system_peripheral peripheral)
{
10008864:	b500      	push	{lr}
	switch (peripheral) {
10008866:	2843      	cmp	r0, #67	; 0x43
10008868:	d900      	bls.n	1000886c <system_peripheral_reset+0x8>
1000886a:	e21b      	b.n	10008ca4 <system_peripheral_reset+0x440>
1000886c:	0080      	lsls	r0, r0, #2
1000886e:	4bd7      	ldr	r3, [pc, #860]	; (10008bcc <system_peripheral_reset+0x368>)
10008870:	581b      	ldr	r3, [r3, r0]
10008872:	469f      	mov	pc, r3
		case PERIPHERAL_LPMCU_CPU:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008874:	4bd6      	ldr	r3, [pc, #856]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008876:	6859      	ldr	r1, [r3, #4]
10008878:	2002      	movs	r0, #2
1000887a:	4381      	bics	r1, r0
1000887c:	6059      	str	r1, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CPU_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000887e:	685a      	ldr	r2, [r3, #4]
10008880:	4302      	orrs	r2, r0
10008882:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008884:	2000      	movs	r0, #0
}
10008886:	bd00      	pop	{pc}
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008888:	4bd1      	ldr	r3, [pc, #836]	; (10008bd0 <system_peripheral_reset+0x36c>)
1000888a:	6859      	ldr	r1, [r3, #4]
1000888c:	2004      	movs	r0, #4
1000888e:	4381      	bics	r1, r0
10008890:	6059      	str	r1, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008892:	685a      	ldr	r2, [r3, #4]
10008894:	4302      	orrs	r2, r0
10008896:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
10008898:	2000      	movs	r0, #0
		break;
1000889a:	e7f4      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000889c:	4bcc      	ldr	r3, [pc, #816]	; (10008bd0 <system_peripheral_reset+0x36c>)
1000889e:	6859      	ldr	r1, [r3, #4]
100088a0:	2008      	movs	r0, #8
100088a2:	4381      	bics	r1, r0
100088a4:	6059      	str	r1, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
100088a6:	685a      	ldr	r2, [r3, #4]
100088a8:	4302      	orrs	r2, r0
100088aa:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
100088ac:	2000      	movs	r0, #0
		break;
100088ae:	e7ea      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
100088b0:	4bc7      	ldr	r3, [pc, #796]	; (10008bd0 <system_peripheral_reset+0x36c>)
100088b2:	6859      	ldr	r1, [r3, #4]
100088b4:	2010      	movs	r0, #16
100088b6:	4381      	bics	r1, r0
100088b8:	6059      	str	r1, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
100088ba:	685a      	ldr	r2, [r3, #4]
100088bc:	4302      	orrs	r2, r0
100088be:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
100088c0:	2000      	movs	r0, #0
		break;
100088c2:	e7e0      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
100088c4:	4bc2      	ldr	r3, [pc, #776]	; (10008bd0 <system_peripheral_reset+0x36c>)
100088c6:	6859      	ldr	r1, [r3, #4]
100088c8:	2020      	movs	r0, #32
100088ca:	4381      	bics	r1, r0
100088cc:	6059      	str	r1, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
100088ce:	685a      	ldr	r2, [r3, #4]
100088d0:	4302      	orrs	r2, r0
100088d2:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
100088d4:	2000      	movs	r0, #0
		break;
100088d6:	e7d6      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
100088d8:	4bbd      	ldr	r3, [pc, #756]	; (10008bd0 <system_peripheral_reset+0x36c>)
100088da:	6859      	ldr	r1, [r3, #4]
100088dc:	2040      	movs	r0, #64	; 0x40
100088de:	4381      	bics	r1, r0
100088e0:	6059      	str	r1, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
100088e2:	685a      	ldr	r2, [r3, #4]
100088e4:	4302      	orrs	r2, r0
100088e6:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
100088e8:	2000      	movs	r0, #0
		break;
100088ea:	e7cc      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
100088ec:	4bb8      	ldr	r3, [pc, #736]	; (10008bd0 <system_peripheral_reset+0x36c>)
100088ee:	6859      	ldr	r1, [r3, #4]
100088f0:	2080      	movs	r0, #128	; 0x80
100088f2:	4381      	bics	r1, r0
100088f4:	6059      	str	r1, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
100088f6:	685a      	ldr	r2, [r3, #4]
100088f8:	4302      	orrs	r2, r0
100088fa:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
100088fc:	2000      	movs	r0, #0
		break;
100088fe:	e7c2      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008900:	4bb3      	ldr	r3, [pc, #716]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008902:	685a      	ldr	r2, [r3, #4]
10008904:	49b3      	ldr	r1, [pc, #716]	; (10008bd4 <system_peripheral_reset+0x370>)
10008906:	400a      	ands	r2, r1
10008908:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000890a:	6859      	ldr	r1, [r3, #4]
1000890c:	2280      	movs	r2, #128	; 0x80
1000890e:	0052      	lsls	r2, r2, #1
10008910:	430a      	orrs	r2, r1
10008912:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
10008914:	2000      	movs	r0, #0
		break;
10008916:	e7b6      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008918:	4bad      	ldr	r3, [pc, #692]	; (10008bd0 <system_peripheral_reset+0x36c>)
1000891a:	685a      	ldr	r2, [r3, #4]
1000891c:	49ae      	ldr	r1, [pc, #696]	; (10008bd8 <system_peripheral_reset+0x374>)
1000891e:	400a      	ands	r2, r1
10008920:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008922:	6859      	ldr	r1, [r3, #4]
10008924:	2280      	movs	r2, #128	; 0x80
10008926:	0092      	lsls	r2, r2, #2
10008928:	430a      	orrs	r2, r1
1000892a:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
1000892c:	2000      	movs	r0, #0
		break;
1000892e:	e7aa      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008930:	4ba7      	ldr	r3, [pc, #668]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008932:	685a      	ldr	r2, [r3, #4]
10008934:	49a9      	ldr	r1, [pc, #676]	; (10008bdc <system_peripheral_reset+0x378>)
10008936:	400a      	ands	r2, r1
10008938:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000893a:	6859      	ldr	r1, [r3, #4]
1000893c:	2280      	movs	r2, #128	; 0x80
1000893e:	00d2      	lsls	r2, r2, #3
10008940:	430a      	orrs	r2, r1
10008942:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
10008944:	2000      	movs	r0, #0
		break;
10008946:	e79e      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008948:	4ba1      	ldr	r3, [pc, #644]	; (10008bd0 <system_peripheral_reset+0x36c>)
1000894a:	685a      	ldr	r2, [r3, #4]
1000894c:	49a4      	ldr	r1, [pc, #656]	; (10008be0 <system_peripheral_reset+0x37c>)
1000894e:	400a      	ands	r2, r1
10008950:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008952:	6859      	ldr	r1, [r3, #4]
10008954:	2280      	movs	r2, #128	; 0x80
10008956:	0112      	lsls	r2, r2, #4
10008958:	430a      	orrs	r2, r1
1000895a:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
1000895c:	2000      	movs	r0, #0
		break;
1000895e:	e792      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008960:	4b9b      	ldr	r3, [pc, #620]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008962:	685a      	ldr	r2, [r3, #4]
10008964:	499f      	ldr	r1, [pc, #636]	; (10008be4 <system_peripheral_reset+0x380>)
10008966:	400a      	ands	r2, r1
10008968:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000896a:	6859      	ldr	r1, [r3, #4]
1000896c:	2280      	movs	r2, #128	; 0x80
1000896e:	0152      	lsls	r2, r2, #5
10008970:	430a      	orrs	r2, r1
10008972:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
10008974:	2000      	movs	r0, #0
		break;
10008976:	e786      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008978:	4b95      	ldr	r3, [pc, #596]	; (10008bd0 <system_peripheral_reset+0x36c>)
1000897a:	685a      	ldr	r2, [r3, #4]
1000897c:	499a      	ldr	r1, [pc, #616]	; (10008be8 <system_peripheral_reset+0x384>)
1000897e:	400a      	ands	r2, r1
10008980:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008982:	6859      	ldr	r1, [r3, #4]
10008984:	2280      	movs	r2, #128	; 0x80
10008986:	0192      	lsls	r2, r2, #6
10008988:	430a      	orrs	r2, r1
1000898a:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
1000898c:	2000      	movs	r0, #0
		break;
1000898e:	e77a      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008990:	4b8f      	ldr	r3, [pc, #572]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008992:	685a      	ldr	r2, [r3, #4]
10008994:	4995      	ldr	r1, [pc, #596]	; (10008bec <system_peripheral_reset+0x388>)
10008996:	400a      	ands	r2, r1
10008998:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000899a:	6859      	ldr	r1, [r3, #4]
1000899c:	2280      	movs	r2, #128	; 0x80
1000899e:	01d2      	lsls	r2, r2, #7
100089a0:	430a      	orrs	r2, r1
100089a2:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
100089a4:	2000      	movs	r0, #0
		break;
100089a6:	e76e      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
100089a8:	4b89      	ldr	r3, [pc, #548]	; (10008bd0 <system_peripheral_reset+0x36c>)
100089aa:	685a      	ldr	r2, [r3, #4]
100089ac:	4990      	ldr	r1, [pc, #576]	; (10008bf0 <system_peripheral_reset+0x38c>)
100089ae:	400a      	ands	r2, r1
100089b0:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
100089b2:	6859      	ldr	r1, [r3, #4]
100089b4:	2280      	movs	r2, #128	; 0x80
100089b6:	0212      	lsls	r2, r2, #8
100089b8:	430a      	orrs	r2, r1
100089ba:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
100089bc:	2000      	movs	r0, #0
		break;
100089be:	e762      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
100089c0:	4b83      	ldr	r3, [pc, #524]	; (10008bd0 <system_peripheral_reset+0x36c>)
100089c2:	685a      	ldr	r2, [r3, #4]
100089c4:	498b      	ldr	r1, [pc, #556]	; (10008bf4 <system_peripheral_reset+0x390>)
100089c6:	400a      	ands	r2, r1
100089c8:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
100089ca:	6859      	ldr	r1, [r3, #4]
100089cc:	2280      	movs	r2, #128	; 0x80
100089ce:	0252      	lsls	r2, r2, #9
100089d0:	430a      	orrs	r2, r1
100089d2:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
100089d4:	2000      	movs	r0, #0
		break;
100089d6:	e756      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
100089d8:	4b7d      	ldr	r3, [pc, #500]	; (10008bd0 <system_peripheral_reset+0x36c>)
100089da:	685a      	ldr	r2, [r3, #4]
100089dc:	4986      	ldr	r1, [pc, #536]	; (10008bf8 <system_peripheral_reset+0x394>)
100089de:	400a      	ands	r2, r1
100089e0:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
100089e2:	6859      	ldr	r1, [r3, #4]
100089e4:	2280      	movs	r2, #128	; 0x80
100089e6:	0292      	lsls	r2, r2, #10
100089e8:	430a      	orrs	r2, r1
100089ea:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
100089ec:	2000      	movs	r0, #0
		break;
100089ee:	e74a      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
100089f0:	4b77      	ldr	r3, [pc, #476]	; (10008bd0 <system_peripheral_reset+0x36c>)
100089f2:	685a      	ldr	r2, [r3, #4]
100089f4:	4981      	ldr	r1, [pc, #516]	; (10008bfc <system_peripheral_reset+0x398>)
100089f6:	400a      	ands	r2, r1
100089f8:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
100089fa:	6859      	ldr	r1, [r3, #4]
100089fc:	2280      	movs	r2, #128	; 0x80
100089fe:	02d2      	lsls	r2, r2, #11
10008a00:	430a      	orrs	r2, r1
10008a02:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
10008a04:	2000      	movs	r0, #0
		break;
10008a06:	e73e      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008a08:	4b71      	ldr	r3, [pc, #452]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008a0a:	685a      	ldr	r2, [r3, #4]
10008a0c:	497c      	ldr	r1, [pc, #496]	; (10008c00 <system_peripheral_reset+0x39c>)
10008a0e:	400a      	ands	r2, r1
10008a10:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008a12:	6859      	ldr	r1, [r3, #4]
10008a14:	2280      	movs	r2, #128	; 0x80
10008a16:	0312      	lsls	r2, r2, #12
10008a18:	430a      	orrs	r2, r1
10008a1a:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
10008a1c:	2000      	movs	r0, #0
		break;
10008a1e:	e732      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008a20:	4b6b      	ldr	r3, [pc, #428]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008a22:	685a      	ldr	r2, [r3, #4]
10008a24:	4977      	ldr	r1, [pc, #476]	; (10008c04 <system_peripheral_reset+0x3a0>)
10008a26:	400a      	ands	r2, r1
10008a28:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008a2a:	6859      	ldr	r1, [r3, #4]
10008a2c:	2280      	movs	r2, #128	; 0x80
10008a2e:	0352      	lsls	r2, r2, #13
10008a30:	430a      	orrs	r2, r1
10008a32:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
10008a34:	2000      	movs	r0, #0
		break;
10008a36:	e726      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008a38:	4b65      	ldr	r3, [pc, #404]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008a3a:	685a      	ldr	r2, [r3, #4]
10008a3c:	4972      	ldr	r1, [pc, #456]	; (10008c08 <system_peripheral_reset+0x3a4>)
10008a3e:	400a      	ands	r2, r1
10008a40:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008a42:	6859      	ldr	r1, [r3, #4]
10008a44:	2280      	movs	r2, #128	; 0x80
10008a46:	0392      	lsls	r2, r2, #14
10008a48:	430a      	orrs	r2, r1
10008a4a:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
10008a4c:	2000      	movs	r0, #0
		break;
10008a4e:	e71a      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008a50:	4b5f      	ldr	r3, [pc, #380]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008a52:	685a      	ldr	r2, [r3, #4]
10008a54:	496d      	ldr	r1, [pc, #436]	; (10008c0c <system_peripheral_reset+0x3a8>)
10008a56:	400a      	ands	r2, r1
10008a58:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008a5a:	6859      	ldr	r1, [r3, #4]
10008a5c:	2280      	movs	r2, #128	; 0x80
10008a5e:	03d2      	lsls	r2, r2, #15
10008a60:	430a      	orrs	r2, r1
10008a62:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
10008a64:	2000      	movs	r0, #0
		break;
10008a66:	e70e      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008a68:	4b59      	ldr	r3, [pc, #356]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008a6a:	685a      	ldr	r2, [r3, #4]
10008a6c:	4968      	ldr	r1, [pc, #416]	; (10008c10 <system_peripheral_reset+0x3ac>)
10008a6e:	400a      	ands	r2, r1
10008a70:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008a72:	6859      	ldr	r1, [r3, #4]
10008a74:	2280      	movs	r2, #128	; 0x80
10008a76:	0412      	lsls	r2, r2, #16
10008a78:	430a      	orrs	r2, r1
10008a7a:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
10008a7c:	2000      	movs	r0, #0
		break;
10008a7e:	e702      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008a80:	4b53      	ldr	r3, [pc, #332]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008a82:	685a      	ldr	r2, [r3, #4]
10008a84:	4963      	ldr	r1, [pc, #396]	; (10008c14 <system_peripheral_reset+0x3b0>)
10008a86:	400a      	ands	r2, r1
10008a88:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008a8a:	6859      	ldr	r1, [r3, #4]
10008a8c:	2280      	movs	r2, #128	; 0x80
10008a8e:	0452      	lsls	r2, r2, #17
10008a90:	430a      	orrs	r2, r1
10008a92:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
10008a94:	2000      	movs	r0, #0
		break;
10008a96:	e6f6      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008a98:	4b4d      	ldr	r3, [pc, #308]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008a9a:	685a      	ldr	r2, [r3, #4]
10008a9c:	495e      	ldr	r1, [pc, #376]	; (10008c18 <system_peripheral_reset+0x3b4>)
10008a9e:	400a      	ands	r2, r1
10008aa0:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008aa2:	6859      	ldr	r1, [r3, #4]
10008aa4:	2280      	movs	r2, #128	; 0x80
10008aa6:	0492      	lsls	r2, r2, #18
10008aa8:	430a      	orrs	r2, r1
10008aaa:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
10008aac:	2000      	movs	r0, #0
		break;
10008aae:	e6ea      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008ab0:	4b47      	ldr	r3, [pc, #284]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008ab2:	685a      	ldr	r2, [r3, #4]
10008ab4:	4959      	ldr	r1, [pc, #356]	; (10008c1c <system_peripheral_reset+0x3b8>)
10008ab6:	400a      	ands	r2, r1
10008ab8:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008aba:	6859      	ldr	r1, [r3, #4]
10008abc:	2280      	movs	r2, #128	; 0x80
10008abe:	04d2      	lsls	r2, r2, #19
10008ac0:	430a      	orrs	r2, r1
10008ac2:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
10008ac4:	2000      	movs	r0, #0
		break;
10008ac6:	e6de      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008ac8:	4b41      	ldr	r3, [pc, #260]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008aca:	685a      	ldr	r2, [r3, #4]
10008acc:	4954      	ldr	r1, [pc, #336]	; (10008c20 <system_peripheral_reset+0x3bc>)
10008ace:	400a      	ands	r2, r1
10008ad0:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008ad2:	6859      	ldr	r1, [r3, #4]
10008ad4:	2280      	movs	r2, #128	; 0x80
10008ad6:	0512      	lsls	r2, r2, #20
10008ad8:	430a      	orrs	r2, r1
10008ada:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
10008adc:	2000      	movs	r0, #0
		break;
10008ade:	e6d2      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008ae0:	4b3b      	ldr	r3, [pc, #236]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008ae2:	685a      	ldr	r2, [r3, #4]
10008ae4:	494f      	ldr	r1, [pc, #316]	; (10008c24 <system_peripheral_reset+0x3c0>)
10008ae6:	400a      	ands	r2, r1
10008ae8:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008aea:	6859      	ldr	r1, [r3, #4]
10008aec:	2280      	movs	r2, #128	; 0x80
10008aee:	0552      	lsls	r2, r2, #21
10008af0:	430a      	orrs	r2, r1
10008af2:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
10008af4:	2000      	movs	r0, #0
		break;
10008af6:	e6c6      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008af8:	4b35      	ldr	r3, [pc, #212]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008afa:	685a      	ldr	r2, [r3, #4]
10008afc:	494a      	ldr	r1, [pc, #296]	; (10008c28 <system_peripheral_reset+0x3c4>)
10008afe:	400a      	ands	r2, r1
10008b00:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008b02:	6859      	ldr	r1, [r3, #4]
10008b04:	2280      	movs	r2, #128	; 0x80
10008b06:	0592      	lsls	r2, r2, #22
10008b08:	430a      	orrs	r2, r1
10008b0a:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
10008b0c:	2000      	movs	r0, #0
		break;
10008b0e:	e6ba      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008b10:	4b2f      	ldr	r3, [pc, #188]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008b12:	685a      	ldr	r2, [r3, #4]
10008b14:	4945      	ldr	r1, [pc, #276]	; (10008c2c <system_peripheral_reset+0x3c8>)
10008b16:	400a      	ands	r2, r1
10008b18:	605a      	str	r2, [r3, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008b1a:	6859      	ldr	r1, [r3, #4]
10008b1c:	2280      	movs	r2, #128	; 0x80
10008b1e:	05d2      	lsls	r2, r2, #23
10008b20:	430a      	orrs	r2, r1
10008b22:	605a      	str	r2, [r3, #4]
	return STATUS_OK;
10008b24:	2000      	movs	r0, #0
		break;
10008b26:	e6ae      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008b28:	4a29      	ldr	r2, [pc, #164]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008b2a:	6853      	ldr	r3, [r2, #4]
10008b2c:	005b      	lsls	r3, r3, #1
10008b2e:	085b      	lsrs	r3, r3, #1
10008b30:	6053      	str	r3, [r2, #4]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008b32:	6851      	ldr	r1, [r2, #4]
10008b34:	2380      	movs	r3, #128	; 0x80
10008b36:	061b      	lsls	r3, r3, #24
10008b38:	430b      	orrs	r3, r1
10008b3a:	6053      	str	r3, [r2, #4]
	return STATUS_OK;
10008b3c:	2000      	movs	r0, #0
		break;
10008b3e:	e6a2      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10008b40:	4b23      	ldr	r3, [pc, #140]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008b42:	891a      	ldrh	r2, [r3, #8]
10008b44:	2101      	movs	r1, #1
10008b46:	438a      	bics	r2, r1
10008b48:	811a      	strh	r2, [r3, #8]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
10008b4a:	891a      	ldrh	r2, [r3, #8]
10008b4c:	430a      	orrs	r2, r1
10008b4e:	811a      	strh	r2, [r3, #8]
	return STATUS_OK;
10008b50:	2000      	movs	r0, #0
		break;
10008b52:	e698      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10008b54:	4b1e      	ldr	r3, [pc, #120]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008b56:	891a      	ldrh	r2, [r3, #8]
10008b58:	2102      	movs	r1, #2
10008b5a:	438a      	bics	r2, r1
10008b5c:	811a      	strh	r2, [r3, #8]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
10008b5e:	891a      	ldrh	r2, [r3, #8]
10008b60:	430a      	orrs	r2, r1
10008b62:	811a      	strh	r2, [r3, #8]
	return STATUS_OK;
10008b64:	2000      	movs	r0, #0
		break;
10008b66:	e68e      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10008b68:	4b19      	ldr	r3, [pc, #100]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008b6a:	891a      	ldrh	r2, [r3, #8]
10008b6c:	2104      	movs	r1, #4
10008b6e:	438a      	bics	r2, r1
10008b70:	811a      	strh	r2, [r3, #8]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
10008b72:	891a      	ldrh	r2, [r3, #8]
10008b74:	430a      	orrs	r2, r1
10008b76:	811a      	strh	r2, [r3, #8]
	return STATUS_OK;
10008b78:	2000      	movs	r0, #0
		break;
10008b7a:	e684      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10008b7c:	4b14      	ldr	r3, [pc, #80]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008b7e:	891a      	ldrh	r2, [r3, #8]
10008b80:	2108      	movs	r1, #8
10008b82:	438a      	bics	r2, r1
10008b84:	811a      	strh	r2, [r3, #8]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
10008b86:	891a      	ldrh	r2, [r3, #8]
10008b88:	430a      	orrs	r2, r1
10008b8a:	811a      	strh	r2, [r3, #8]
	return STATUS_OK;
10008b8c:	2000      	movs	r0, #0
		break;
10008b8e:	e67a      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10008b90:	4b0f      	ldr	r3, [pc, #60]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008b92:	891a      	ldrh	r2, [r3, #8]
10008b94:	2110      	movs	r1, #16
10008b96:	438a      	bics	r2, r1
10008b98:	811a      	strh	r2, [r3, #8]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
10008b9a:	891a      	ldrh	r2, [r3, #8]
10008b9c:	430a      	orrs	r2, r1
10008b9e:	811a      	strh	r2, [r3, #8]
	return STATUS_OK;
10008ba0:	2000      	movs	r0, #0
		break;
10008ba2:	e670      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10008ba4:	4b0a      	ldr	r3, [pc, #40]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008ba6:	891a      	ldrh	r2, [r3, #8]
10008ba8:	2120      	movs	r1, #32
10008baa:	438a      	bics	r2, r1
10008bac:	811a      	strh	r2, [r3, #8]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
10008bae:	891a      	ldrh	r2, [r3, #8]
10008bb0:	430a      	orrs	r2, r1
10008bb2:	811a      	strh	r2, [r3, #8]
	return STATUS_OK;
10008bb4:	2000      	movs	r0, #0
		break;
10008bb6:	e666      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10008bb8:	4b05      	ldr	r3, [pc, #20]	; (10008bd0 <system_peripheral_reset+0x36c>)
10008bba:	891a      	ldrh	r2, [r3, #8]
10008bbc:	2140      	movs	r1, #64	; 0x40
10008bbe:	438a      	bics	r2, r1
10008bc0:	811a      	strh	r2, [r3, #8]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
10008bc2:	891a      	ldrh	r2, [r3, #8]
10008bc4:	430a      	orrs	r2, r1
10008bc6:	811a      	strh	r2, [r3, #8]
	return STATUS_OK;
10008bc8:	2000      	movs	r0, #0
		break;
10008bca:	e65c      	b.n	10008886 <system_peripheral_reset+0x22>
10008bcc:	1000fddc 	.word	0x1000fddc
10008bd0:	4000b000 	.word	0x4000b000
10008bd4:	fffffeff 	.word	0xfffffeff
10008bd8:	fffffdff 	.word	0xfffffdff
10008bdc:	fffffbff 	.word	0xfffffbff
10008be0:	fffff7ff 	.word	0xfffff7ff
10008be4:	ffffefff 	.word	0xffffefff
10008be8:	ffffdfff 	.word	0xffffdfff
10008bec:	ffffbfff 	.word	0xffffbfff
10008bf0:	ffff7fff 	.word	0xffff7fff
10008bf4:	fffeffff 	.word	0xfffeffff
10008bf8:	fffdffff 	.word	0xfffdffff
10008bfc:	fffbffff 	.word	0xfffbffff
10008c00:	fff7ffff 	.word	0xfff7ffff
10008c04:	ffefffff 	.word	0xffefffff
10008c08:	ffdfffff 	.word	0xffdfffff
10008c0c:	ffbfffff 	.word	0xffbfffff
10008c10:	ff7fffff 	.word	0xff7fffff
10008c14:	feffffff 	.word	0xfeffffff
10008c18:	fdffffff 	.word	0xfdffffff
10008c1c:	fbffffff 	.word	0xfbffffff
10008c20:	f7ffffff 	.word	0xf7ffffff
10008c24:	efffffff 	.word	0xefffffff
10008c28:	dfffffff 	.word	0xdfffffff
10008c2c:	bfffffff 	.word	0xbfffffff
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10008c30:	4b1d      	ldr	r3, [pc, #116]	; (10008ca8 <system_peripheral_reset+0x444>)
10008c32:	891a      	ldrh	r2, [r3, #8]
10008c34:	2180      	movs	r1, #128	; 0x80
10008c36:	438a      	bics	r2, r1
10008c38:	811a      	strh	r2, [r3, #8]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
10008c3a:	891a      	ldrh	r2, [r3, #8]
10008c3c:	430a      	orrs	r2, r1
10008c3e:	811a      	strh	r2, [r3, #8]
	return STATUS_OK;
10008c40:	2000      	movs	r0, #0
		break;
10008c42:	e620      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10008c44:	4b18      	ldr	r3, [pc, #96]	; (10008ca8 <system_peripheral_reset+0x444>)
10008c46:	891a      	ldrh	r2, [r3, #8]
10008c48:	4918      	ldr	r1, [pc, #96]	; (10008cac <system_peripheral_reset+0x448>)
10008c4a:	400a      	ands	r2, r1
10008c4c:	811a      	strh	r2, [r3, #8]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
10008c4e:	891a      	ldrh	r2, [r3, #8]
10008c50:	2180      	movs	r1, #128	; 0x80
10008c52:	0049      	lsls	r1, r1, #1
10008c54:	430a      	orrs	r2, r1
10008c56:	811a      	strh	r2, [r3, #8]
	return STATUS_OK;
10008c58:	2000      	movs	r0, #0
		break;
10008c5a:	e614      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10008c5c:	4b12      	ldr	r3, [pc, #72]	; (10008ca8 <system_peripheral_reset+0x444>)
10008c5e:	891a      	ldrh	r2, [r3, #8]
10008c60:	4913      	ldr	r1, [pc, #76]	; (10008cb0 <system_peripheral_reset+0x44c>)
10008c62:	400a      	ands	r2, r1
10008c64:	811a      	strh	r2, [r3, #8]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
10008c66:	891a      	ldrh	r2, [r3, #8]
10008c68:	2180      	movs	r1, #128	; 0x80
10008c6a:	0089      	lsls	r1, r1, #2
10008c6c:	430a      	orrs	r2, r1
10008c6e:	811a      	strh	r2, [r3, #8]
	return STATUS_OK;
10008c70:	2000      	movs	r0, #0
		break;
10008c72:	e608      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10008c74:	4b0c      	ldr	r3, [pc, #48]	; (10008ca8 <system_peripheral_reset+0x444>)
10008c76:	891a      	ldrh	r2, [r3, #8]
10008c78:	490e      	ldr	r1, [pc, #56]	; (10008cb4 <system_peripheral_reset+0x450>)
10008c7a:	400a      	ands	r2, r1
10008c7c:	811a      	strh	r2, [r3, #8]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
10008c7e:	891a      	ldrh	r2, [r3, #8]
10008c80:	2180      	movs	r1, #128	; 0x80
10008c82:	00c9      	lsls	r1, r1, #3
10008c84:	430a      	orrs	r2, r1
10008c86:	811a      	strh	r2, [r3, #8]
	return STATUS_OK;
10008c88:	2000      	movs	r0, #0
		break;
10008c8a:	e5fc      	b.n	10008886 <system_peripheral_reset+0x22>
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10008c8c:	4b06      	ldr	r3, [pc, #24]	; (10008ca8 <system_peripheral_reset+0x444>)
10008c8e:	891a      	ldrh	r2, [r3, #8]
10008c90:	4909      	ldr	r1, [pc, #36]	; (10008cb8 <system_peripheral_reset+0x454>)
10008c92:	400a      	ands	r2, r1
10008c94:	811a      	strh	r2, [r3, #8]
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
10008c96:	891a      	ldrh	r2, [r3, #8]
10008c98:	2180      	movs	r1, #128	; 0x80
10008c9a:	0109      	lsls	r1, r1, #4
10008c9c:	430a      	orrs	r2, r1
10008c9e:	811a      	strh	r2, [r3, #8]
	return STATUS_OK;
10008ca0:	2000      	movs	r0, #0
		break;
10008ca2:	e5f0      	b.n	10008886 <system_peripheral_reset+0x22>
			return STATUS_ERR_INVALID_ARG;
10008ca4:	2017      	movs	r0, #23
10008ca6:	e5ee      	b.n	10008886 <system_peripheral_reset+0x22>
10008ca8:	4000b000 	.word	0x4000b000
10008cac:	fffffeff 	.word	0xfffffeff
10008cb0:	fffffdff 	.word	0xfffffdff
10008cb4:	fffffbff 	.word	0xfffffbff
10008cb8:	fffff7ff 	.word	0xfffff7ff

10008cbc <system_register_isr>:
 */
void system_register_isr(enum ram_isr_table_index isr_index,
		uint32_t isr_address)
{
	uint32_t *temp;
	temp = (uint32_t *)(isr_index * 4 + ISR_RAM_MAP_START_ADDRESS);
10008cbc:	2380      	movs	r3, #128	; 0x80
10008cbe:	04db      	lsls	r3, r3, #19
10008cc0:	469c      	mov	ip, r3
10008cc2:	4460      	add	r0, ip
	*temp = isr_address;
10008cc4:	0080      	lsls	r0, r0, #2
10008cc6:	6001      	str	r1, [r0, #0]
}
10008cc8:	4770      	bx	lr
	...

10008ccc <uart_rx0_isr_handler>:
	/* Decrement length of the remaining buffer */
	module->remaining_rx_buffer_length--;
}

static void uart_rx0_isr_handler(void)
{
10008ccc:	b570      	push	{r4, r5, r6, lr}
	struct uart_module *module = _uart_instances[0];
10008cce:	4b21      	ldr	r3, [pc, #132]	; (10008d54 <uart_rx0_isr_handler+0x88>)
10008cd0:	681c      	ldr	r4, [r3, #0]
	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->RECEIVE_STATUS.reg;
10008cd2:	6823      	ldr	r3, [r4, #0]
10008cd4:	7d1d      	ldrb	r5, [r3, #20]
10008cd6:	b2ed      	uxtb	r5, r5
	if (flags & UART_RECEIVE_STATUS_FIFO_OVERRUN) {
10008cd8:	066a      	lsls	r2, r5, #25
10008cda:	d510      	bpl.n	10008cfe <uart_rx0_isr_handler+0x32>
		/* Store the error code */
		module->status = STATUS_ERR_OVERFLOW;
10008cdc:	211e      	movs	r1, #30
10008cde:	2222      	movs	r2, #34	; 0x22
10008ce0:	54a1      	strb	r1, [r4, r2]
		/* Disable interrupt */
		module->hw->RX_INTERRUPT_MASK.reg &=
10008ce2:	7e1a      	ldrb	r2, [r3, #24]
10008ce4:	3123      	adds	r1, #35	; 0x23
10008ce6:	438a      	bics	r2, r1
10008ce8:	761a      	strb	r2, [r3, #24]
			~(UART_RX_INTERRUPT_MASK_FIFO_OVERRUN_MASK |
			SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
		if ((module->callback_enable_mask & (1 << UART_RX_FIFO_OVERRUN)) &&
10008cea:	2321      	movs	r3, #33	; 0x21
10008cec:	5ce3      	ldrb	r3, [r4, r3]
10008cee:	071b      	lsls	r3, r3, #28
10008cf0:	d503      	bpl.n	10008cfa <uart_rx0_isr_handler+0x2e>
			(module->callback_reg_mask & (1 << UART_RX_FIFO_OVERRUN))) {
10008cf2:	2320      	movs	r3, #32
		if ((module->callback_enable_mask & (1 << UART_RX_FIFO_OVERRUN)) &&
10008cf4:	5ce3      	ldrb	r3, [r4, r3]
10008cf6:	071b      	lsls	r3, r3, #28
10008cf8:	d404      	bmi.n	10008d04 <uart_rx0_isr_handler+0x38>
			(module->callback[UART_RX_FIFO_OVERRUN])(module);
		}
		/* Flush */
		uint8_t flush = module->hw->RECEIVE_DATA.reg;
10008cfa:	6823      	ldr	r3, [r4, #0]
10008cfc:	7c1b      	ldrb	r3, [r3, #16]
		UNUSED(flush);
	}
	if (flags & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
10008cfe:	07eb      	lsls	r3, r5, #31
10008d00:	d404      	bmi.n	10008d0c <uart_rx0_isr_handler+0x40>
					~(UART_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
				(module->callback[UART_RX_COMPLETE])(module);
			}
		}
	}
}
10008d02:	bd70      	pop	{r4, r5, r6, pc}
			(module->callback[UART_RX_FIFO_OVERRUN])(module);
10008d04:	0020      	movs	r0, r4
10008d06:	6923      	ldr	r3, [r4, #16]
10008d08:	4798      	blx	r3
10008d0a:	e7f6      	b.n	10008cfa <uart_rx0_isr_handler+0x2e>
	uint16_t received_data = (uart_hw->RECEIVE_DATA.reg & UART_RECEIVE_DATA_MASK);
10008d0c:	6823      	ldr	r3, [r4, #0]
10008d0e:	7c1b      	ldrb	r3, [r3, #16]
10008d10:	b2db      	uxtb	r3, r3
	*(module->rx_buffer_ptr) = received_data;
10008d12:	6962      	ldr	r2, [r4, #20]
10008d14:	7013      	strb	r3, [r2, #0]
	module->rx_buffer_ptr += 1;
10008d16:	6963      	ldr	r3, [r4, #20]
10008d18:	3301      	adds	r3, #1
10008d1a:	6163      	str	r3, [r4, #20]
	module->remaining_rx_buffer_length--;
10008d1c:	8ba3      	ldrh	r3, [r4, #28]
10008d1e:	3b01      	subs	r3, #1
10008d20:	b29b      	uxth	r3, r3
10008d22:	83a3      	strh	r3, [r4, #28]
		if (module->remaining_rx_buffer_length == 0) {
10008d24:	8ba3      	ldrh	r3, [r4, #28]
10008d26:	b29b      	uxth	r3, r3
10008d28:	2b00      	cmp	r3, #0
10008d2a:	d1ea      	bne.n	10008d02 <uart_rx0_isr_handler+0x36>
			if ((module->callback_enable_mask & (1 << UART_RX_COMPLETE)) &&
10008d2c:	3321      	adds	r3, #33	; 0x21
10008d2e:	5ce3      	ldrb	r3, [r4, r3]
10008d30:	075b      	lsls	r3, r3, #29
10008d32:	d5e6      	bpl.n	10008d02 <uart_rx0_isr_handler+0x36>
				(module->callback_reg_mask & (1 << UART_RX_COMPLETE))) {
10008d34:	2320      	movs	r3, #32
			if ((module->callback_enable_mask & (1 << UART_RX_COMPLETE)) &&
10008d36:	5ce3      	ldrb	r3, [r4, r3]
10008d38:	075b      	lsls	r3, r3, #29
10008d3a:	d5e2      	bpl.n	10008d02 <uart_rx0_isr_handler+0x36>
				module->status = STATUS_OK;
10008d3c:	2200      	movs	r2, #0
10008d3e:	2322      	movs	r3, #34	; 0x22
10008d40:	54e2      	strb	r2, [r4, r3]
				module->hw->RX_INTERRUPT_MASK.reg &=
10008d42:	6822      	ldr	r2, [r4, #0]
10008d44:	7e13      	ldrb	r3, [r2, #24]
10008d46:	2101      	movs	r1, #1
10008d48:	438b      	bics	r3, r1
10008d4a:	7613      	strb	r3, [r2, #24]
				(module->callback[UART_RX_COMPLETE])(module);
10008d4c:	68e3      	ldr	r3, [r4, #12]
10008d4e:	0020      	movs	r0, r4
10008d50:	4798      	blx	r3
}
10008d52:	e7d6      	b.n	10008d02 <uart_rx0_isr_handler+0x36>
10008d54:	10011edc 	.word	0x10011edc

10008d58 <uart_tx0_isr_handler>:

static void uart_tx0_isr_handler(void)
{
10008d58:	b570      	push	{r4, r5, r6, lr}
	struct uart_module *module = _uart_instances[0];
10008d5a:	4b22      	ldr	r3, [pc, #136]	; (10008de4 <uart_tx0_isr_handler+0x8c>)
10008d5c:	681c      	ldr	r4, [r3, #0]
	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->TRANSMIT_STATUS.reg;
10008d5e:	6823      	ldr	r3, [r4, #0]
10008d60:	791d      	ldrb	r5, [r3, #4]
10008d62:	b2ed      	uxtb	r5, r5
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_NOT_FULL) {
10008d64:	07ea      	lsls	r2, r5, #31
10008d66:	d414      	bmi.n	10008d92 <uart_tx0_isr_handler+0x3a>
					~UART_TX_INTERRUPT_MASK_TX_FIFO_NOT_FULL_MASK;
			module->hw->TX_INTERRUPT_MASK.reg |=
					UART_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
		}
	}
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_EMPTY) {
10008d68:	06eb      	lsls	r3, r5, #27
10008d6a:	d507      	bpl.n	10008d7c <uart_tx0_isr_handler+0x24>
		if ((module->callback_enable_mask & (1 << UART_TX_COMPLETE)) &&
10008d6c:	2321      	movs	r3, #33	; 0x21
10008d6e:	5ce3      	ldrb	r3, [r4, r3]
10008d70:	07db      	lsls	r3, r3, #31
10008d72:	d503      	bpl.n	10008d7c <uart_tx0_isr_handler+0x24>
			(module->callback_reg_mask & (1 << UART_TX_COMPLETE))) {
10008d74:	2320      	movs	r3, #32
		if ((module->callback_enable_mask & (1 << UART_TX_COMPLETE)) &&
10008d76:	5ce3      	ldrb	r3, [r4, r3]
10008d78:	07db      	lsls	r3, r3, #31
10008d7a:	d423      	bmi.n	10008dc4 <uart_tx0_isr_handler+0x6c>
				~UART_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
			(module->callback[UART_TX_COMPLETE])(module);
		}

	}
	if (flags & UART_TRANSMIT_STATUS_CTS_ACTIVE) {
10008d7c:	06ab      	lsls	r3, r5, #26
10008d7e:	d507      	bpl.n	10008d90 <uart_tx0_isr_handler+0x38>
		if ((module->callback_enable_mask & (1 << UART_CTS_ACTIVE)) &&
10008d80:	2321      	movs	r3, #33	; 0x21
10008d82:	5ce3      	ldrb	r3, [r4, r3]
10008d84:	079b      	lsls	r3, r3, #30
10008d86:	d503      	bpl.n	10008d90 <uart_tx0_isr_handler+0x38>
			(module->callback_reg_mask & (1 << UART_CTS_ACTIVE))) {
10008d88:	2320      	movs	r3, #32
		if ((module->callback_enable_mask & (1 << UART_CTS_ACTIVE)) &&
10008d8a:	5ce3      	ldrb	r3, [r4, r3]
10008d8c:	079b      	lsls	r3, r3, #30
10008d8e:	d425      	bmi.n	10008ddc <uart_tx0_isr_handler+0x84>
			(module->callback[UART_CTS_ACTIVE])(module);
		}

	}
}
10008d90:	bd70      	pop	{r4, r5, r6, pc}
	uint8_t data_to_send = *(module->tx_buffer_ptr);
10008d92:	69a2      	ldr	r2, [r4, #24]
10008d94:	7811      	ldrb	r1, [r2, #0]
10008d96:	b2c9      	uxtb	r1, r1
	(module->tx_buffer_ptr)++;
10008d98:	3201      	adds	r2, #1
10008d9a:	61a2      	str	r2, [r4, #24]
	uart_hw->TRANSMIT_DATA.reg = data_to_send & UART_TRANSMIT_DATA_MASK;
10008d9c:	7019      	strb	r1, [r3, #0]
	(module->remaining_tx_buffer_length)--;
10008d9e:	8be3      	ldrh	r3, [r4, #30]
10008da0:	3b01      	subs	r3, #1
10008da2:	b29b      	uxth	r3, r3
10008da4:	83e3      	strh	r3, [r4, #30]
		if (module->remaining_tx_buffer_length == 0) {
10008da6:	8be3      	ldrh	r3, [r4, #30]
10008da8:	b29b      	uxth	r3, r3
10008daa:	2b00      	cmp	r3, #0
10008dac:	d1dc      	bne.n	10008d68 <uart_tx0_isr_handler+0x10>
			module->hw->TX_INTERRUPT_MASK.reg &=
10008dae:	6822      	ldr	r2, [r4, #0]
10008db0:	7a13      	ldrb	r3, [r2, #8]
10008db2:	2101      	movs	r1, #1
10008db4:	438b      	bics	r3, r1
10008db6:	7213      	strb	r3, [r2, #8]
			module->hw->TX_INTERRUPT_MASK.reg |=
10008db8:	6822      	ldr	r2, [r4, #0]
10008dba:	7a13      	ldrb	r3, [r2, #8]
10008dbc:	310f      	adds	r1, #15
10008dbe:	430b      	orrs	r3, r1
10008dc0:	7213      	strb	r3, [r2, #8]
10008dc2:	e7d1      	b.n	10008d68 <uart_tx0_isr_handler+0x10>
			module->status = STATUS_OK;
10008dc4:	2200      	movs	r2, #0
10008dc6:	2322      	movs	r3, #34	; 0x22
10008dc8:	54e2      	strb	r2, [r4, r3]
			module->hw->TX_INTERRUPT_MASK.reg &=
10008dca:	6822      	ldr	r2, [r4, #0]
10008dcc:	7a13      	ldrb	r3, [r2, #8]
10008dce:	2110      	movs	r1, #16
10008dd0:	438b      	bics	r3, r1
10008dd2:	7213      	strb	r3, [r2, #8]
			(module->callback[UART_TX_COMPLETE])(module);
10008dd4:	0020      	movs	r0, r4
10008dd6:	6863      	ldr	r3, [r4, #4]
10008dd8:	4798      	blx	r3
10008dda:	e7cf      	b.n	10008d7c <uart_tx0_isr_handler+0x24>
			(module->callback[UART_CTS_ACTIVE])(module);
10008ddc:	68a3      	ldr	r3, [r4, #8]
10008dde:	0020      	movs	r0, r4
10008de0:	4798      	blx	r3
}
10008de2:	e7d5      	b.n	10008d90 <uart_tx0_isr_handler+0x38>
10008de4:	10011edc 	.word	0x10011edc

10008de8 <uart_rx1_isr_handler>:

static void uart_rx1_isr_handler(void)
{
10008de8:	b570      	push	{r4, r5, r6, lr}
	struct uart_module *module = _uart_instances[1];
10008dea:	4b21      	ldr	r3, [pc, #132]	; (10008e70 <uart_rx1_isr_handler+0x88>)
10008dec:	685c      	ldr	r4, [r3, #4]
	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->RECEIVE_STATUS.reg;
10008dee:	6823      	ldr	r3, [r4, #0]
10008df0:	7d1d      	ldrb	r5, [r3, #20]
10008df2:	b2ed      	uxtb	r5, r5
	if (flags & UART_RECEIVE_STATUS_FIFO_OVERRUN) {
10008df4:	066a      	lsls	r2, r5, #25
10008df6:	d510      	bpl.n	10008e1a <uart_rx1_isr_handler+0x32>
		/* Store the error code */
		module->status = STATUS_ERR_OVERFLOW;
10008df8:	211e      	movs	r1, #30
10008dfa:	2222      	movs	r2, #34	; 0x22
10008dfc:	54a1      	strb	r1, [r4, r2]
		/* Disable interrupt */
		module->hw->RX_INTERRUPT_MASK.reg &=
10008dfe:	7e1a      	ldrb	r2, [r3, #24]
10008e00:	3123      	adds	r1, #35	; 0x23
10008e02:	438a      	bics	r2, r1
10008e04:	761a      	strb	r2, [r3, #24]
			~(UART_RX_INTERRUPT_MASK_FIFO_OVERRUN_MASK |
			SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
		if ((module->callback_enable_mask & (1 << UART_RX_FIFO_OVERRUN)) &&
10008e06:	2321      	movs	r3, #33	; 0x21
10008e08:	5ce3      	ldrb	r3, [r4, r3]
10008e0a:	071b      	lsls	r3, r3, #28
10008e0c:	d503      	bpl.n	10008e16 <uart_rx1_isr_handler+0x2e>
			(module->callback_reg_mask & (1 << UART_RX_FIFO_OVERRUN))) {
10008e0e:	2320      	movs	r3, #32
		if ((module->callback_enable_mask & (1 << UART_RX_FIFO_OVERRUN)) &&
10008e10:	5ce3      	ldrb	r3, [r4, r3]
10008e12:	071b      	lsls	r3, r3, #28
10008e14:	d404      	bmi.n	10008e20 <uart_rx1_isr_handler+0x38>
			(module->callback[UART_RX_FIFO_OVERRUN])(module);
		}
		/* Flush */
		uint8_t flush = module->hw->RECEIVE_DATA.reg;
10008e16:	6823      	ldr	r3, [r4, #0]
10008e18:	7c1b      	ldrb	r3, [r3, #16]
		UNUSED(flush);
	}
	if (flags & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
10008e1a:	07eb      	lsls	r3, r5, #31
10008e1c:	d404      	bmi.n	10008e28 <uart_rx1_isr_handler+0x40>
					~(UART_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
				(module->callback[UART_RX_COMPLETE])(module);
			}
		}
	}
}
10008e1e:	bd70      	pop	{r4, r5, r6, pc}
			(module->callback[UART_RX_FIFO_OVERRUN])(module);
10008e20:	0020      	movs	r0, r4
10008e22:	6923      	ldr	r3, [r4, #16]
10008e24:	4798      	blx	r3
10008e26:	e7f6      	b.n	10008e16 <uart_rx1_isr_handler+0x2e>
	uint16_t received_data = (uart_hw->RECEIVE_DATA.reg & UART_RECEIVE_DATA_MASK);
10008e28:	6823      	ldr	r3, [r4, #0]
10008e2a:	7c1b      	ldrb	r3, [r3, #16]
10008e2c:	b2db      	uxtb	r3, r3
	*(module->rx_buffer_ptr) = received_data;
10008e2e:	6962      	ldr	r2, [r4, #20]
10008e30:	7013      	strb	r3, [r2, #0]
	module->rx_buffer_ptr += 1;
10008e32:	6963      	ldr	r3, [r4, #20]
10008e34:	3301      	adds	r3, #1
10008e36:	6163      	str	r3, [r4, #20]
	module->remaining_rx_buffer_length--;
10008e38:	8ba3      	ldrh	r3, [r4, #28]
10008e3a:	3b01      	subs	r3, #1
10008e3c:	b29b      	uxth	r3, r3
10008e3e:	83a3      	strh	r3, [r4, #28]
		if (module->remaining_rx_buffer_length == 0) {
10008e40:	8ba3      	ldrh	r3, [r4, #28]
10008e42:	b29b      	uxth	r3, r3
10008e44:	2b00      	cmp	r3, #0
10008e46:	d1ea      	bne.n	10008e1e <uart_rx1_isr_handler+0x36>
			if ((module->callback_enable_mask & (1 << UART_RX_COMPLETE)) &&
10008e48:	3321      	adds	r3, #33	; 0x21
10008e4a:	5ce3      	ldrb	r3, [r4, r3]
10008e4c:	075b      	lsls	r3, r3, #29
10008e4e:	d5e6      	bpl.n	10008e1e <uart_rx1_isr_handler+0x36>
				(module->callback_reg_mask & (1 << UART_RX_COMPLETE))) {
10008e50:	2320      	movs	r3, #32
			if ((module->callback_enable_mask & (1 << UART_RX_COMPLETE)) &&
10008e52:	5ce3      	ldrb	r3, [r4, r3]
10008e54:	075b      	lsls	r3, r3, #29
10008e56:	d5e2      	bpl.n	10008e1e <uart_rx1_isr_handler+0x36>
				module->status = STATUS_OK;
10008e58:	2200      	movs	r2, #0
10008e5a:	2322      	movs	r3, #34	; 0x22
10008e5c:	54e2      	strb	r2, [r4, r3]
				module->hw->RX_INTERRUPT_MASK.reg &=
10008e5e:	6822      	ldr	r2, [r4, #0]
10008e60:	7e13      	ldrb	r3, [r2, #24]
10008e62:	2101      	movs	r1, #1
10008e64:	438b      	bics	r3, r1
10008e66:	7613      	strb	r3, [r2, #24]
				(module->callback[UART_RX_COMPLETE])(module);
10008e68:	68e3      	ldr	r3, [r4, #12]
10008e6a:	0020      	movs	r0, r4
10008e6c:	4798      	blx	r3
}
10008e6e:	e7d6      	b.n	10008e1e <uart_rx1_isr_handler+0x36>
10008e70:	10011edc 	.word	0x10011edc

10008e74 <uart_tx1_isr_handler>:

static void uart_tx1_isr_handler(void)
{
10008e74:	b570      	push	{r4, r5, r6, lr}
	struct uart_module *module = _uart_instances[1];
10008e76:	4b22      	ldr	r3, [pc, #136]	; (10008f00 <uart_tx1_isr_handler+0x8c>)
10008e78:	685c      	ldr	r4, [r3, #4]
	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->TRANSMIT_STATUS.reg;
10008e7a:	6823      	ldr	r3, [r4, #0]
10008e7c:	791d      	ldrb	r5, [r3, #4]
10008e7e:	b2ed      	uxtb	r5, r5
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_NOT_FULL) {
10008e80:	07ea      	lsls	r2, r5, #31
10008e82:	d414      	bmi.n	10008eae <uart_tx1_isr_handler+0x3a>
					~UART_TX_INTERRUPT_MASK_TX_FIFO_NOT_FULL_MASK;
			module->hw->TX_INTERRUPT_MASK.reg |=
					UART_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
		}
	}
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_EMPTY) {
10008e84:	06eb      	lsls	r3, r5, #27
10008e86:	d507      	bpl.n	10008e98 <uart_tx1_isr_handler+0x24>
		if ((module->callback_enable_mask & (1 << UART_TX_COMPLETE)) &&
10008e88:	2321      	movs	r3, #33	; 0x21
10008e8a:	5ce3      	ldrb	r3, [r4, r3]
10008e8c:	07db      	lsls	r3, r3, #31
10008e8e:	d503      	bpl.n	10008e98 <uart_tx1_isr_handler+0x24>
			(module->callback_reg_mask & (1 << UART_TX_COMPLETE))) {
10008e90:	2320      	movs	r3, #32
		if ((module->callback_enable_mask & (1 << UART_TX_COMPLETE)) &&
10008e92:	5ce3      	ldrb	r3, [r4, r3]
10008e94:	07db      	lsls	r3, r3, #31
10008e96:	d423      	bmi.n	10008ee0 <uart_tx1_isr_handler+0x6c>
				~UART_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
			(module->callback[UART_TX_COMPLETE])(module);
		}

	}
	if (flags & UART_TRANSMIT_STATUS_CTS_ACTIVE) {
10008e98:	06ab      	lsls	r3, r5, #26
10008e9a:	d507      	bpl.n	10008eac <uart_tx1_isr_handler+0x38>
		if ((module->callback_enable_mask & (1 << UART_CTS_ACTIVE)) &&
10008e9c:	2321      	movs	r3, #33	; 0x21
10008e9e:	5ce3      	ldrb	r3, [r4, r3]
10008ea0:	079b      	lsls	r3, r3, #30
10008ea2:	d503      	bpl.n	10008eac <uart_tx1_isr_handler+0x38>
			(module->callback_reg_mask & (1 << UART_CTS_ACTIVE))) {
10008ea4:	2320      	movs	r3, #32
		if ((module->callback_enable_mask & (1 << UART_CTS_ACTIVE)) &&
10008ea6:	5ce3      	ldrb	r3, [r4, r3]
10008ea8:	079b      	lsls	r3, r3, #30
10008eaa:	d425      	bmi.n	10008ef8 <uart_tx1_isr_handler+0x84>
			(module->callback[UART_CTS_ACTIVE])(module);
		}

	}
}
10008eac:	bd70      	pop	{r4, r5, r6, pc}
	uint8_t data_to_send = *(module->tx_buffer_ptr);
10008eae:	69a2      	ldr	r2, [r4, #24]
10008eb0:	7811      	ldrb	r1, [r2, #0]
10008eb2:	b2c9      	uxtb	r1, r1
	(module->tx_buffer_ptr)++;
10008eb4:	3201      	adds	r2, #1
10008eb6:	61a2      	str	r2, [r4, #24]
	uart_hw->TRANSMIT_DATA.reg = data_to_send & UART_TRANSMIT_DATA_MASK;
10008eb8:	7019      	strb	r1, [r3, #0]
	(module->remaining_tx_buffer_length)--;
10008eba:	8be3      	ldrh	r3, [r4, #30]
10008ebc:	3b01      	subs	r3, #1
10008ebe:	b29b      	uxth	r3, r3
10008ec0:	83e3      	strh	r3, [r4, #30]
		if (module->remaining_tx_buffer_length == 0) {
10008ec2:	8be3      	ldrh	r3, [r4, #30]
10008ec4:	b29b      	uxth	r3, r3
10008ec6:	2b00      	cmp	r3, #0
10008ec8:	d1dc      	bne.n	10008e84 <uart_tx1_isr_handler+0x10>
			module->hw->TX_INTERRUPT_MASK.reg &=
10008eca:	6822      	ldr	r2, [r4, #0]
10008ecc:	7a13      	ldrb	r3, [r2, #8]
10008ece:	2101      	movs	r1, #1
10008ed0:	438b      	bics	r3, r1
10008ed2:	7213      	strb	r3, [r2, #8]
			module->hw->TX_INTERRUPT_MASK.reg |=
10008ed4:	6822      	ldr	r2, [r4, #0]
10008ed6:	7a13      	ldrb	r3, [r2, #8]
10008ed8:	310f      	adds	r1, #15
10008eda:	430b      	orrs	r3, r1
10008edc:	7213      	strb	r3, [r2, #8]
10008ede:	e7d1      	b.n	10008e84 <uart_tx1_isr_handler+0x10>
			module->status = STATUS_OK;
10008ee0:	2200      	movs	r2, #0
10008ee2:	2322      	movs	r3, #34	; 0x22
10008ee4:	54e2      	strb	r2, [r4, r3]
			module->hw->TX_INTERRUPT_MASK.reg &=
10008ee6:	6822      	ldr	r2, [r4, #0]
10008ee8:	7a13      	ldrb	r3, [r2, #8]
10008eea:	2110      	movs	r1, #16
10008eec:	438b      	bics	r3, r1
10008eee:	7213      	strb	r3, [r2, #8]
			(module->callback[UART_TX_COMPLETE])(module);
10008ef0:	0020      	movs	r0, r4
10008ef2:	6863      	ldr	r3, [r4, #4]
10008ef4:	4798      	blx	r3
10008ef6:	e7cf      	b.n	10008e98 <uart_tx1_isr_handler+0x24>
			(module->callback[UART_CTS_ACTIVE])(module);
10008ef8:	68a3      	ldr	r3, [r4, #8]
10008efa:	0020      	movs	r0, r4
10008efc:	4798      	blx	r3
}
10008efe:	e7d5      	b.n	10008eac <uart_tx1_isr_handler+0x38>
10008f00:	10011edc 	.word	0x10011edc

10008f04 <uart_get_config_defaults>:
 * \param[out] config  Pointer to configuration structure to be initiated
 */
void uart_get_config_defaults(
		struct uart_config *const config)
{
	config->baud_rate = 115200;
10008f04:	23e1      	movs	r3, #225	; 0xe1
10008f06:	025b      	lsls	r3, r3, #9
10008f08:	6003      	str	r3, [r0, #0]
	config->data_bits = UART_8_BITS;
10008f0a:	2300      	movs	r3, #0
10008f0c:	7103      	strb	r3, [r0, #4]
	config->stop_bits = UART_1_STOP_BIT;
10008f0e:	7143      	strb	r3, [r0, #5]
	config->parity = UART_NO_PARITY;
10008f10:	7183      	strb	r3, [r0, #6]
	config->flow_control = false;
10008f12:	71c3      	strb	r3, [r0, #7]
	config->pin_number_pad[0] = PIN_LP_GPIO_2_MUX2_UART0_RXD;
10008f14:	3302      	adds	r3, #2
10008f16:	6083      	str	r3, [r0, #8]
	config->pin_number_pad[1] = PIN_LP_GPIO_3_MUX2_UART0_TXD;
10008f18:	2203      	movs	r2, #3
10008f1a:	60c2      	str	r2, [r0, #12]
	config->pin_number_pad[2] = PIN_LP_GPIO_4_MUX2_UART0_CTS;
10008f1c:	3201      	adds	r2, #1
10008f1e:	6102      	str	r2, [r0, #16]
	config->pin_number_pad[3] = PIN_LP_GPIO_5_MUX2_UART0_RTS;
10008f20:	3201      	adds	r2, #1
10008f22:	6142      	str	r2, [r0, #20]
	
	config->pinmux_sel_pad[0] = MUX_LP_GPIO_2_MUX2_UART0_RXD;
10008f24:	6183      	str	r3, [r0, #24]
	config->pinmux_sel_pad[1] = MUX_LP_GPIO_3_MUX2_UART0_TXD;
10008f26:	61c3      	str	r3, [r0, #28]
	config->pinmux_sel_pad[2] = MUX_LP_GPIO_4_MUX2_UART0_CTS;
10008f28:	6203      	str	r3, [r0, #32]
	config->pinmux_sel_pad[3] = MUX_LP_GPIO_5_MUX2_UART0_RTS;
10008f2a:	6243      	str	r3, [r0, #36]	; 0x24
}
10008f2c:	4770      	bx	lr
	...

10008f30 <uart_init>:
 *
 * \retval STATUS_OK                       The initialization was successful
 */
enum status_code uart_init(struct uart_module *const module, Uart * const hw,
		const struct uart_config *const config)
{
10008f30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10008f32:	46ce      	mov	lr, r9
10008f34:	4647      	mov	r7, r8
10008f36:	b580      	push	{r7, lr}
10008f38:	0004      	movs	r4, r0
10008f3a:	0017      	movs	r7, r2

	uint8_t config_temp = 0;
	uint8_t i,index;

	/* Assign module pointer to software instance struct */
	module->hw = hw;
10008f3c:	6001      	str	r1, [r0, #0]

	for (i = 0; i < UART_CALLBACK_N; i++) {
		module->callback[i] = NULL;
10008f3e:	2300      	movs	r3, #0
10008f40:	6043      	str	r3, [r0, #4]
10008f42:	6083      	str	r3, [r0, #8]
10008f44:	60c3      	str	r3, [r0, #12]
10008f46:	6103      	str	r3, [r0, #16]
	}
	module->rx_buffer_ptr = NULL;
10008f48:	6143      	str	r3, [r0, #20]
	module->tx_buffer_ptr = NULL;
10008f4a:	6183      	str	r3, [r0, #24]
	module->remaining_rx_buffer_length = 0;
10008f4c:	2200      	movs	r2, #0
10008f4e:	8383      	strh	r3, [r0, #28]
	module->remaining_tx_buffer_length = 0;
10008f50:	83c3      	strh	r3, [r0, #30]
	module->callback_reg_mask = 0;
10008f52:	3320      	adds	r3, #32
10008f54:	54c2      	strb	r2, [r0, r3]
	module->callback_enable_mask = 0;
10008f56:	3301      	adds	r3, #1
10008f58:	54c2      	strb	r2, [r0, r3]
	module->status = STATUS_OK;
10008f5a:	3301      	adds	r3, #1
10008f5c:	54c2      	strb	r2, [r0, r3]

	if (hw == UART0) {
10008f5e:	4b53      	ldr	r3, [pc, #332]	; (100090ac <uart_init+0x17c>)
10008f60:	4299      	cmp	r1, r3
10008f62:	d037      	beq.n	10008fd4 <uart_init+0xa4>
		_uart_instances[0] = module;
		system_register_isr(RAM_ISR_TABLE_UARTRX0_INDEX, (uint32_t)uart_rx0_isr_handler);
		system_register_isr(RAM_ISR_TABLE_UARTTX0_INDEX, (uint32_t)uart_tx0_isr_handler);
		NVIC_EnableIRQ(UART0_RX_IRQn);
		NVIC_EnableIRQ(UART0_TX_IRQn);
	} else if (hw == UART1) {
10008f64:	4b52      	ldr	r3, [pc, #328]	; (100090b0 <uart_init+0x180>)
10008f66:	4299      	cmp	r1, r3
10008f68:	d04d      	beq.n	10009006 <uart_init+0xd6>
		NVIC_EnableIRQ(UART1_RX_IRQn);
		NVIC_EnableIRQ(UART1_TX_IRQn);
	}

	/* Set the pinmux for this UART module. */
	if(config->flow_control) {
10008f6a:	79fb      	ldrb	r3, [r7, #7]
		index = 4;
10008f6c:	2204      	movs	r2, #4
10008f6e:	4690      	mov	r8, r2
	if(config->flow_control) {
10008f70:	2b00      	cmp	r3, #0
10008f72:	d101      	bne.n	10008f78 <uart_init+0x48>
	} else {
		index = 2;
10008f74:	3302      	adds	r3, #2
10008f76:	4698      	mov	r8, r3
10008f78:	003e      	movs	r6, r7
10008f7a:	3608      	adds	r6, #8
{
10008f7c:	2500      	movs	r5, #0
	}
	for(i = 0; i < index; i++) {
		gpio_pinmux_cofiguration(config->pin_number_pad[i], \
10008f7e:	4b4d      	ldr	r3, [pc, #308]	; (100090b4 <uart_init+0x184>)
10008f80:	4699      	mov	r9, r3
10008f82:	8a31      	ldrh	r1, [r6, #16]
10008f84:	ce01      	ldmia	r6!, {r0}
10008f86:	b2c0      	uxtb	r0, r0
10008f88:	47c8      	blx	r9
	for(i = 0; i < index; i++) {
10008f8a:	3501      	adds	r5, #1
10008f8c:	b2ed      	uxtb	r5, r5
10008f8e:	4545      	cmp	r5, r8
10008f90:	d3f7      	bcc.n	10008f82 <uart_init+0x52>
								(uint16_t)(config->pinmux_sel_pad[i]));
	}

	/* empty UART FIFO */
	while (module->hw->RECEIVE_STATUS.reg & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
10008f92:	6823      	ldr	r3, [r4, #0]
10008f94:	7d1a      	ldrb	r2, [r3, #20]
10008f96:	07d2      	lsls	r2, r2, #31
10008f98:	d504      	bpl.n	10008fa4 <uart_init+0x74>
10008f9a:	2101      	movs	r1, #1
		i = module->hw->RECEIVE_DATA.reg;
10008f9c:	7c1a      	ldrb	r2, [r3, #16]
	while (module->hw->RECEIVE_STATUS.reg & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
10008f9e:	7d1a      	ldrb	r2, [r3, #20]
10008fa0:	420a      	tst	r2, r1
10008fa2:	d1fb      	bne.n	10008f9c <uart_init+0x6c>
	}
	
	/* reset configuration register */
	module->hw->UART_CONFIGURATION.reg = 0;
10008fa4:	2100      	movs	r1, #0
10008fa6:	2220      	movs	r2, #32
10008fa8:	5499      	strb	r1, [r3, r2]

	/* program the uart configuration. */
	if(config->flow_control) {
10008faa:	79fb      	ldrb	r3, [r7, #7]
		config_temp |= UART_UART_CONFIGURATION_CTS_ENABLE_1;
10008fac:	1e5a      	subs	r2, r3, #1
10008fae:	4193      	sbcs	r3, r2
10008fb0:	015b      	lsls	r3, r3, #5
	}
	config_temp |= config->data_bits;
	config_temp |= config->stop_bits;
10008fb2:	793a      	ldrb	r2, [r7, #4]
10008fb4:	7979      	ldrb	r1, [r7, #5]
10008fb6:	430a      	orrs	r2, r1
10008fb8:	4313      	orrs	r3, r2
	switch(config->parity) {
10008fba:	79ba      	ldrb	r2, [r7, #6]
10008fbc:	2a02      	cmp	r2, #2
10008fbe:	d06c      	beq.n	1000909a <uart_init+0x16a>
10008fc0:	b2d1      	uxtb	r1, r2
10008fc2:	2902      	cmp	r1, #2
10008fc4:	d938      	bls.n	10009038 <uart_init+0x108>
10008fc6:	2a03      	cmp	r2, #3
10008fc8:	d06a      	beq.n	100090a0 <uart_init+0x170>
10008fca:	2a04      	cmp	r2, #4
10008fcc:	d138      	bne.n	10009040 <uart_init+0x110>
			config_temp |= UART_UART_CONFIGURATION_PARITY_MODE_2;
			break;

		case UART_MARK_PARITY:
			config_temp |= UART_UART_CONFIGURATION_PARITY_ENABLE_1;
			config_temp |= UART_UART_CONFIGURATION_PARITY_MODE_3;
10008fce:	220e      	movs	r2, #14
10008fd0:	4313      	orrs	r3, r2
			break;
10008fd2:	e035      	b.n	10009040 <uart_init+0x110>
		system_peripheral_reset(PERIPHERAL_UART0_CORE);
10008fd4:	2009      	movs	r0, #9
10008fd6:	4d38      	ldr	r5, [pc, #224]	; (100090b8 <uart_init+0x188>)
10008fd8:	47a8      	blx	r5
		system_peripheral_reset(PERIPHERAL_UART0_IF);
10008fda:	200a      	movs	r0, #10
10008fdc:	47a8      	blx	r5
		system_clock_peripheral_enable(PERIPHERAL_UART0_CORE);
10008fde:	2009      	movs	r0, #9
10008fe0:	4d36      	ldr	r5, [pc, #216]	; (100090bc <uart_init+0x18c>)
10008fe2:	47a8      	blx	r5
		system_clock_peripheral_enable(PERIPHERAL_UART0_IF);
10008fe4:	200a      	movs	r0, #10
10008fe6:	47a8      	blx	r5
		_uart_instances[0] = module;
10008fe8:	4b35      	ldr	r3, [pc, #212]	; (100090c0 <uart_init+0x190>)
10008fea:	601c      	str	r4, [r3, #0]
		system_register_isr(RAM_ISR_TABLE_UARTRX0_INDEX, (uint32_t)uart_rx0_isr_handler);
10008fec:	4935      	ldr	r1, [pc, #212]	; (100090c4 <uart_init+0x194>)
10008fee:	2010      	movs	r0, #16
10008ff0:	4d35      	ldr	r5, [pc, #212]	; (100090c8 <uart_init+0x198>)
10008ff2:	47a8      	blx	r5
		system_register_isr(RAM_ISR_TABLE_UARTTX0_INDEX, (uint32_t)uart_tx0_isr_handler);
10008ff4:	4935      	ldr	r1, [pc, #212]	; (100090cc <uart_init+0x19c>)
10008ff6:	2011      	movs	r0, #17
10008ff8:	47a8      	blx	r5

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
10008ffa:	4b35      	ldr	r3, [pc, #212]	; (100090d0 <uart_init+0x1a0>)
10008ffc:	2201      	movs	r2, #1
10008ffe:	601a      	str	r2, [r3, #0]
10009000:	3201      	adds	r2, #1
10009002:	601a      	str	r2, [r3, #0]
10009004:	e7b1      	b.n	10008f6a <uart_init+0x3a>
		system_peripheral_reset(PERIPHERAL_UART1_CORE);
10009006:	200b      	movs	r0, #11
10009008:	4d2b      	ldr	r5, [pc, #172]	; (100090b8 <uart_init+0x188>)
1000900a:	47a8      	blx	r5
		system_peripheral_reset(PERIPHERAL_UART1_IF);
1000900c:	200c      	movs	r0, #12
1000900e:	47a8      	blx	r5
		system_clock_peripheral_enable(PERIPHERAL_UART1_CORE);
10009010:	200b      	movs	r0, #11
10009012:	4d2a      	ldr	r5, [pc, #168]	; (100090bc <uart_init+0x18c>)
10009014:	47a8      	blx	r5
		system_clock_peripheral_enable(PERIPHERAL_UART1_IF);
10009016:	200c      	movs	r0, #12
10009018:	47a8      	blx	r5
		_uart_instances[1] = module;
1000901a:	4b29      	ldr	r3, [pc, #164]	; (100090c0 <uart_init+0x190>)
1000901c:	605c      	str	r4, [r3, #4]
		system_register_isr(RAM_ISR_TABLE_UARTRX1_INDEX, (uint32_t)uart_rx1_isr_handler);
1000901e:	492d      	ldr	r1, [pc, #180]	; (100090d4 <uart_init+0x1a4>)
10009020:	2012      	movs	r0, #18
10009022:	4d29      	ldr	r5, [pc, #164]	; (100090c8 <uart_init+0x198>)
10009024:	47a8      	blx	r5
		system_register_isr(RAM_ISR_TABLE_UARTTX1_INDEX, (uint32_t)uart_tx1_isr_handler);
10009026:	492c      	ldr	r1, [pc, #176]	; (100090d8 <uart_init+0x1a8>)
10009028:	2013      	movs	r0, #19
1000902a:	47a8      	blx	r5
1000902c:	4b28      	ldr	r3, [pc, #160]	; (100090d0 <uart_init+0x1a0>)
1000902e:	2204      	movs	r2, #4
10009030:	601a      	str	r2, [r3, #0]
10009032:	3204      	adds	r2, #4
10009034:	601a      	str	r2, [r3, #0]
10009036:	e798      	b.n	10008f6a <uart_init+0x3a>
	switch(config->parity) {
10009038:	2a01      	cmp	r2, #1
1000903a:	d101      	bne.n	10009040 <uart_init+0x110>
			config_temp |= UART_UART_CONFIGURATION_PARITY_ENABLE_1;
1000903c:	2202      	movs	r2, #2
1000903e:	4313      	orrs	r3, r2

		default:
			break;
	}	
	module->hw->UART_CONFIGURATION.reg = config_temp;
10009040:	2220      	movs	r2, #32
10009042:	6821      	ldr	r1, [r4, #0]
10009044:	548b      	strb	r3, [r1, r2]

	/* Calculate the baud rate. */
	uart_set_baudrate(module, config->baud_rate);
10009046:	683e      	ldr	r6, [r7, #0]
	clock = system_clock_get_value();
10009048:	4b24      	ldr	r3, [pc, #144]	; (100090dc <uart_init+0x1ac>)
1000904a:	4798      	blx	r3
1000904c:	0005      	movs	r5, r0
	integerpart = clock / baud_rate;
1000904e:	0031      	movs	r1, r6
10009050:	4b23      	ldr	r3, [pc, #140]	; (100090e0 <uart_init+0x1b0>)
10009052:	4798      	blx	r3
10009054:	b282      	uxth	r2, r0
	diff = clock - (baud_rate * integerpart);
10009056:	0400      	lsls	r0, r0, #16
10009058:	0c00      	lsrs	r0, r0, #16
1000905a:	4370      	muls	r0, r6
1000905c:	1a28      	subs	r0, r5, r0
	while(diff > (baud_rate / 16)) {
1000905e:	0936      	lsrs	r6, r6, #4
10009060:	42b0      	cmp	r0, r6
10009062:	d920      	bls.n	100090a6 <uart_init+0x176>
10009064:	2300      	movs	r3, #0
		i++;
10009066:	3301      	adds	r3, #1
10009068:	b2db      	uxtb	r3, r3
		diff -= (baud_rate / 16);
1000906a:	1b80      	subs	r0, r0, r6
	while(diff > (baud_rate / 16)) {
1000906c:	42b0      	cmp	r0, r6
1000906e:	d8fa      	bhi.n	10009066 <uart_init+0x136>
	module->hw->UART_CLOCK_SOURCE.reg = UART_UART_CLOCK_SOURCE_CLOCK_SELECT_0;
10009070:	2100      	movs	r1, #0
10009072:	2028      	movs	r0, #40	; 0x28
10009074:	6825      	ldr	r5, [r4, #0]
10009076:	5429      	strb	r1, [r5, r0]
	fractionalpart = (i + 1) / 2;
10009078:	3301      	adds	r3, #1
		UART_UART_BAUD_RATE_FRACTIONAL_DIVISION(fractionalpart);
1000907a:	071b      	lsls	r3, r3, #28
1000907c:	0f5b      	lsrs	r3, r3, #29
		UART_UART_BAUD_RATE_INTEGER_DIVISION(integerpart) |
1000907e:	00d2      	lsls	r2, r2, #3
10009080:	4313      	orrs	r3, r2
10009082:	b29b      	uxth	r3, r3
	module->hw->UART_BAUD_RATE.reg =
10009084:	6822      	ldr	r2, [r4, #0]
10009086:	8493      	strh	r3, [r2, #36]	; 0x24

	module->hw->RX_INTERRUPT_MASK.reg = 0;	// disable int at initialization, enable it at read time
10009088:	6823      	ldr	r3, [r4, #0]
1000908a:	7619      	strb	r1, [r3, #24]
	module->hw->TX_INTERRUPT_MASK.reg = 0;	// disable int at initialization, enable it at write time
1000908c:	6823      	ldr	r3, [r4, #0]
1000908e:	7219      	strb	r1, [r3, #8]
	
	return STATUS_OK;
}
10009090:	2000      	movs	r0, #0
10009092:	bc0c      	pop	{r2, r3}
10009094:	4690      	mov	r8, r2
10009096:	4699      	mov	r9, r3
10009098:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			config_temp |= UART_UART_CONFIGURATION_PARITY_MODE_1;
1000909a:	2206      	movs	r2, #6
1000909c:	4313      	orrs	r3, r2
			break;
1000909e:	e7cf      	b.n	10009040 <uart_init+0x110>
			config_temp |= UART_UART_CONFIGURATION_PARITY_MODE_2;
100090a0:	220a      	movs	r2, #10
100090a2:	4313      	orrs	r3, r2
			break;
100090a4:	e7cc      	b.n	10009040 <uart_init+0x110>
	i = 0;
100090a6:	2300      	movs	r3, #0
100090a8:	e7e2      	b.n	10009070 <uart_init+0x140>
100090aa:	46c0      	nop			; (mov r8, r8)
100090ac:	40004000 	.word	0x40004000
100090b0:	40005000 	.word	0x40005000
100090b4:	10008331 	.word	0x10008331
100090b8:	10008865 	.word	0x10008865
100090bc:	10008509 	.word	0x10008509
100090c0:	10011edc 	.word	0x10011edc
100090c4:	10008ccd 	.word	0x10008ccd
100090c8:	10008cbd 	.word	0x10008cbd
100090cc:	10008d59 	.word	0x10008d59
100090d0:	e000e100 	.word	0xe000e100
100090d4:	10008de9 	.word	0x10008de9
100090d8:	10008e75 	.word	0x10008e75
100090dc:	100084fd 	.word	0x100084fd
100090e0:	1000da55 	.word	0x1000da55

100090e4 <uart_write_wait>:
* \retval STATUS_OK         If the operation was completed
*/
enum status_code uart_write_wait(struct uart_module *const module,
		const uint8_t tx_data)
{
	while (!(module->hw->TRANSMIT_STATUS.reg & UART_TRANSMIT_STATUS_TX_FIFO_NOT_FULL));
100090e4:	6802      	ldr	r2, [r0, #0]
100090e6:	2001      	movs	r0, #1
100090e8:	7913      	ldrb	r3, [r2, #4]
100090ea:	4203      	tst	r3, r0
100090ec:	d0fc      	beq.n	100090e8 <uart_write_wait+0x4>

	module->hw->TRANSMIT_DATA.reg = tx_data;
100090ee:	7011      	strb	r1, [r2, #0]
	
	return STATUS_OK;
}
100090f0:	2000      	movs	r0, #0
100090f2:	4770      	bx	lr

100090f4 <uart_read_wait>:
* \retval STATUS_OK                If the operation was completed
*/
enum status_code uart_read_wait(struct uart_module *const module,
		uint8_t *const rx_data)
{
	while (!(module->hw->RECEIVE_STATUS.reg & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY));
100090f4:	6802      	ldr	r2, [r0, #0]
100090f6:	2001      	movs	r0, #1
100090f8:	7d13      	ldrb	r3, [r2, #20]
100090fa:	4203      	tst	r3, r0
100090fc:	d0fc      	beq.n	100090f8 <uart_read_wait+0x4>

	*rx_data = module->hw->RECEIVE_DATA.reg;
100090fe:	7c13      	ldrb	r3, [r2, #16]
10009100:	700b      	strb	r3, [r1, #0]
	
	return STATUS_OK;
}
10009102:	2000      	movs	r0, #0
10009104:	4770      	bx	lr

10009106 <uart_read_buffer_job>:
 * \retval  STATUS_ERR_DENIED       If the receiver is not enabled
 * \retval  STATUS_ERR_INVALID_ARG  If requested read length was zero
 */
enum status_code uart_read_buffer_job(struct uart_module *const module,
		uint8_t *rx_data, uint16_t length)
{
10009106:	b510      	push	{r4, lr}
	/* Sanity check arguments */
	Assert(module);
	Assert(rx_data);

	if (length == 0) {
		return STATUS_ERR_INVALID_ARG;
10009108:	2317      	movs	r3, #23
	if (length == 0) {
1000910a:	2a00      	cmp	r2, #0
1000910c:	d101      	bne.n	10009112 <uart_read_buffer_job+0xc>
	}

	/* Issue internal read */
	_uart_read_buffer(module, rx_data, length);
	return STATUS_OK;
}
1000910e:	0018      	movs	r0, r3
10009110:	bd10      	pop	{r4, pc}
	if (module->status == STATUS_BUSY) {
10009112:	330b      	adds	r3, #11
10009114:	5cc4      	ldrb	r4, [r0, r3]
		return STATUS_BUSY;
10009116:	3b1d      	subs	r3, #29
	if (module->status == STATUS_BUSY) {
10009118:	2c05      	cmp	r4, #5
1000911a:	d0f8      	beq.n	1000910e <uart_read_buffer_job+0x8>
	module->remaining_rx_buffer_length = length;
1000911c:	8382      	strh	r2, [r0, #28]
	module->rx_buffer_ptr = rx_data;
1000911e:	6141      	str	r1, [r0, #20]
	module->status = STATUS_BUSY;
10009120:	2205      	movs	r2, #5
10009122:	331d      	adds	r3, #29
10009124:	54c2      	strb	r2, [r0, r3]
	module->hw->RX_INTERRUPT_MASK.reg = UART_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK;
10009126:	6803      	ldr	r3, [r0, #0]
10009128:	3a04      	subs	r2, #4
1000912a:	761a      	strb	r2, [r3, #24]
	return STATUS_OK;
1000912c:	2300      	movs	r3, #0
1000912e:	e7ee      	b.n	1000910e <uart_read_buffer_job+0x8>

10009130 <uart_register_callback>:
	/* Sanity check arguments */
	Assert(module);
	Assert(callback_func);

	/* Register callback function */
	module->callback[callback_type] = callback_func;
10009130:	0093      	lsls	r3, r2, #2
10009132:	18c3      	adds	r3, r0, r3
10009134:	6059      	str	r1, [r3, #4]
	/* Set the bit corresponding to the callback_type */
	module->callback_reg_mask |= (1 << callback_type);
10009136:	2120      	movs	r1, #32
10009138:	2301      	movs	r3, #1
1000913a:	4093      	lsls	r3, r2
1000913c:	001a      	movs	r2, r3
1000913e:	5c43      	ldrb	r3, [r0, r1]
10009140:	4313      	orrs	r3, r2
10009142:	5443      	strb	r3, [r0, r1]
}
10009144:	4770      	bx	lr

10009146 <uart_enable_callback>:
 * \param[in]  module         Pointer to UART software instance struct
 * \param[in]  callback_type  Callback type given by an enum
 */
void uart_enable_callback(struct uart_module *const module,
		enum uart_callback callback_type)
{
10009146:	b510      	push	{r4, lr}
	/* Sanity check arguments */
	Assert(module);

	/* Enable callback */
	module->callback_enable_mask |= (1 << callback_type);
10009148:	2421      	movs	r4, #33	; 0x21
1000914a:	2201      	movs	r2, #1
1000914c:	408a      	lsls	r2, r1
1000914e:	5d03      	ldrb	r3, [r0, r4]
10009150:	4313      	orrs	r3, r2
10009152:	5503      	strb	r3, [r0, r4]

	if (callback_type == UART_CTS_ACTIVE) {
10009154:	2901      	cmp	r1, #1
10009156:	d000      	beq.n	1000915a <uart_enable_callback+0x14>
		module->hw->TX_INTERRUPT_MASK.reg |= UART_TX_INTERRUPT_MASK_CTS_ACTIVE_MASK;
	}
}
10009158:	bd10      	pop	{r4, pc}
		module->hw->TX_INTERRUPT_MASK.reg |= UART_TX_INTERRUPT_MASK_CTS_ACTIVE_MASK;
1000915a:	6802      	ldr	r2, [r0, #0]
1000915c:	7a13      	ldrb	r3, [r2, #8]
1000915e:	311f      	adds	r1, #31
10009160:	430b      	orrs	r3, r1
10009162:	7213      	strb	r3, [r2, #8]
}
10009164:	e7f8      	b.n	10009158 <uart_enable_callback+0x12>

10009166 <uart_disable_callback>:
 * \param[in]  module         Pointer to UART software instance struct
 * \param[in]  callback_type  Callback type given by an enum
 */
void uart_disable_callback(struct uart_module *const module,
		enum uart_callback callback_type)
{
10009166:	b510      	push	{r4, lr}
	/* Sanity check arguments */
	Assert(module);

	/* Disable callback */
	module->callback_enable_mask &= ~(1 << callback_type);
10009168:	2201      	movs	r2, #1
1000916a:	408a      	lsls	r2, r1
1000916c:	2421      	movs	r4, #33	; 0x21
1000916e:	5d03      	ldrb	r3, [r0, r4]
10009170:	4393      	bics	r3, r2
10009172:	5503      	strb	r3, [r0, r4]

	if (callback_type == UART_CTS_ACTIVE) {
10009174:	2901      	cmp	r1, #1
10009176:	d000      	beq.n	1000917a <uart_disable_callback+0x14>
		module->hw->TX_INTERRUPT_MASK.reg &= ~UART_TX_INTERRUPT_MASK_CTS_ACTIVE_MASK;
	}

}
10009178:	bd10      	pop	{r4, pc}
		module->hw->TX_INTERRUPT_MASK.reg &= ~UART_TX_INTERRUPT_MASK_CTS_ACTIVE_MASK;
1000917a:	6802      	ldr	r2, [r0, #0]
1000917c:	7a13      	ldrb	r3, [r2, #8]
1000917e:	311f      	adds	r1, #31
10009180:	438b      	bics	r3, r1
10009182:	7213      	strb	r3, [r2, #8]
}
10009184:	e7f8      	b.n	10009178 <uart_disable_callback+0x12>
	...

10009188 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
10009188:	b5f0      	push	{r4, r5, r6, r7, lr}
1000918a:	46c6      	mov	lr, r8
1000918c:	b500      	push	{lr}
1000918e:	000c      	movs	r4, r1
10009190:	4690      	mov	r8, r2
	int nChars = 0;

	if (file != 0) {
10009192:	2800      	cmp	r0, #0
10009194:	d10f      	bne.n	100091b6 <_read+0x2e>
		return -1;
	}

	for (; len > 0; --len) {
10009196:	2a00      	cmp	r2, #0
10009198:	dd11      	ble.n	100091be <_read+0x36>
1000919a:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
1000919c:	4e09      	ldr	r6, [pc, #36]	; (100091c4 <_read+0x3c>)
1000919e:	4d0a      	ldr	r5, [pc, #40]	; (100091c8 <_read+0x40>)
100091a0:	6830      	ldr	r0, [r6, #0]
100091a2:	0021      	movs	r1, r4
100091a4:	682b      	ldr	r3, [r5, #0]
100091a6:	4798      	blx	r3
		ptr++;
100091a8:	3401      	adds	r4, #1
	for (; len > 0; --len) {
100091aa:	42bc      	cmp	r4, r7
100091ac:	d1f8      	bne.n	100091a0 <_read+0x18>
		nChars++;
	}
	return nChars;
}
100091ae:	4640      	mov	r0, r8
100091b0:	bc04      	pop	{r2}
100091b2:	4690      	mov	r8, r2
100091b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return -1;
100091b6:	2301      	movs	r3, #1
100091b8:	425b      	negs	r3, r3
100091ba:	4698      	mov	r8, r3
100091bc:	e7f7      	b.n	100091ae <_read+0x26>
	for (; len > 0; --len) {
100091be:	4680      	mov	r8, r0
100091c0:	e7f5      	b.n	100091ae <_read+0x26>
100091c2:	46c0      	nop			; (mov r8, r8)
100091c4:	10011eec 	.word	0x10011eec
100091c8:	10011ee4 	.word	0x10011ee4

100091cc <_write>:
int __attribute__((weak))
_write (int file, char * ptr, int len);

int __attribute__((weak))
_write (int file, char * ptr, int len)
{
100091cc:	b5f0      	push	{r4, r5, r6, r7, lr}
100091ce:	46c6      	mov	lr, r8
100091d0:	b500      	push	{lr}
100091d2:	000e      	movs	r6, r1
100091d4:	0015      	movs	r5, r2
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
100091d6:	3801      	subs	r0, #1
100091d8:	2802      	cmp	r0, #2
100091da:	d810      	bhi.n	100091fe <_write+0x32>
		return -1;
	}

	for (; len != 0; --len) {
100091dc:	2a00      	cmp	r2, #0
100091de:	d011      	beq.n	10009204 <_write+0x38>
100091e0:	2400      	movs	r4, #0
		if (ptr_put(stdio_base, *ptr++) < 0) {
100091e2:	4b0c      	ldr	r3, [pc, #48]	; (10009214 <_write+0x48>)
100091e4:	4698      	mov	r8, r3
100091e6:	4f0c      	ldr	r7, [pc, #48]	; (10009218 <_write+0x4c>)
100091e8:	4643      	mov	r3, r8
100091ea:	6818      	ldr	r0, [r3, #0]
100091ec:	5d31      	ldrb	r1, [r6, r4]
100091ee:	683b      	ldr	r3, [r7, #0]
100091f0:	4798      	blx	r3
100091f2:	2800      	cmp	r0, #0
100091f4:	db08      	blt.n	10009208 <_write+0x3c>
			return -1;
		}
		++nChars;
100091f6:	3401      	adds	r4, #1
	for (; len != 0; --len) {
100091f8:	42a5      	cmp	r5, r4
100091fa:	d1f5      	bne.n	100091e8 <_write+0x1c>
100091fc:	e006      	b.n	1000920c <_write+0x40>
		return -1;
100091fe:	2401      	movs	r4, #1
10009200:	4264      	negs	r4, r4
10009202:	e003      	b.n	1000920c <_write+0x40>
	for (; len != 0; --len) {
10009204:	0014      	movs	r4, r2
10009206:	e001      	b.n	1000920c <_write+0x40>
			return -1;
10009208:	2401      	movs	r4, #1
1000920a:	4264      	negs	r4, r4
	}
	return nChars;
}
1000920c:	0020      	movs	r0, r4
1000920e:	bc04      	pop	{r2}
10009210:	4690      	mov	r8, r2
10009212:	bdf0      	pop	{r4, r5, r6, r7, pc}
10009214:	10011eec 	.word	0x10011eec
10009218:	10011ee8 	.word	0x10011ee8

1000921c <_sbrk>:
extern void _exit(int status);
extern void _kill(int pid, int sig);
extern int _getpid(void);

extern caddr_t _sbrk(int incr)
{
1000921c:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;

	if (heap == NULL) {
1000921e:	4a06      	ldr	r2, [pc, #24]	; (10009238 <_sbrk+0x1c>)
10009220:	6812      	ldr	r2, [r2, #0]
10009222:	2a00      	cmp	r2, #0
10009224:	d004      	beq.n	10009230 <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
10009226:	4a04      	ldr	r2, [pc, #16]	; (10009238 <_sbrk+0x1c>)
10009228:	6810      	ldr	r0, [r2, #0]

	heap += incr;
1000922a:	18c3      	adds	r3, r0, r3
1000922c:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap;
}
1000922e:	4770      	bx	lr
		heap = (unsigned char *)&_end;
10009230:	4902      	ldr	r1, [pc, #8]	; (1000923c <_sbrk+0x20>)
10009232:	4a01      	ldr	r2, [pc, #4]	; (10009238 <_sbrk+0x1c>)
10009234:	6011      	str	r1, [r2, #0]
10009236:	e7f6      	b.n	10009226 <_sbrk+0xa>
10009238:	1001091c 	.word	0x1001091c
1000923c:	10013838 	.word	0x10013838

10009240 <_close>:
}

extern int _close(int file)
{
	return -1;
}
10009240:	2001      	movs	r0, #1
10009242:	4240      	negs	r0, r0
10009244:	4770      	bx	lr

10009246 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
10009246:	2380      	movs	r3, #128	; 0x80
10009248:	019b      	lsls	r3, r3, #6
1000924a:	604b      	str	r3, [r1, #4]

	return 0;
}
1000924c:	2000      	movs	r0, #0
1000924e:	4770      	bx	lr

10009250 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
10009250:	2001      	movs	r0, #1
10009252:	4770      	bx	lr

10009254 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
10009254:	2000      	movs	r0, #0
10009256:	4770      	bx	lr

10009258 <ble_undefined_event_handler>:
at_ble_status_t ble_undefined_event_handler(void *params)
{
	DBG_LOG_DEV("Undefined Event Received");
    ALL_UNUSED(params);
	return AT_BLE_SUCCESS;
}
10009258:	2000      	movs	r0, #0
1000925a:	4770      	bx	lr

1000925c <ble_mtu_changed_indication_handler>:
	mtu_changed_ind = (at_ble_mtu_changed_ind_t *)params;
	DBG_LOG_DEV("BLE-MTU Changed, Connection Handle: %d, New Value: %d", 
										mtu_changed_ind->conhdl, 
										mtu_changed_ind->mtu_value);
	return AT_BLE_SUCCESS;
}
1000925c:	2000      	movs	r0, #0
1000925e:	4770      	bx	lr

10009260 <ble_characteristic_write_cmd_complete_handler>:

at_ble_status_t ble_characteristic_write_cmd_complete_handler(void *params)
{
	at_ble_cmd_complete_event_t *cmd_complete_event;
	cmd_complete_event = (at_ble_cmd_complete_event_t *)params;
	if (cmd_complete_event->status == AT_BLE_SUCCESS)
10009260:	78c0      	ldrb	r0, [r0, #3]
10009262:	2800      	cmp	r0, #0
10009264:	d000      	beq.n	10009268 <ble_characteristic_write_cmd_complete_handler+0x8>
	{
		DBG_LOG_DEV("Char Write Cmd Failed, Connection Handle:%d, Operation:%d",
		cmd_complete_event->conn_handle,
		cmd_complete_event->operation);
	}
	return AT_BLE_FAILURE;
10009266:	20e2      	movs	r0, #226	; 0xe2
}
10009268:	4770      	bx	lr

1000926a <ble_conn_param_update>:
	at_ble_conn_param_update_done_t * conn_param_update;
	conn_param_update = (at_ble_conn_param_update_done_t *)params;
	DBG_LOG_DEV("AT_BLE_CONN_PARAM_UPDATE ");
	ALL_UNUSED(conn_param_update);  //To avoid compiler warning
	return AT_BLE_SUCCESS;
}
1000926a:	2000      	movs	r0, #0
1000926c:	4770      	bx	lr
	...

10009270 <ble_scan_report_handler>:
{
10009270:	b510      	push	{r4, lr}
	if (scan_report->status == AT_BLE_SUCCESS)
10009272:	7800      	ldrb	r0, [r0, #0]
10009274:	2800      	cmp	r0, #0
10009276:	d100      	bne.n	1000927a <ble_scan_report_handler+0xa>
}
10009278:	bd10      	pop	{r4, pc}
		DBG_LOG("Scanning  failed");
1000927a:	4804      	ldr	r0, [pc, #16]	; (1000928c <ble_scan_report_handler+0x1c>)
1000927c:	4b04      	ldr	r3, [pc, #16]	; (10009290 <ble_scan_report_handler+0x20>)
1000927e:	4798      	blx	r3
10009280:	4804      	ldr	r0, [pc, #16]	; (10009294 <ble_scan_report_handler+0x24>)
10009282:	4b05      	ldr	r3, [pc, #20]	; (10009298 <ble_scan_report_handler+0x28>)
10009284:	4798      	blx	r3
	return AT_BLE_FAILURE;
10009286:	20e2      	movs	r0, #226	; 0xe2
10009288:	e7f6      	b.n	10009278 <ble_scan_report_handler+0x8>
1000928a:	46c0      	nop			; (mov r8, r8)
1000928c:	10010514 	.word	0x10010514
10009290:	1000ec09 	.word	0x1000ec09
10009294:	10010518 	.word	0x10010518
10009298:	1000eaed 	.word	0x1000eaed

1000929c <ble_mtu_changed_cmd_complete_handler>:
{
1000929c:	b510      	push	{r4, lr}
1000929e:	0004      	movs	r4, r0
	if (cmd_complete_event->status == AT_BLE_SUCCESS)
100092a0:	78c0      	ldrb	r0, [r0, #3]
100092a2:	2800      	cmp	r0, #0
100092a4:	d100      	bne.n	100092a8 <ble_mtu_changed_cmd_complete_handler+0xc>
}
100092a6:	bd10      	pop	{r4, pc}
		DBG_LOG("MTU Change Failed, Connection Handle:%d, Operation:%d",
100092a8:	4804      	ldr	r0, [pc, #16]	; (100092bc <ble_mtu_changed_cmd_complete_handler+0x20>)
100092aa:	4b05      	ldr	r3, [pc, #20]	; (100092c0 <ble_mtu_changed_cmd_complete_handler+0x24>)
100092ac:	4798      	blx	r3
100092ae:	78a2      	ldrb	r2, [r4, #2]
100092b0:	8821      	ldrh	r1, [r4, #0]
100092b2:	4804      	ldr	r0, [pc, #16]	; (100092c4 <ble_mtu_changed_cmd_complete_handler+0x28>)
100092b4:	4b04      	ldr	r3, [pc, #16]	; (100092c8 <ble_mtu_changed_cmd_complete_handler+0x2c>)
100092b6:	4798      	blx	r3
	return AT_BLE_FAILURE;
100092b8:	20e2      	movs	r0, #226	; 0xe2
100092ba:	e7f4      	b.n	100092a6 <ble_mtu_changed_cmd_complete_handler+0xa>
100092bc:	10010514 	.word	0x10010514
100092c0:	1000ec09 	.word	0x1000ec09
100092c4:	10010304 	.word	0x10010304
100092c8:	1000eaed 	.word	0x1000eaed

100092cc <ble_disconnected_state_handler>:
{
100092cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100092ce:	0004      	movs	r4, r0
100092d0:	4b1a      	ldr	r3, [pc, #104]	; (1000933c <ble_disconnected_state_handler+0x70>)
100092d2:	229b      	movs	r2, #155	; 0x9b
100092d4:	0092      	lsls	r2, r2, #2
100092d6:	189d      	adds	r5, r3, r2
			ble_dev_info[idx].conn_state = BLE_DEVICE_DISCONNECTED;
100092d8:	2701      	movs	r7, #1
				ble_dev_info[idx].conn_state = BLE_DEVICE_DEFAULT_IDLE;
100092da:	2600      	movs	r6, #0
100092dc:	e003      	b.n	100092e6 <ble_disconnected_state_handler+0x1a>
			ble_dev_info[idx].conn_state = BLE_DEVICE_DISCONNECTED;
100092de:	7007      	strb	r7, [r0, #0]
100092e0:	337c      	adds	r3, #124	; 0x7c
	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++)
100092e2:	42ab      	cmp	r3, r5
100092e4:	d01f      	beq.n	10009326 <ble_disconnected_state_handler+0x5a>
100092e6:	0018      	movs	r0, r3
		if((ble_dev_info[idx].conn_info.handle == disconnect->handle) && 
100092e8:	001a      	movs	r2, r3
100092ea:	3a56      	subs	r2, #86	; 0x56
100092ec:	8811      	ldrh	r1, [r2, #0]
100092ee:	8822      	ldrh	r2, [r4, #0]
100092f0:	4291      	cmp	r1, r2
100092f2:	d1f5      	bne.n	100092e0 <ble_disconnected_state_handler+0x14>
		((ble_dev_info[idx].conn_state == BLE_DEVICE_PAIRED) || (ble_dev_info[idx].conn_state == BLE_DEVICE_ENCRYPTION_COMPLETED)))
100092f4:	781a      	ldrb	r2, [r3, #0]
		if((ble_dev_info[idx].conn_info.handle == disconnect->handle) && 
100092f6:	2a05      	cmp	r2, #5
100092f8:	d0f1      	beq.n	100092de <ble_disconnected_state_handler+0x12>
		((ble_dev_info[idx].conn_state == BLE_DEVICE_PAIRED) || (ble_dev_info[idx].conn_state == BLE_DEVICE_ENCRYPTION_COMPLETED)))
100092fa:	2a08      	cmp	r2, #8
100092fc:	d0ef      	beq.n	100092de <ble_disconnected_state_handler+0x12>
			switch (ble_dev_info[idx].conn_state)
100092fe:	2a07      	cmp	r2, #7
10009300:	d80f      	bhi.n	10009322 <ble_disconnected_state_handler+0x56>
10009302:	0092      	lsls	r2, r2, #2
10009304:	490e      	ldr	r1, [pc, #56]	; (10009340 <ble_disconnected_state_handler+0x74>)
10009306:	588a      	ldr	r2, [r1, r2]
10009308:	4697      	mov	pc, r2
					ble_dev_info[idx].conn_state = BLE_DEVICE_DEFAULT_IDLE;
1000930a:	701e      	strb	r6, [r3, #0]
					if (ble_device_count > 0)
1000930c:	4a0d      	ldr	r2, [pc, #52]	; (10009344 <ble_disconnected_state_handler+0x78>)
1000930e:	7812      	ldrb	r2, [r2, #0]
10009310:	2a00      	cmp	r2, #0
10009312:	d0e5      	beq.n	100092e0 <ble_disconnected_state_handler+0x14>
						ble_device_count--;
10009314:	4a0b      	ldr	r2, [pc, #44]	; (10009344 <ble_disconnected_state_handler+0x78>)
10009316:	7812      	ldrb	r2, [r2, #0]
10009318:	3a01      	subs	r2, #1
1000931a:	b2d2      	uxtb	r2, r2
1000931c:	4909      	ldr	r1, [pc, #36]	; (10009344 <ble_disconnected_state_handler+0x78>)
1000931e:	700a      	strb	r2, [r1, #0]
10009320:	e7de      	b.n	100092e0 <ble_disconnected_state_handler+0x14>
				ble_dev_info[idx].conn_state = BLE_DEVICE_DEFAULT_IDLE;
10009322:	7006      	strb	r6, [r0, #0]
				break;				
10009324:	e7dc      	b.n	100092e0 <ble_disconnected_state_handler+0x14>
	DBG_LOG("Device disconnected Reason:0x%02x Handle=0x%x", disconnect->reason, disconnect->handle);
10009326:	4808      	ldr	r0, [pc, #32]	; (10009348 <ble_disconnected_state_handler+0x7c>)
10009328:	4b08      	ldr	r3, [pc, #32]	; (1000934c <ble_disconnected_state_handler+0x80>)
1000932a:	4798      	blx	r3
1000932c:	8822      	ldrh	r2, [r4, #0]
1000932e:	78a1      	ldrb	r1, [r4, #2]
10009330:	4807      	ldr	r0, [pc, #28]	; (10009350 <ble_disconnected_state_handler+0x84>)
10009332:	4b08      	ldr	r3, [pc, #32]	; (10009354 <ble_disconnected_state_handler+0x88>)
10009334:	4798      	blx	r3
}
10009336:	2000      	movs	r0, #0
10009338:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000933a:	46c0      	nop			; (mov r8, r8)
1000933c:	10011f66 	.word	0x10011f66
10009340:	1000feec 	.word	0x1000feec
10009344:	10012174 	.word	0x10012174
10009348:	10010514 	.word	0x10010514
1000934c:	1000ec09 	.word	0x1000ec09
10009350:	10010150 	.word	0x10010150
10009354:	1000eaed 	.word	0x1000eaed

10009358 <ble_encryption_status_change_handler>:
	return AT_BLE_SUCCESS;
}

/** @brief function handles encryption status change */
at_ble_status_t ble_encryption_status_change_handler(void *params)
{
10009358:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000935a:	0006      	movs	r6, r0
	
	enc_status = (at_ble_encryption_status_changed_t *)params;
	
	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++)
	{
		if((ble_dev_info[idx].conn_info.handle == enc_status->handle) && (ble_dev_info[idx].conn_state == BLE_DEVICE_ENCRYPTION_STATE))
1000935c:	8801      	ldrh	r1, [r0, #0]
1000935e:	4b26      	ldr	r3, [pc, #152]	; (100093f8 <ble_encryption_status_change_handler+0xa0>)
	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++)
10009360:	2400      	movs	r4, #0
10009362:	e004      	b.n	1000936e <ble_encryption_status_change_handler+0x16>
10009364:	3401      	adds	r4, #1
10009366:	b2e4      	uxtb	r4, r4
10009368:	337c      	adds	r3, #124	; 0x7c
1000936a:	2c05      	cmp	r4, #5
1000936c:	d02e      	beq.n	100093cc <ble_encryption_status_change_handler+0x74>
		if((ble_dev_info[idx].conn_info.handle == enc_status->handle) && (ble_dev_info[idx].conn_state == BLE_DEVICE_ENCRYPTION_STATE))
1000936e:	891a      	ldrh	r2, [r3, #8]
10009370:	428a      	cmp	r2, r1
10009372:	d1f7      	bne.n	10009364 <ble_encryption_status_change_handler+0xc>
10009374:	001a      	movs	r2, r3
10009376:	325e      	adds	r2, #94	; 0x5e
10009378:	7812      	ldrb	r2, [r2, #0]
1000937a:	2a06      	cmp	r2, #6
1000937c:	d1f2      	bne.n	10009364 <ble_encryption_status_change_handler+0xc>
			device_found = true;
			break;
		}
	}
	
	if(enc_status->status == AT_BLE_SUCCESS)
1000937e:	78b5      	ldrb	r5, [r6, #2]
10009380:	2d00      	cmp	r5, #0
10009382:	d126      	bne.n	100093d2 <ble_encryption_status_change_handler+0x7a>
	{
		DBG_LOG("Encryption completed successfully");
10009384:	481d      	ldr	r0, [pc, #116]	; (100093fc <ble_encryption_status_change_handler+0xa4>)
10009386:	4b1e      	ldr	r3, [pc, #120]	; (10009400 <ble_encryption_status_change_handler+0xa8>)
10009388:	4798      	blx	r3
1000938a:	481e      	ldr	r0, [pc, #120]	; (10009404 <ble_encryption_status_change_handler+0xac>)
1000938c:	4b1e      	ldr	r3, [pc, #120]	; (10009408 <ble_encryption_status_change_handler+0xb0>)
1000938e:	4798      	blx	r3
		if (device_found)
		{
			ble_dev_info[idx].conn_state = BLE_DEVICE_ENCRYPTION_COMPLETED;
10009390:	4919      	ldr	r1, [pc, #100]	; (100093f8 <ble_encryption_status_change_handler+0xa0>)
10009392:	0163      	lsls	r3, r4, #5
10009394:	1b1a      	subs	r2, r3, r4
10009396:	0092      	lsls	r2, r2, #2
10009398:	188a      	adds	r2, r1, r2
1000939a:	0010      	movs	r0, r2
1000939c:	305e      	adds	r0, #94	; 0x5e
1000939e:	2708      	movs	r7, #8
100093a0:	7007      	strb	r7, [r0, #0]
			ble_dev_info[idx].bond_info.auth = enc_status->authen;
100093a2:	78f0      	ldrb	r0, [r6, #3]
100093a4:	7510      	strb	r0, [r2, #20]
			ble_dev_info[idx].bond_info.status = enc_status->status;
100093a6:	78b2      	ldrb	r2, [r6, #2]
100093a8:	1b1c      	subs	r4, r3, r4
100093aa:	00a4      	lsls	r4, r4, #2
100093ac:	190c      	adds	r4, r1, r4
100093ae:	7622      	strb	r2, [r4, #24]
		ble_dev_info[idx].bond_info.status = enc_status->status;
		ble_dev_info[idx].conn_state = BLE_DEVICE_ENCRYPTION_FAILED;
		DBG_LOG("Encryption failed");
		return AT_BLE_FAILURE;
	}
	return AT_BLE_SUCCESS;
100093b0:	e020      	b.n	100093f4 <ble_encryption_status_change_handler+0x9c>
		DBG_LOG("Encryption completed successfully");
100093b2:	4e12      	ldr	r6, [pc, #72]	; (100093fc <ble_encryption_status_change_handler+0xa4>)
100093b4:	0030      	movs	r0, r6
100093b6:	4d12      	ldr	r5, [pc, #72]	; (10009400 <ble_encryption_status_change_handler+0xa8>)
100093b8:	47a8      	blx	r5
100093ba:	4812      	ldr	r0, [pc, #72]	; (10009404 <ble_encryption_status_change_handler+0xac>)
100093bc:	4c12      	ldr	r4, [pc, #72]	; (10009408 <ble_encryption_status_change_handler+0xb0>)
100093be:	47a0      	blx	r4
			DBG_LOG("BLE Device not found encryption info");
100093c0:	0030      	movs	r0, r6
100093c2:	47a8      	blx	r5
100093c4:	4811      	ldr	r0, [pc, #68]	; (1000940c <ble_encryption_status_change_handler+0xb4>)
100093c6:	47a0      	blx	r4
			return AT_BLE_FAILURE;
100093c8:	25e2      	movs	r5, #226	; 0xe2
100093ca:	e013      	b.n	100093f4 <ble_encryption_status_change_handler+0x9c>
	if(enc_status->status == AT_BLE_SUCCESS)
100093cc:	78b5      	ldrb	r5, [r6, #2]
100093ce:	2d00      	cmp	r5, #0
100093d0:	d0ef      	beq.n	100093b2 <ble_encryption_status_change_handler+0x5a>
		ble_dev_info[idx].bond_info.status = enc_status->status;
100093d2:	4b09      	ldr	r3, [pc, #36]	; (100093f8 <ble_encryption_status_change_handler+0xa0>)
100093d4:	0162      	lsls	r2, r4, #5
100093d6:	1b11      	subs	r1, r2, r4
100093d8:	0089      	lsls	r1, r1, #2
100093da:	1859      	adds	r1, r3, r1
100093dc:	760d      	strb	r5, [r1, #24]
		ble_dev_info[idx].conn_state = BLE_DEVICE_ENCRYPTION_FAILED;
100093de:	000b      	movs	r3, r1
100093e0:	335e      	adds	r3, #94	; 0x5e
100093e2:	2207      	movs	r2, #7
100093e4:	701a      	strb	r2, [r3, #0]
		DBG_LOG("Encryption failed");
100093e6:	4805      	ldr	r0, [pc, #20]	; (100093fc <ble_encryption_status_change_handler+0xa4>)
100093e8:	4b05      	ldr	r3, [pc, #20]	; (10009400 <ble_encryption_status_change_handler+0xa8>)
100093ea:	4798      	blx	r3
100093ec:	4808      	ldr	r0, [pc, #32]	; (10009410 <ble_encryption_status_change_handler+0xb8>)
100093ee:	4b06      	ldr	r3, [pc, #24]	; (10009408 <ble_encryption_status_change_handler+0xb0>)
100093f0:	4798      	blx	r3
		return AT_BLE_FAILURE;
100093f2:	25e2      	movs	r5, #226	; 0xe2
}
100093f4:	0028      	movs	r0, r5
100093f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100093f8:	10011f08 	.word	0x10011f08
100093fc:	10010514 	.word	0x10010514
10009400:	1000ec09 	.word	0x1000ec09
10009404:	10010244 	.word	0x10010244
10009408:	1000eaed 	.word	0x1000eaed
1000940c:	10010268 	.word	0x10010268
10009410:	10010230 	.word	0x10010230

10009414 <ble_scan_info_handler>:
{
10009414:	b510      	push	{r4, lr}
	if(scan_response_count < MAX_SCAN_DEVICE)
10009416:	4b17      	ldr	r3, [pc, #92]	; (10009474 <ble_scan_info_handler+0x60>)
10009418:	781b      	ldrb	r3, [r3, #0]
1000941a:	b2db      	uxtb	r3, r3
1000941c:	2b13      	cmp	r3, #19
1000941e:	d90c      	bls.n	1000943a <ble_scan_info_handler+0x26>
		DBG_LOG("Info:maximum no.of scan device reached...Stopping Scan");
10009420:	4815      	ldr	r0, [pc, #84]	; (10009478 <ble_scan_info_handler+0x64>)
10009422:	4b16      	ldr	r3, [pc, #88]	; (1000947c <ble_scan_info_handler+0x68>)
10009424:	4798      	blx	r3
10009426:	4816      	ldr	r0, [pc, #88]	; (10009480 <ble_scan_info_handler+0x6c>)
10009428:	4b16      	ldr	r3, [pc, #88]	; (10009484 <ble_scan_info_handler+0x70>)
1000942a:	4798      	blx	r3
		if(at_ble_scan_stop() != AT_BLE_SUCCESS)
1000942c:	4b16      	ldr	r3, [pc, #88]	; (10009488 <ble_scan_info_handler+0x74>)
1000942e:	4798      	blx	r3
		return AT_BLE_FAILURE;
10009430:	23e2      	movs	r3, #226	; 0xe2
		if(at_ble_scan_stop() != AT_BLE_SUCCESS)
10009432:	2800      	cmp	r0, #0
10009434:	d116      	bne.n	10009464 <ble_scan_info_handler+0x50>
}
10009436:	0018      	movs	r0, r3
10009438:	bd10      	pop	{r4, pc}
		memcpy((uint8_t *)&scan_info[scan_response_count], scan_param, sizeof(at_ble_scan_info_t));
1000943a:	4c0e      	ldr	r4, [pc, #56]	; (10009474 <ble_scan_info_handler+0x60>)
1000943c:	7822      	ldrb	r2, [r4, #0]
1000943e:	b2d2      	uxtb	r2, r2
10009440:	0093      	lsls	r3, r2, #2
10009442:	189b      	adds	r3, r3, r2
10009444:	00db      	lsls	r3, r3, #3
10009446:	189b      	adds	r3, r3, r2
10009448:	4a10      	ldr	r2, [pc, #64]	; (1000948c <ble_scan_info_handler+0x78>)
1000944a:	189b      	adds	r3, r3, r2
1000944c:	2229      	movs	r2, #41	; 0x29
1000944e:	0001      	movs	r1, r0
10009450:	0018      	movs	r0, r3
10009452:	4b0f      	ldr	r3, [pc, #60]	; (10009490 <ble_scan_info_handler+0x7c>)
10009454:	4798      	blx	r3
		DBG_LOG_DEV("Info:Device found address [%d]  0x%02X%02X%02X%02X%02X%02X ",
10009456:	7823      	ldrb	r3, [r4, #0]
		scan_response_count++;
10009458:	7823      	ldrb	r3, [r4, #0]
1000945a:	3301      	adds	r3, #1
1000945c:	b2db      	uxtb	r3, r3
1000945e:	7023      	strb	r3, [r4, #0]
		return AT_BLE_SUCCESS;
10009460:	2300      	movs	r3, #0
10009462:	e7e8      	b.n	10009436 <ble_scan_info_handler+0x22>
			DBG_LOG("Failed to stop scanning");
10009464:	4804      	ldr	r0, [pc, #16]	; (10009478 <ble_scan_info_handler+0x64>)
10009466:	4b05      	ldr	r3, [pc, #20]	; (1000947c <ble_scan_info_handler+0x68>)
10009468:	4798      	blx	r3
1000946a:	480a      	ldr	r0, [pc, #40]	; (10009494 <ble_scan_info_handler+0x80>)
1000946c:	4b05      	ldr	r3, [pc, #20]	; (10009484 <ble_scan_info_handler+0x70>)
1000946e:	4798      	blx	r3
		return AT_BLE_FAILURE;
10009470:	23e2      	movs	r3, #226	; 0xe2
10009472:	e7e0      	b.n	10009436 <ble_scan_info_handler+0x22>
10009474:	10011d2c 	.word	0x10011d2c
10009478:	10010514 	.word	0x10010514
1000947c:	1000ec09 	.word	0x1000ec09
10009480:	100104c4 	.word	0x100104c4
10009484:	1000eaed 	.word	0x1000eaed
10009488:	1000bc69 	.word	0x1000bc69
1000948c:	100121ec 	.word	0x100121ec
10009490:	1000eacb 	.word	0x1000eacb
10009494:	100104fc 	.word	0x100104fc

10009498 <ble_resolv_rand_addr_handler>:
{
10009498:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if(ble_resolv_rand_addr_status->status == AT_BLE_SUCCESS)
1000949a:	7803      	ldrb	r3, [r0, #0]
1000949c:	2b00      	cmp	r3, #0
1000949e:	d10e      	bne.n	100094be <ble_resolv_rand_addr_handler+0x26>
100094a0:	4d24      	ldr	r5, [pc, #144]	; (10009534 <ble_resolv_rand_addr_handler+0x9c>)
100094a2:	2400      	movs	r4, #0
			if (!memcmp((uint8_t *)ble_resolv_rand_addr_status->irk, (uint8_t *)ble_dev_info[idx].bond_info.peer_irk.key, AT_BLE_MAX_KEY_LEN))
100094a4:	1c46      	adds	r6, r0, #1
100094a6:	4f24      	ldr	r7, [pc, #144]	; (10009538 <ble_resolv_rand_addr_handler+0xa0>)
100094a8:	2210      	movs	r2, #16
100094aa:	0029      	movs	r1, r5
100094ac:	0030      	movs	r0, r6
100094ae:	47b8      	blx	r7
100094b0:	2800      	cmp	r0, #0
100094b2:	d02e      	beq.n	10009512 <ble_resolv_rand_addr_handler+0x7a>
		for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++)
100094b4:	3401      	adds	r4, #1
100094b6:	b2e4      	uxtb	r4, r4
100094b8:	357c      	adds	r5, #124	; 0x7c
100094ba:	2c05      	cmp	r4, #5
100094bc:	d1f4      	bne.n	100094a8 <ble_resolv_rand_addr_handler+0x10>
			if(ble_dev_info[idx].conn_state == BLE_DEVICE_DEFAULT_IDLE)
100094be:	235e      	movs	r3, #94	; 0x5e
100094c0:	4a1e      	ldr	r2, [pc, #120]	; (1000953c <ble_resolv_rand_addr_handler+0xa4>)
100094c2:	5cd3      	ldrb	r3, [r2, r3]
100094c4:	2b00      	cmp	r3, #0
100094c6:	d00b      	beq.n	100094e0 <ble_resolv_rand_addr_handler+0x48>
100094c8:	4a1d      	ldr	r2, [pc, #116]	; (10009540 <ble_resolv_rand_addr_handler+0xa8>)
100094ca:	2301      	movs	r3, #1
100094cc:	001c      	movs	r4, r3
100094ce:	7811      	ldrb	r1, [r2, #0]
100094d0:	2900      	cmp	r1, #0
100094d2:	d006      	beq.n	100094e2 <ble_resolv_rand_addr_handler+0x4a>
100094d4:	3301      	adds	r3, #1
100094d6:	327c      	adds	r2, #124	; 0x7c
		for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++)
100094d8:	2b05      	cmp	r3, #5
100094da:	d1f7      	bne.n	100094cc <ble_resolv_rand_addr_handler+0x34>
}
100094dc:	2000      	movs	r0, #0
100094de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			if(ble_dev_info[idx].conn_state == BLE_DEVICE_DEFAULT_IDLE)
100094e0:	2400      	movs	r4, #0
				memcpy(&ble_dev_info[idx].conn_info, (uint8_t *)&connected_state_info, sizeof(at_ble_connected_t));
100094e2:	4e16      	ldr	r6, [pc, #88]	; (1000953c <ble_resolv_rand_addr_handler+0xa4>)
100094e4:	0167      	lsls	r7, r4, #5
100094e6:	1b3d      	subs	r5, r7, r4
100094e8:	00ad      	lsls	r5, r5, #2
100094ea:	1975      	adds	r5, r6, r5
100094ec:	2212      	movs	r2, #18
100094ee:	4915      	ldr	r1, [pc, #84]	; (10009544 <ble_resolv_rand_addr_handler+0xac>)
100094f0:	0028      	movs	r0, r5
100094f2:	4b15      	ldr	r3, [pc, #84]	; (10009548 <ble_resolv_rand_addr_handler+0xb0>)
100094f4:	4798      	blx	r3
				ble_device_count++;
100094f6:	4a15      	ldr	r2, [pc, #84]	; (1000954c <ble_resolv_rand_addr_handler+0xb4>)
100094f8:	7813      	ldrb	r3, [r2, #0]
100094fa:	3301      	adds	r3, #1
100094fc:	b2db      	uxtb	r3, r3
100094fe:	7013      	strb	r3, [r2, #0]
				ble_dev_info[idx].conn_state = BLE_DEVICE_CONNECTED;
10009500:	355e      	adds	r5, #94	; 0x5e
10009502:	2302      	movs	r3, #2
10009504:	702b      	strb	r3, [r5, #0]
				ble_dev_info[idx].dev_role = AT_BLE_ROLE_PERIPHERAL;
10009506:	1b3c      	subs	r4, r7, r4
10009508:	00a4      	lsls	r4, r4, #2
1000950a:	1934      	adds	r4, r6, r4
1000950c:	3308      	adds	r3, #8
1000950e:	74a3      	strb	r3, [r4, #18]
				break;
10009510:	e7e4      	b.n	100094dc <ble_resolv_rand_addr_handler+0x44>
		ble_dev_info[idx].conn_state = BLE_DEVICE_CONNECTED;
10009512:	480a      	ldr	r0, [pc, #40]	; (1000953c <ble_resolv_rand_addr_handler+0xa4>)
10009514:	0163      	lsls	r3, r4, #5
10009516:	1b1a      	subs	r2, r3, r4
10009518:	0092      	lsls	r2, r2, #2
1000951a:	1882      	adds	r2, r0, r2
1000951c:	0011      	movs	r1, r2
1000951e:	315e      	adds	r1, #94	; 0x5e
10009520:	2502      	movs	r5, #2
10009522:	700d      	strb	r5, [r1, #0]
		ble_dev_info[idx].dev_role = AT_BLE_ROLE_PERIPHERAL;
10009524:	210a      	movs	r1, #10
10009526:	7491      	strb	r1, [r2, #18]
		memcpy((uint8_t *)&ble_dev_info[idx].conn_info, (uint8_t *)&connected_state_info, sizeof(at_ble_connected_t));
10009528:	0010      	movs	r0, r2
1000952a:	2212      	movs	r2, #18
1000952c:	4905      	ldr	r1, [pc, #20]	; (10009544 <ble_resolv_rand_addr_handler+0xac>)
1000952e:	4b06      	ldr	r3, [pc, #24]	; (10009548 <ble_resolv_rand_addr_handler+0xb0>)
10009530:	4798      	blx	r3
	return AT_BLE_SUCCESS;
10009532:	e7d3      	b.n	100094dc <ble_resolv_rand_addr_handler+0x44>
10009534:	10011f4e 	.word	0x10011f4e
10009538:	1000eaad 	.word	0x1000eaad
1000953c:	10011f08 	.word	0x10011f08
10009540:	10011fe2 	.word	0x10011fe2
10009544:	100121b4 	.word	0x100121b4
10009548:	1000eacb 	.word	0x1000eacb
1000954c:	10012174 	.word	0x10012174

10009550 <ble_connected_state_handler>:
{
10009550:	b5f0      	push	{r4, r5, r6, r7, lr}
10009552:	46de      	mov	lr, fp
10009554:	464f      	mov	r7, r9
10009556:	4646      	mov	r6, r8
10009558:	b5c0      	push	{r6, r7, lr}
1000955a:	b09a      	sub	sp, #104	; 0x68
1000955c:	0004      	movs	r4, r0
	if (conn_params->conn_status == AT_BLE_SUCCESS)
1000955e:	7a86      	ldrb	r6, [r0, #10]
10009560:	2e00      	cmp	r6, #0
10009562:	d000      	beq.n	10009566 <ble_connected_state_handler+0x16>
10009564:	e0c5      	b.n	100096f2 <ble_connected_state_handler+0x1a2>
		DBG_LOG("Connected to peer device with address 0x%02x%02x%02x%02x%02x%02x",
10009566:	486a      	ldr	r0, [pc, #424]	; (10009710 <ble_connected_state_handler+0x1c0>)
10009568:	4f6a      	ldr	r7, [pc, #424]	; (10009714 <ble_connected_state_handler+0x1c4>)
1000956a:	47b8      	blx	r7
1000956c:	7923      	ldrb	r3, [r4, #4]
1000956e:	7962      	ldrb	r2, [r4, #5]
10009570:	79a1      	ldrb	r1, [r4, #6]
10009572:	7860      	ldrb	r0, [r4, #1]
10009574:	9002      	str	r0, [sp, #8]
10009576:	78a0      	ldrb	r0, [r4, #2]
10009578:	9001      	str	r0, [sp, #4]
1000957a:	78e0      	ldrb	r0, [r4, #3]
1000957c:	9000      	str	r0, [sp, #0]
1000957e:	4866      	ldr	r0, [pc, #408]	; (10009718 <ble_connected_state_handler+0x1c8>)
10009580:	4d66      	ldr	r5, [pc, #408]	; (1000971c <ble_connected_state_handler+0x1cc>)
10009582:	47a8      	blx	r5
		DBG_LOG("Connection Handle %d", conn_params->handle);
10009584:	4862      	ldr	r0, [pc, #392]	; (10009710 <ble_connected_state_handler+0x1c0>)
10009586:	47b8      	blx	r7
10009588:	8921      	ldrh	r1, [r4, #8]
1000958a:	4865      	ldr	r0, [pc, #404]	; (10009720 <ble_connected_state_handler+0x1d0>)
1000958c:	47a8      	blx	r5
		memcpy((uint8_t *)&connected_state_info, (uint8_t *)conn_params, sizeof(at_ble_connected_t));	
1000958e:	2212      	movs	r2, #18
10009590:	0021      	movs	r1, r4
10009592:	4864      	ldr	r0, [pc, #400]	; (10009724 <ble_connected_state_handler+0x1d4>)
10009594:	4b64      	ldr	r3, [pc, #400]	; (10009728 <ble_connected_state_handler+0x1d8>)
10009596:	4798      	blx	r3
		if(memcmp((uint8_t *)&ble_peripheral_dev_address, (uint8_t *)&conn_params->peer_addr, sizeof(at_ble_addr_t)))
10009598:	9404      	str	r4, [sp, #16]
1000959a:	2207      	movs	r2, #7
1000959c:	0021      	movs	r1, r4
1000959e:	4863      	ldr	r0, [pc, #396]	; (1000972c <ble_connected_state_handler+0x1dc>)
100095a0:	4b63      	ldr	r3, [pc, #396]	; (10009730 <ble_connected_state_handler+0x1e0>)
100095a2:	4798      	blx	r3
100095a4:	2800      	cmp	r0, #0
100095a6:	d002      	beq.n	100095ae <ble_connected_state_handler+0x5e>
			if (conn_params->peer_addr.type == AT_BLE_ADDRESS_RANDOM_PRIVATE_RESOLVABLE) 
100095a8:	7823      	ldrb	r3, [r4, #0]
100095aa:	2b02      	cmp	r3, #2
100095ac:	d03e      	beq.n	1000962c <ble_connected_state_handler+0xdc>
		if (ble_device_count < BLE_MAX_DEVICE_CONNECTED)
100095ae:	4b61      	ldr	r3, [pc, #388]	; (10009734 <ble_connected_state_handler+0x1e4>)
100095b0:	781b      	ldrb	r3, [r3, #0]
100095b2:	b2db      	uxtb	r3, r3
100095b4:	2b04      	cmp	r3, #4
100095b6:	d900      	bls.n	100095ba <ble_connected_state_handler+0x6a>
100095b8:	e08d      	b.n	100096d6 <ble_connected_state_handler+0x186>
100095ba:	4b5f      	ldr	r3, [pc, #380]	; (10009738 <ble_connected_state_handler+0x1e8>)
100095bc:	4699      	mov	r9, r3
100095be:	2500      	movs	r5, #0
				if(!memcmp((uint8_t *)&ble_dev_info[idx].conn_info.peer_addr, (uint8_t *)&conn_params->peer_addr, sizeof(at_ble_addr_t)))
100095c0:	4b5b      	ldr	r3, [pc, #364]	; (10009730 <ble_connected_state_handler+0x1e0>)
100095c2:	469b      	mov	fp, r3
100095c4:	b2ef      	uxtb	r7, r5
100095c6:	9505      	str	r5, [sp, #20]
100095c8:	2207      	movs	r2, #7
100095ca:	9904      	ldr	r1, [sp, #16]
100095cc:	4648      	mov	r0, r9
100095ce:	47d8      	blx	fp
100095d0:	2800      	cmp	r0, #0
100095d2:	d052      	beq.n	1000967a <ble_connected_state_handler+0x12a>
100095d4:	3501      	adds	r5, #1
100095d6:	237c      	movs	r3, #124	; 0x7c
100095d8:	469c      	mov	ip, r3
100095da:	44e1      	add	r9, ip
			for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++)
100095dc:	2d05      	cmp	r5, #5
100095de:	d1f1      	bne.n	100095c4 <ble_connected_state_handler+0x74>
					if(ble_dev_info[idx].conn_state == BLE_DEVICE_DEFAULT_IDLE)
100095e0:	235e      	movs	r3, #94	; 0x5e
100095e2:	4a55      	ldr	r2, [pc, #340]	; (10009738 <ble_connected_state_handler+0x1e8>)
100095e4:	5cd3      	ldrb	r3, [r2, r3]
100095e6:	2b00      	cmp	r3, #0
100095e8:	d051      	beq.n	1000968e <ble_connected_state_handler+0x13e>
100095ea:	4a54      	ldr	r2, [pc, #336]	; (1000973c <ble_connected_state_handler+0x1ec>)
100095ec:	2301      	movs	r3, #1
				for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++)
100095ee:	2701      	movs	r7, #1
					if(ble_dev_info[idx].conn_state == BLE_DEVICE_DEFAULT_IDLE)
100095f0:	001d      	movs	r5, r3
100095f2:	7811      	ldrb	r1, [r2, #0]
100095f4:	2900      	cmp	r1, #0
100095f6:	d04c      	beq.n	10009692 <ble_connected_state_handler+0x142>
				for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++)
100095f8:	3701      	adds	r7, #1
100095fa:	b2ff      	uxtb	r7, r7
100095fc:	3301      	adds	r3, #1
100095fe:	327c      	adds	r2, #124	; 0x7c
10009600:	2f05      	cmp	r7, #5
10009602:	d1f5      	bne.n	100095f0 <ble_connected_state_handler+0xa0>
			if(!memcmp((uint8_t *)&ble_peripheral_dev_address, (uint8_t *)&conn_params->peer_addr, sizeof(at_ble_addr_t)))
10009604:	2207      	movs	r2, #7
10009606:	0021      	movs	r1, r4
10009608:	4848      	ldr	r0, [pc, #288]	; (1000972c <ble_connected_state_handler+0x1dc>)
1000960a:	4b49      	ldr	r3, [pc, #292]	; (10009730 <ble_connected_state_handler+0x1e0>)
1000960c:	4798      	blx	r3
1000960e:	2800      	cmp	r0, #0
10009610:	d159      	bne.n	100096c6 <ble_connected_state_handler+0x176>
				ble_dev_info[idx].dev_role = AT_BLE_ROLE_CENTRAL;
10009612:	017b      	lsls	r3, r7, #5
10009614:	1bdb      	subs	r3, r3, r7
10009616:	009b      	lsls	r3, r3, #2
10009618:	4a47      	ldr	r2, [pc, #284]	; (10009738 <ble_connected_state_handler+0x1e8>)
1000961a:	18d3      	adds	r3, r2, r3
1000961c:	2205      	movs	r2, #5
1000961e:	749a      	strb	r2, [r3, #18]
			memset((uint8_t *)&ble_peripheral_dev_address, 0, sizeof(at_ble_addr_t));
10009620:	2207      	movs	r2, #7
10009622:	2100      	movs	r1, #0
10009624:	4841      	ldr	r0, [pc, #260]	; (1000972c <ble_connected_state_handler+0x1dc>)
10009626:	4b46      	ldr	r3, [pc, #280]	; (10009740 <ble_connected_state_handler+0x1f0>)
10009628:	4798      	blx	r3
1000962a:	e06a      	b.n	10009702 <ble_connected_state_handler+0x1b2>
				uint8_t irk_key[BLE_MAX_DEVICE_CONNECTED * AT_BLE_MAX_KEY_LEN] = {0, };
1000962c:	2250      	movs	r2, #80	; 0x50
1000962e:	2100      	movs	r1, #0
10009630:	a806      	add	r0, sp, #24
10009632:	4b43      	ldr	r3, [pc, #268]	; (10009740 <ble_connected_state_handler+0x1f0>)
10009634:	4798      	blx	r3
10009636:	4f43      	ldr	r7, [pc, #268]	; (10009744 <ble_connected_state_handler+0x1f4>)
				uint16_t key_len = 0;
10009638:	2300      	movs	r3, #0
						irk_key[key_len++] = ble_dev_info[idx1].bond_info.peer_irk.key[idx2];
1000963a:	ae06      	add	r6, sp, #24
1000963c:	001d      	movs	r5, r3
1000963e:	3510      	adds	r5, #16
10009640:	b2ad      	uxth	r5, r5
{
10009642:	0039      	movs	r1, r7
10009644:	001a      	movs	r2, r3
						irk_key[key_len++] = ble_dev_info[idx1].bond_info.peer_irk.key[idx2];
10009646:	1c53      	adds	r3, r2, #1
10009648:	b29b      	uxth	r3, r3
1000964a:	7808      	ldrb	r0, [r1, #0]
1000964c:	54b0      	strb	r0, [r6, r2]
1000964e:	3101      	adds	r1, #1
10009650:	001a      	movs	r2, r3
					for (idx2 = 0; idx2 < AT_BLE_MAX_KEY_LEN; idx2++)
10009652:	42ab      	cmp	r3, r5
10009654:	d1f7      	bne.n	10009646 <ble_connected_state_handler+0xf6>
10009656:	377c      	adds	r7, #124	; 0x7c
				for (idx1 = 0; idx1 < BLE_MAX_DEVICE_CONNECTED; idx1++)
10009658:	2b50      	cmp	r3, #80	; 0x50
1000965a:	d1ef      	bne.n	1000963c <ble_connected_state_handler+0xec>
					if(at_ble_random_address_resolve(BLE_MAX_DEVICE_CONNECTED, &conn_params->peer_addr, irk_key) == AT_BLE_SUCCESS)
1000965c:	aa06      	add	r2, sp, #24
1000965e:	0021      	movs	r1, r4
10009660:	2005      	movs	r0, #5
10009662:	4b39      	ldr	r3, [pc, #228]	; (10009748 <ble_connected_state_handler+0x1f8>)
10009664:	4798      	blx	r3
10009666:	1e06      	subs	r6, r0, #0
10009668:	d04b      	beq.n	10009702 <ble_connected_state_handler+0x1b2>
						DBG_LOG("Resolving Random address failed**");
1000966a:	4829      	ldr	r0, [pc, #164]	; (10009710 <ble_connected_state_handler+0x1c0>)
1000966c:	4b29      	ldr	r3, [pc, #164]	; (10009714 <ble_connected_state_handler+0x1c4>)
1000966e:	4798      	blx	r3
10009670:	4836      	ldr	r0, [pc, #216]	; (1000974c <ble_connected_state_handler+0x1fc>)
10009672:	4b2a      	ldr	r3, [pc, #168]	; (1000971c <ble_connected_state_handler+0x1cc>)
10009674:	4798      	blx	r3
						return AT_BLE_FAILURE;
10009676:	26e2      	movs	r6, #226	; 0xe2
10009678:	e043      	b.n	10009702 <ble_connected_state_handler+0x1b2>
					ble_dev_info[idx].conn_state = BLE_DEVICE_CONNECTED;
1000967a:	9b05      	ldr	r3, [sp, #20]
1000967c:	015a      	lsls	r2, r3, #5
1000967e:	1ad2      	subs	r2, r2, r3
10009680:	0092      	lsls	r2, r2, #2
10009682:	4b2d      	ldr	r3, [pc, #180]	; (10009738 <ble_connected_state_handler+0x1e8>)
10009684:	189b      	adds	r3, r3, r2
10009686:	335e      	adds	r3, #94	; 0x5e
10009688:	2202      	movs	r2, #2
1000968a:	701a      	strb	r2, [r3, #0]
1000968c:	e7ba      	b.n	10009604 <ble_connected_state_handler+0xb4>
					if(ble_dev_info[idx].conn_state == BLE_DEVICE_DEFAULT_IDLE)
1000968e:	2500      	movs	r5, #0
10009690:	2700      	movs	r7, #0
						memcpy(&ble_dev_info[idx].conn_info, (uint8_t *)conn_params, sizeof(at_ble_connected_t));
10009692:	016b      	lsls	r3, r5, #5
10009694:	4699      	mov	r9, r3
10009696:	1b58      	subs	r0, r3, r5
10009698:	0080      	lsls	r0, r0, #2
1000969a:	4b27      	ldr	r3, [pc, #156]	; (10009738 <ble_connected_state_handler+0x1e8>)
1000969c:	4698      	mov	r8, r3
1000969e:	4440      	add	r0, r8
100096a0:	2212      	movs	r2, #18
100096a2:	0021      	movs	r1, r4
100096a4:	4b20      	ldr	r3, [pc, #128]	; (10009728 <ble_connected_state_handler+0x1d8>)
100096a6:	4798      	blx	r3
						ble_device_count++;
100096a8:	4a22      	ldr	r2, [pc, #136]	; (10009734 <ble_connected_state_handler+0x1e4>)
100096aa:	7813      	ldrb	r3, [r2, #0]
100096ac:	3301      	adds	r3, #1
100096ae:	b2db      	uxtb	r3, r3
100096b0:	7013      	strb	r3, [r2, #0]
						ble_dev_info[idx].conn_state = BLE_DEVICE_CONNECTED;
100096b2:	464b      	mov	r3, r9
100096b4:	1b5d      	subs	r5, r3, r5
100096b6:	00ad      	lsls	r5, r5, #2
100096b8:	002b      	movs	r3, r5
100096ba:	4443      	add	r3, r8
100096bc:	335e      	adds	r3, #94	; 0x5e
100096be:	001a      	movs	r2, r3
100096c0:	2302      	movs	r3, #2
100096c2:	7013      	strb	r3, [r2, #0]
						break;
100096c4:	e79e      	b.n	10009604 <ble_connected_state_handler+0xb4>
				ble_dev_info[idx].dev_role = AT_BLE_ROLE_PERIPHERAL;
100096c6:	017b      	lsls	r3, r7, #5
100096c8:	1bdb      	subs	r3, r3, r7
100096ca:	009b      	lsls	r3, r3, #2
100096cc:	4a1a      	ldr	r2, [pc, #104]	; (10009738 <ble_connected_state_handler+0x1e8>)
100096ce:	18d3      	adds	r3, r2, r3
100096d0:	220a      	movs	r2, #10
100096d2:	749a      	strb	r2, [r3, #18]
100096d4:	e7a4      	b.n	10009620 <ble_connected_state_handler+0xd0>
			DBG_LOG("Max number of connection reached: %d ===>Disconnecting...", ble_device_count);
100096d6:	480e      	ldr	r0, [pc, #56]	; (10009710 <ble_connected_state_handler+0x1c0>)
100096d8:	4b0e      	ldr	r3, [pc, #56]	; (10009714 <ble_connected_state_handler+0x1c4>)
100096da:	4798      	blx	r3
100096dc:	4b15      	ldr	r3, [pc, #84]	; (10009734 <ble_connected_state_handler+0x1e4>)
100096de:	7819      	ldrb	r1, [r3, #0]
100096e0:	b2c9      	uxtb	r1, r1
100096e2:	481b      	ldr	r0, [pc, #108]	; (10009750 <ble_connected_state_handler+0x200>)
100096e4:	4b0d      	ldr	r3, [pc, #52]	; (1000971c <ble_connected_state_handler+0x1cc>)
100096e6:	4798      	blx	r3
			at_ble_disconnect(conn_params->handle, AT_BLE_TERMINATED_BY_USER);
100096e8:	8920      	ldrh	r0, [r4, #8]
100096ea:	2113      	movs	r1, #19
100096ec:	4b19      	ldr	r3, [pc, #100]	; (10009754 <ble_connected_state_handler+0x204>)
100096ee:	4798      	blx	r3
100096f0:	e007      	b.n	10009702 <ble_connected_state_handler+0x1b2>
		DBG_LOG("Device Connection Failed - Status: %d", conn_params->conn_status);
100096f2:	4807      	ldr	r0, [pc, #28]	; (10009710 <ble_connected_state_handler+0x1c0>)
100096f4:	4b07      	ldr	r3, [pc, #28]	; (10009714 <ble_connected_state_handler+0x1c4>)
100096f6:	4798      	blx	r3
100096f8:	7aa1      	ldrb	r1, [r4, #10]
100096fa:	4817      	ldr	r0, [pc, #92]	; (10009758 <ble_connected_state_handler+0x208>)
100096fc:	4b07      	ldr	r3, [pc, #28]	; (1000971c <ble_connected_state_handler+0x1cc>)
100096fe:	4798      	blx	r3
	return AT_BLE_SUCCESS;
10009700:	2600      	movs	r6, #0
}
10009702:	0030      	movs	r0, r6
10009704:	b01a      	add	sp, #104	; 0x68
10009706:	bc1c      	pop	{r2, r3, r4}
10009708:	4690      	mov	r8, r2
1000970a:	4699      	mov	r9, r3
1000970c:	46a3      	mov	fp, r4
1000970e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10009710:	10010514 	.word	0x10010514
10009714:	1000ec09 	.word	0x1000ec09
10009718:	1000ff44 	.word	0x1000ff44
1000971c:	1000eaed 	.word	0x1000eaed
10009720:	1000ff88 	.word	0x1000ff88
10009724:	100121b4 	.word	0x100121b4
10009728:	1000eacb 	.word	0x1000eacb
1000972c:	10010920 	.word	0x10010920
10009730:	1000eaad 	.word	0x1000eaad
10009734:	10012174 	.word	0x10012174
10009738:	10011f08 	.word	0x10011f08
1000973c:	10011fe2 	.word	0x10011fe2
10009740:	1000eadd 	.word	0x1000eadd
10009744:	10011f4e 	.word	0x10011f4e
10009748:	1000bcb5 	.word	0x1000bcb5
1000974c:	1000ffa0 	.word	0x1000ffa0
10009750:	1000ffc4 	.word	0x1000ffc4
10009754:	1000bc89 	.word	0x1000bc89
10009758:	10010000 	.word	0x10010000

1000975c <ble_pair_done_handler>:
{
1000975c:	b5f0      	push	{r4, r5, r6, r7, lr}
1000975e:	46c6      	mov	lr, r8
10009760:	b500      	push	{lr}
10009762:	0005      	movs	r5, r0
		if((ble_dev_info[idx].conn_info.handle == pairing_params->handle) && (ble_dev_info[idx].conn_state == BLE_DEVICE_PAIRING))
10009764:	8840      	ldrh	r0, [r0, #2]
10009766:	4b39      	ldr	r3, [pc, #228]	; (1000984c <ble_pair_done_handler+0xf0>)
	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++)
10009768:	2400      	movs	r4, #0
1000976a:	e004      	b.n	10009776 <ble_pair_done_handler+0x1a>
1000976c:	3401      	adds	r4, #1
1000976e:	b2e4      	uxtb	r4, r4
10009770:	337c      	adds	r3, #124	; 0x7c
10009772:	2c05      	cmp	r4, #5
10009774:	d049      	beq.n	1000980a <ble_pair_done_handler+0xae>
		if((ble_dev_info[idx].conn_info.handle == pairing_params->handle) && (ble_dev_info[idx].conn_state == BLE_DEVICE_PAIRING))
10009776:	891a      	ldrh	r2, [r3, #8]
10009778:	4282      	cmp	r2, r0
1000977a:	d1f7      	bne.n	1000976c <ble_pair_done_handler+0x10>
1000977c:	001a      	movs	r2, r3
1000977e:	325e      	adds	r2, #94	; 0x5e
10009780:	7812      	ldrb	r2, [r2, #0]
10009782:	2a03      	cmp	r2, #3
10009784:	d1f2      	bne.n	1000976c <ble_pair_done_handler+0x10>
	if(pairing_params->status == AT_BLE_SUCCESS)
10009786:	792e      	ldrb	r6, [r5, #4]
10009788:	2e00      	cmp	r6, #0
1000978a:	d141      	bne.n	10009810 <ble_pair_done_handler+0xb4>
		DBG_LOG("Pairing procedure completed successfully");
1000978c:	4830      	ldr	r0, [pc, #192]	; (10009850 <ble_pair_done_handler+0xf4>)
1000978e:	4b31      	ldr	r3, [pc, #196]	; (10009854 <ble_pair_done_handler+0xf8>)
10009790:	4798      	blx	r3
10009792:	4831      	ldr	r0, [pc, #196]	; (10009858 <ble_pair_done_handler+0xfc>)
10009794:	4b31      	ldr	r3, [pc, #196]	; (1000985c <ble_pair_done_handler+0x100>)
10009796:	4798      	blx	r3
			ble_dev_info[idx].bond_info.auth = pairing_params->auth;
10009798:	7829      	ldrb	r1, [r5, #0]
1000979a:	4f2c      	ldr	r7, [pc, #176]	; (1000984c <ble_pair_done_handler+0xf0>)
1000979c:	0162      	lsls	r2, r4, #5
1000979e:	1b13      	subs	r3, r2, r4
100097a0:	009b      	lsls	r3, r3, #2
100097a2:	18fb      	adds	r3, r7, r3
100097a4:	7519      	strb	r1, [r3, #20]
			ble_dev_info[idx].bond_info.status = pairing_params->status;
100097a6:	7929      	ldrb	r1, [r5, #4]
100097a8:	7619      	strb	r1, [r3, #24]
			ble_dev_info[idx].conn_state = BLE_DEVICE_PAIRED;
100097aa:	1b13      	subs	r3, r2, r4
100097ac:	009b      	lsls	r3, r3, #2
100097ae:	18fb      	adds	r3, r7, r3
100097b0:	335e      	adds	r3, #94	; 0x5e
100097b2:	2105      	movs	r1, #5
100097b4:	7019      	strb	r1, [r3, #0]
100097b6:	1b14      	subs	r4, r2, r4
100097b8:	00a4      	lsls	r4, r4, #2
			memcpy((uint8_t *)&ble_dev_info[idx].bond_info.peer_csrk, (uint8_t *)&pairing_params->peer_csrk, sizeof(at_ble_CSRK_t));
100097ba:	0020      	movs	r0, r4
100097bc:	3036      	adds	r0, #54	; 0x36
100097be:	19c0      	adds	r0, r0, r7
100097c0:	0029      	movs	r1, r5
100097c2:	3122      	adds	r1, #34	; 0x22
100097c4:	2210      	movs	r2, #16
100097c6:	4b26      	ldr	r3, [pc, #152]	; (10009860 <ble_pair_done_handler+0x104>)
100097c8:	4698      	mov	r8, r3
100097ca:	4798      	blx	r3
			memcpy((uint8_t *)&ble_dev_info[idx].bond_info.peer_irk, (uint8_t *)&pairing_params->peer_irk, sizeof(at_ble_IRK_t));
100097cc:	0020      	movs	r0, r4
100097ce:	3046      	adds	r0, #70	; 0x46
100097d0:	19c0      	adds	r0, r0, r7
100097d2:	0029      	movs	r1, r5
100097d4:	3132      	adds	r1, #50	; 0x32
100097d6:	2217      	movs	r2, #23
100097d8:	47c0      	blx	r8
			memcpy((uint8_t *)&ble_dev_info[idx].bond_info.peer_ltk, (uint8_t *)&pairing_params->peer_ltk, sizeof(at_ble_LTK_t));
100097da:	341a      	adds	r4, #26
100097dc:	19e0      	adds	r0, r4, r7
100097de:	1da9      	adds	r1, r5, #6
100097e0:	221c      	movs	r2, #28
100097e2:	47c0      	blx	r8
100097e4:	e000      	b.n	100097e8 <ble_pair_done_handler+0x8c>
	return AT_BLE_SUCCESS;
100097e6:	2600      	movs	r6, #0
}
100097e8:	0030      	movs	r0, r6
100097ea:	bc04      	pop	{r2}
100097ec:	4690      	mov	r8, r2
100097ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
		DBG_LOG("Pairing procedure completed successfully");
100097f0:	4e17      	ldr	r6, [pc, #92]	; (10009850 <ble_pair_done_handler+0xf4>)
100097f2:	0030      	movs	r0, r6
100097f4:	4d17      	ldr	r5, [pc, #92]	; (10009854 <ble_pair_done_handler+0xf8>)
100097f6:	47a8      	blx	r5
100097f8:	4817      	ldr	r0, [pc, #92]	; (10009858 <ble_pair_done_handler+0xfc>)
100097fa:	4c18      	ldr	r4, [pc, #96]	; (1000985c <ble_pair_done_handler+0x100>)
100097fc:	47a0      	blx	r4
			DBG_LOG("BLE Device not found to store the pairing info");
100097fe:	0030      	movs	r0, r6
10009800:	47a8      	blx	r5
10009802:	4818      	ldr	r0, [pc, #96]	; (10009864 <ble_pair_done_handler+0x108>)
10009804:	47a0      	blx	r4
			return AT_BLE_FAILURE;
10009806:	26e2      	movs	r6, #226	; 0xe2
10009808:	e7ee      	b.n	100097e8 <ble_pair_done_handler+0x8c>
	if(pairing_params->status == AT_BLE_SUCCESS)
1000980a:	792b      	ldrb	r3, [r5, #4]
1000980c:	2b00      	cmp	r3, #0
1000980e:	d0ef      	beq.n	100097f0 <ble_pair_done_handler+0x94>
		if(ble_dev_info[idx].conn_state != BLE_DEVICE_DEFAULT_IDLE && ble_dev_info[idx].conn_state != BLE_DEVICE_DISCONNECTED) {
10009810:	0163      	lsls	r3, r4, #5
10009812:	1b1b      	subs	r3, r3, r4
10009814:	009b      	lsls	r3, r3, #2
10009816:	4c0d      	ldr	r4, [pc, #52]	; (1000984c <ble_pair_done_handler+0xf0>)
10009818:	18e4      	adds	r4, r4, r3
1000981a:	345e      	adds	r4, #94	; 0x5e
1000981c:	7823      	ldrb	r3, [r4, #0]
1000981e:	2b01      	cmp	r3, #1
10009820:	d9e1      	bls.n	100097e6 <ble_pair_done_handler+0x8a>
			DBG_LOG("Pairing failed...Disconnecting");
10009822:	480b      	ldr	r0, [pc, #44]	; (10009850 <ble_pair_done_handler+0xf4>)
10009824:	4b0b      	ldr	r3, [pc, #44]	; (10009854 <ble_pair_done_handler+0xf8>)
10009826:	4798      	blx	r3
10009828:	480f      	ldr	r0, [pc, #60]	; (10009868 <ble_pair_done_handler+0x10c>)
1000982a:	4b0c      	ldr	r3, [pc, #48]	; (1000985c <ble_pair_done_handler+0x100>)
1000982c:	4798      	blx	r3
			if(!(at_ble_disconnect(pairing_params->handle, AT_BLE_TERMINATED_BY_USER) == AT_BLE_SUCCESS))
1000982e:	8868      	ldrh	r0, [r5, #2]
10009830:	2113      	movs	r1, #19
10009832:	4b0e      	ldr	r3, [pc, #56]	; (1000986c <ble_pair_done_handler+0x110>)
10009834:	4798      	blx	r3
10009836:	1e06      	subs	r6, r0, #0
10009838:	d0d6      	beq.n	100097e8 <ble_pair_done_handler+0x8c>
				DBG_LOG("Disconnect Request Failed");
1000983a:	4805      	ldr	r0, [pc, #20]	; (10009850 <ble_pair_done_handler+0xf4>)
1000983c:	4b05      	ldr	r3, [pc, #20]	; (10009854 <ble_pair_done_handler+0xf8>)
1000983e:	4798      	blx	r3
10009840:	480b      	ldr	r0, [pc, #44]	; (10009870 <ble_pair_done_handler+0x114>)
10009842:	4b06      	ldr	r3, [pc, #24]	; (1000985c <ble_pair_done_handler+0x100>)
10009844:	4798      	blx	r3
				return AT_BLE_FAILURE;
10009846:	26e2      	movs	r6, #226	; 0xe2
10009848:	e7ce      	b.n	100097e8 <ble_pair_done_handler+0x8c>
1000984a:	46c0      	nop			; (mov r8, r8)
1000984c:	10011f08 	.word	0x10011f08
10009850:	10010514 	.word	0x10010514
10009854:	1000ec09 	.word	0x1000ec09
10009858:	10010378 	.word	0x10010378
1000985c:	1000eaed 	.word	0x1000eaed
10009860:	1000eacb 	.word	0x1000eacb
10009864:	100103a4 	.word	0x100103a4
10009868:	1001033c 	.word	0x1001033c
1000986c:	1000bc89 	.word	0x1000bc89
10009870:	1001035c 	.word	0x1001035c

10009874 <ble_conn_param_update_req>:
{
10009874:	b510      	push	{r4, lr}
	at_ble_conn_update_reply(conn_param_req->handle, true, 1, 120);
10009876:	8800      	ldrh	r0, [r0, #0]
10009878:	2378      	movs	r3, #120	; 0x78
1000987a:	2201      	movs	r2, #1
1000987c:	2101      	movs	r1, #1
1000987e:	4c02      	ldr	r4, [pc, #8]	; (10009888 <ble_conn_param_update_req+0x14>)
10009880:	47a0      	blx	r4
}
10009882:	2000      	movs	r0, #0
10009884:	bd10      	pop	{r4, pc}
10009886:	46c0      	nop			; (mov r8, r8)
10009888:	1000bca9 	.word	0x1000bca9

1000988c <ble_slave_security_request_handler>:
{
1000988c:	b5f0      	push	{r4, r5, r6, r7, lr}
1000988e:	46de      	mov	lr, fp
10009890:	4657      	mov	r7, sl
10009892:	464e      	mov	r6, r9
10009894:	4645      	mov	r5, r8
10009896:	b5e0      	push	{r5, r6, r7, lr}
10009898:	b085      	sub	sp, #20
1000989a:	0006      	movs	r6, r0
	memset(&features, 0x00, sizeof(at_ble_pair_features_t));
1000989c:	2209      	movs	r2, #9
1000989e:	2100      	movs	r1, #0
100098a0:	a801      	add	r0, sp, #4
100098a2:	4b6f      	ldr	r3, [pc, #444]	; (10009a60 <ble_slave_security_request_handler+0x1d4>)
100098a4:	4798      	blx	r3
		if((ble_dev_info[idx].conn_info.handle == slave_sec_req->handle) && (ble_dev_info[idx].conn_state == BLE_DEVICE_CONNECTED))
100098a6:	8834      	ldrh	r4, [r6, #0]
100098a8:	496e      	ldr	r1, [pc, #440]	; (10009a64 <ble_slave_security_request_handler+0x1d8>)
100098aa:	000a      	movs	r2, r1
100098ac:	2300      	movs	r3, #0
100098ae:	e003      	b.n	100098b8 <ble_slave_security_request_handler+0x2c>
100098b0:	3301      	adds	r3, #1
100098b2:	327c      	adds	r2, #124	; 0x7c
	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++)
100098b4:	2b05      	cmp	r3, #5
100098b6:	d020      	beq.n	100098fa <ble_slave_security_request_handler+0x6e>
		if((ble_dev_info[idx].conn_info.handle == slave_sec_req->handle) && (ble_dev_info[idx].conn_state == BLE_DEVICE_CONNECTED))
100098b8:	8910      	ldrh	r0, [r2, #8]
100098ba:	42a0      	cmp	r0, r4
100098bc:	d1f8      	bne.n	100098b0 <ble_slave_security_request_handler+0x24>
100098be:	0010      	movs	r0, r2
100098c0:	305e      	adds	r0, #94	; 0x5e
100098c2:	7800      	ldrb	r0, [r0, #0]
100098c4:	2802      	cmp	r0, #2
100098c6:	d1f3      	bne.n	100098b0 <ble_slave_security_request_handler+0x24>
			ble_dev_info[idx].conn_state = BLE_DEVICE_ENCRYPTION_STATE;
100098c8:	4866      	ldr	r0, [pc, #408]	; (10009a64 <ble_slave_security_request_handler+0x1d8>)
100098ca:	015a      	lsls	r2, r3, #5
100098cc:	1ad5      	subs	r5, r2, r3
100098ce:	00ad      	lsls	r5, r5, #2
100098d0:	1945      	adds	r5, r0, r5
100098d2:	355e      	adds	r5, #94	; 0x5e
100098d4:	2206      	movs	r2, #6
100098d6:	702a      	strb	r2, [r5, #0]
100098d8:	32f9      	adds	r2, #249	; 0xf9
100098da:	4013      	ands	r3, r2
		if((ble_dev_info[idx].bond_info.auth & AT_BLE_AUTH_NO_MITM_BOND) && (slave_sec_req->bond == true))
100098dc:	015a      	lsls	r2, r3, #5
100098de:	1ad2      	subs	r2, r2, r3
100098e0:	0092      	lsls	r2, r2, #2
100098e2:	1882      	adds	r2, r0, r2
100098e4:	7d12      	ldrb	r2, [r2, #20]
100098e6:	07d0      	lsls	r0, r2, #31
100098e8:	d40b      	bmi.n	10009902 <ble_slave_security_request_handler+0x76>
			ble_dev_info[idx].conn_state = BLE_DEVICE_CONNECTED;
100098ea:	015a      	lsls	r2, r3, #5
100098ec:	1ad2      	subs	r2, r2, r3
100098ee:	0092      	lsls	r2, r2, #2
100098f0:	4b5c      	ldr	r3, [pc, #368]	; (10009a64 <ble_slave_security_request_handler+0x1d8>)
100098f2:	189b      	adds	r3, r3, r2
100098f4:	335e      	adds	r3, #94	; 0x5e
100098f6:	2202      	movs	r2, #2
100098f8:	701a      	strb	r2, [r3, #0]
		if((ble_dev_info[idx].conn_info.handle == slave_sec_req->handle) && (ble_dev_info[idx].conn_state == BLE_DEVICE_CONNECTED))
100098fa:	8830      	ldrh	r0, [r6, #0]
100098fc:	2300      	movs	r3, #0
	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++)
100098fe:	2400      	movs	r4, #0
10009900:	e01b      	b.n	1000993a <ble_slave_security_request_handler+0xae>
		if((ble_dev_info[idx].bond_info.auth & AT_BLE_AUTH_NO_MITM_BOND) && (slave_sec_req->bond == true))
10009902:	78f0      	ldrb	r0, [r6, #3]
10009904:	2800      	cmp	r0, #0
10009906:	d0f0      	beq.n	100098ea <ble_slave_security_request_handler+0x5e>
			if(at_ble_encryption_start(slave_sec_req->handle, &ble_dev_info[idx].bond_info.peer_ltk, ble_dev_info[idx].bond_info.auth) == AT_BLE_SUCCESS)
10009908:	0159      	lsls	r1, r3, #5
1000990a:	1ac9      	subs	r1, r1, r3
1000990c:	0089      	lsls	r1, r1, #2
1000990e:	311a      	adds	r1, #26
10009910:	4b54      	ldr	r3, [pc, #336]	; (10009a64 <ble_slave_security_request_handler+0x1d8>)
10009912:	18c9      	adds	r1, r1, r3
10009914:	8830      	ldrh	r0, [r6, #0]
10009916:	4b54      	ldr	r3, [pc, #336]	; (10009a68 <ble_slave_security_request_handler+0x1dc>)
10009918:	4798      	blx	r3
1000991a:	2800      	cmp	r0, #0
1000991c:	d04e      	beq.n	100099bc <ble_slave_security_request_handler+0x130>
				DBG_LOG("Encryption Not started");
1000991e:	4853      	ldr	r0, [pc, #332]	; (10009a6c <ble_slave_security_request_handler+0x1e0>)
10009920:	4b53      	ldr	r3, [pc, #332]	; (10009a70 <ble_slave_security_request_handler+0x1e4>)
10009922:	4798      	blx	r3
10009924:	4853      	ldr	r0, [pc, #332]	; (10009a74 <ble_slave_security_request_handler+0x1e8>)
10009926:	4b54      	ldr	r3, [pc, #336]	; (10009a78 <ble_slave_security_request_handler+0x1ec>)
10009928:	4798      	blx	r3
				return AT_BLE_FAILURE;
1000992a:	20e2      	movs	r0, #226	; 0xe2
1000992c:	e046      	b.n	100099bc <ble_slave_security_request_handler+0x130>
	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++)
1000992e:	3401      	adds	r4, #1
10009930:	b2e4      	uxtb	r4, r4
10009932:	3301      	adds	r3, #1
10009934:	317c      	adds	r1, #124	; 0x7c
10009936:	2c05      	cmp	r4, #5
10009938:	d010      	beq.n	1000995c <ble_slave_security_request_handler+0xd0>
		if((ble_dev_info[idx].conn_info.handle == slave_sec_req->handle) && (ble_dev_info[idx].conn_state == BLE_DEVICE_CONNECTED))
1000993a:	001d      	movs	r5, r3
1000993c:	890a      	ldrh	r2, [r1, #8]
1000993e:	4282      	cmp	r2, r0
10009940:	d1f5      	bne.n	1000992e <ble_slave_security_request_handler+0xa2>
10009942:	000a      	movs	r2, r1
10009944:	325e      	adds	r2, #94	; 0x5e
10009946:	7812      	ldrb	r2, [r2, #0]
10009948:	2a02      	cmp	r2, #2
1000994a:	d1f0      	bne.n	1000992e <ble_slave_security_request_handler+0xa2>
			ble_dev_info[idx].conn_state = BLE_DEVICE_PAIRING;
1000994c:	015b      	lsls	r3, r3, #5
1000994e:	1b5d      	subs	r5, r3, r5
10009950:	00ad      	lsls	r5, r5, #2
10009952:	4b44      	ldr	r3, [pc, #272]	; (10009a64 <ble_slave_security_request_handler+0x1d8>)
10009954:	195b      	adds	r3, r3, r5
10009956:	335e      	adds	r3, #94	; 0x5e
10009958:	3201      	adds	r2, #1
1000995a:	701a      	strb	r2, [r3, #0]
	features.desired_auth =  BLE_AUTHENTICATION_LEVEL; 
1000995c:	ab01      	add	r3, sp, #4
1000995e:	2202      	movs	r2, #2
10009960:	721a      	strb	r2, [r3, #8]
	features.bond = slave_sec_req->bond;
10009962:	78f2      	ldrb	r2, [r6, #3]
10009964:	709a      	strb	r2, [r3, #2]
	features.mitm_protection = true;
10009966:	2201      	movs	r2, #1
10009968:	705a      	strb	r2, [r3, #1]
	features.io_cababilities = AT_BLE_IO_CAP_KB_DISPLAY;
1000996a:	3203      	adds	r2, #3
1000996c:	701a      	strb	r2, [r3, #0]
	if (ble_dev_info[idx].conn_info.peer_addr.type == AT_BLE_ADDRESS_RANDOM_PRIVATE_RESOLVABLE)
1000996e:	46a0      	mov	r8, r4
10009970:	0163      	lsls	r3, r4, #5
10009972:	1b1b      	subs	r3, r3, r4
10009974:	009b      	lsls	r3, r3, #2
10009976:	4a3b      	ldr	r2, [pc, #236]	; (10009a64 <ble_slave_security_request_handler+0x1d8>)
10009978:	5c9b      	ldrb	r3, [r3, r2]
1000997a:	2b02      	cmp	r3, #2
1000997c:	d025      	beq.n	100099ca <ble_slave_security_request_handler+0x13e>
		features.initiator_keys =   AT_BLE_KEY_DIST_ENC;
1000997e:	ab01      	add	r3, sp, #4
10009980:	2201      	movs	r2, #1
10009982:	719a      	strb	r2, [r3, #6]
		features.responder_keys =   AT_BLE_KEY_DIST_ENC;
10009984:	71da      	strb	r2, [r3, #7]
	features.max_key_size = 16;
10009986:	ab01      	add	r3, sp, #4
10009988:	2210      	movs	r2, #16
1000998a:	715a      	strb	r2, [r3, #5]
	features.min_key_size = 16;
1000998c:	711a      	strb	r2, [r3, #4]
	if (ble_dev_info[idx].bond_info.status == AT_BLE_GAP_INVALID_PARAM)
1000998e:	4643      	mov	r3, r8
10009990:	015b      	lsls	r3, r3, #5
10009992:	4642      	mov	r2, r8
10009994:	1a9b      	subs	r3, r3, r2
10009996:	009b      	lsls	r3, r3, #2
10009998:	4a32      	ldr	r2, [pc, #200]	; (10009a64 <ble_slave_security_request_handler+0x1d8>)
1000999a:	18d3      	adds	r3, r2, r3
1000999c:	7e1b      	ldrb	r3, [r3, #24]
1000999e:	2b40      	cmp	r3, #64	; 0x40
100099a0:	d018      	beq.n	100099d4 <ble_slave_security_request_handler+0x148>
	if(at_ble_authenticate(slave_sec_req->handle, &features, &ble_dev_info[idx].host_ltk, NULL) != AT_BLE_SUCCESS)
100099a2:	0162      	lsls	r2, r4, #5
100099a4:	1b12      	subs	r2, r2, r4
100099a6:	0092      	lsls	r2, r2, #2
100099a8:	3260      	adds	r2, #96	; 0x60
100099aa:	4c2e      	ldr	r4, [pc, #184]	; (10009a64 <ble_slave_security_request_handler+0x1d8>)
100099ac:	1912      	adds	r2, r2, r4
100099ae:	8830      	ldrh	r0, [r6, #0]
100099b0:	2300      	movs	r3, #0
100099b2:	a901      	add	r1, sp, #4
100099b4:	4c31      	ldr	r4, [pc, #196]	; (10009a7c <ble_slave_security_request_handler+0x1f0>)
100099b6:	47a0      	blx	r4
100099b8:	2800      	cmp	r0, #0
100099ba:	d144      	bne.n	10009a46 <ble_slave_security_request_handler+0x1ba>
}
100099bc:	b005      	add	sp, #20
100099be:	bc3c      	pop	{r2, r3, r4, r5}
100099c0:	4690      	mov	r8, r2
100099c2:	4699      	mov	r9, r3
100099c4:	46a2      	mov	sl, r4
100099c6:	46ab      	mov	fp, r5
100099c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
		features.initiator_keys =   (at_ble_key_dis_t)(AT_BLE_KEY_DIST_ENC | AT_BLE_KEY_DIST_ID);
100099ca:	ab01      	add	r3, sp, #4
100099cc:	2203      	movs	r2, #3
100099ce:	719a      	strb	r2, [r3, #6]
		features.responder_keys =   (at_ble_key_dis_t)(AT_BLE_KEY_DIST_ENC | AT_BLE_KEY_DIST_ID);
100099d0:	71da      	strb	r2, [r3, #7]
100099d2:	e7d8      	b.n	10009986 <ble_slave_security_request_handler+0xfa>
100099d4:	0167      	lsls	r7, r4, #5
100099d6:	1b3f      	subs	r7, r7, r4
100099d8:	00bb      	lsls	r3, r7, #2
100099da:	469b      	mov	fp, r3
100099dc:	001d      	movs	r5, r3
100099de:	3560      	adds	r5, #96	; 0x60
100099e0:	0013      	movs	r3, r2
100099e2:	18ad      	adds	r5, r5, r2
100099e4:	465a      	mov	r2, fp
100099e6:	3268      	adds	r2, #104	; 0x68
100099e8:	4692      	mov	sl, r2
100099ea:	449a      	add	sl, r3
			ble_dev_info[idx].host_ltk.key[i] = rand()&0x0f;
100099ec:	4b24      	ldr	r3, [pc, #144]	; (10009a80 <ble_slave_security_request_handler+0x1f4>)
100099ee:	4699      	mov	r9, r3
100099f0:	270f      	movs	r7, #15
100099f2:	47c8      	blx	r9
100099f4:	4038      	ands	r0, r7
100099f6:	7028      	strb	r0, [r5, #0]
			ble_dev_info[idx].host_ltk.nb[i] = rand()&0x0f;
100099f8:	47c8      	blx	r9
100099fa:	4038      	ands	r0, r7
100099fc:	74a8      	strb	r0, [r5, #18]
100099fe:	3501      	adds	r5, #1
		for(i=0; i<8; i++)
10009a00:	4555      	cmp	r5, sl
10009a02:	d1f6      	bne.n	100099f2 <ble_slave_security_request_handler+0x166>
10009a04:	465f      	mov	r7, fp
10009a06:	3770      	adds	r7, #112	; 0x70
10009a08:	4b16      	ldr	r3, [pc, #88]	; (10009a64 <ble_slave_security_request_handler+0x1d8>)
10009a0a:	18ff      	adds	r7, r7, r3
			ble_dev_info[idx].host_ltk.key[i] = rand()&0x0f;
10009a0c:	4b1c      	ldr	r3, [pc, #112]	; (10009a80 <ble_slave_security_request_handler+0x1f4>)
10009a0e:	469a      	mov	sl, r3
10009a10:	230f      	movs	r3, #15
10009a12:	4699      	mov	r9, r3
10009a14:	47d0      	blx	sl
10009a16:	464b      	mov	r3, r9
10009a18:	4018      	ands	r0, r3
10009a1a:	7028      	strb	r0, [r5, #0]
10009a1c:	3501      	adds	r5, #1
		for(i=8 ; i<16 ;i++)
10009a1e:	42bd      	cmp	r5, r7
10009a20:	d1f8      	bne.n	10009a14 <ble_slave_security_request_handler+0x188>
		ble_dev_info[idx].host_ltk.ediv = rand()&0xffff;
10009a22:	4b17      	ldr	r3, [pc, #92]	; (10009a80 <ble_slave_security_request_handler+0x1f4>)
10009a24:	4798      	blx	r3
10009a26:	4a0f      	ldr	r2, [pc, #60]	; (10009a64 <ble_slave_security_request_handler+0x1d8>)
10009a28:	4643      	mov	r3, r8
10009a2a:	0159      	lsls	r1, r3, #5
10009a2c:	1acb      	subs	r3, r1, r3
10009a2e:	009b      	lsls	r3, r3, #2
10009a30:	18d3      	adds	r3, r2, r3
10009a32:	3370      	adds	r3, #112	; 0x70
10009a34:	8018      	strh	r0, [r3, #0]
		ble_dev_info[idx].host_ltk.key_size = 16;
10009a36:	4643      	mov	r3, r8
10009a38:	1ac9      	subs	r1, r1, r3
10009a3a:	0089      	lsls	r1, r1, #2
10009a3c:	1852      	adds	r2, r2, r1
10009a3e:	327a      	adds	r2, #122	; 0x7a
10009a40:	2310      	movs	r3, #16
10009a42:	7013      	strb	r3, [r2, #0]
10009a44:	e7ad      	b.n	100099a2 <ble_slave_security_request_handler+0x116>
		features.bond = false;
10009a46:	ab01      	add	r3, sp, #4
10009a48:	2200      	movs	r2, #0
10009a4a:	709a      	strb	r2, [r3, #2]
		features.mitm_protection = false;
10009a4c:	705a      	strb	r2, [r3, #1]
		DBG_LOG("Slave Security Req - Authentication Failed");
10009a4e:	4807      	ldr	r0, [pc, #28]	; (10009a6c <ble_slave_security_request_handler+0x1e0>)
10009a50:	4b07      	ldr	r3, [pc, #28]	; (10009a70 <ble_slave_security_request_handler+0x1e4>)
10009a52:	4798      	blx	r3
10009a54:	480b      	ldr	r0, [pc, #44]	; (10009a84 <ble_slave_security_request_handler+0x1f8>)
10009a56:	4b08      	ldr	r3, [pc, #32]	; (10009a78 <ble_slave_security_request_handler+0x1ec>)
10009a58:	4798      	blx	r3
		return AT_BLE_FAILURE;
10009a5a:	20e2      	movs	r0, #226	; 0xe2
10009a5c:	e7ae      	b.n	100099bc <ble_slave_security_request_handler+0x130>
10009a5e:	46c0      	nop			; (mov r8, r8)
10009a60:	1000eadd 	.word	0x1000eadd
10009a64:	10011f08 	.word	0x10011f08
10009a68:	1000c1a1 	.word	0x1000c1a1
10009a6c:	10010514 	.word	0x10010514
10009a70:	1000ec09 	.word	0x1000ec09
10009a74:	1001052c 	.word	0x1001052c
10009a78:	1000eaed 	.word	0x1000eaed
10009a7c:	1000bff5 	.word	0x1000bff5
10009a80:	1000ec1d 	.word	0x1000ec1d
10009a84:	10010544 	.word	0x10010544

10009a88 <ble_pair_request_handler>:
{
10009a88:	b5f0      	push	{r4, r5, r6, r7, lr}
10009a8a:	46de      	mov	lr, fp
10009a8c:	4657      	mov	r7, sl
10009a8e:	464e      	mov	r6, r9
10009a90:	4645      	mov	r5, r8
10009a92:	b5e0      	push	{r5, r6, r7, lr}
10009a94:	b087      	sub	sp, #28
10009a96:	9001      	str	r0, [sp, #4]
		if((ble_dev_info[idx].conn_info.handle == pair_req->handle) && (ble_dev_info[idx].conn_state == BLE_DEVICE_CONNECTED))
10009a98:	8800      	ldrh	r0, [r0, #0]
10009a9a:	4b4d      	ldr	r3, [pc, #308]	; (10009bd0 <ble_pair_request_handler+0x148>)
10009a9c:	2200      	movs	r2, #0
	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++)
10009a9e:	2400      	movs	r4, #0
10009aa0:	e005      	b.n	10009aae <ble_pair_request_handler+0x26>
10009aa2:	3401      	adds	r4, #1
10009aa4:	b2e4      	uxtb	r4, r4
10009aa6:	3201      	adds	r2, #1
10009aa8:	337c      	adds	r3, #124	; 0x7c
10009aaa:	2c05      	cmp	r4, #5
10009aac:	d00f      	beq.n	10009ace <ble_pair_request_handler+0x46>
		if((ble_dev_info[idx].conn_info.handle == pair_req->handle) && (ble_dev_info[idx].conn_state == BLE_DEVICE_CONNECTED))
10009aae:	8919      	ldrh	r1, [r3, #8]
10009ab0:	4281      	cmp	r1, r0
10009ab2:	d1f6      	bne.n	10009aa2 <ble_pair_request_handler+0x1a>
10009ab4:	0019      	movs	r1, r3
10009ab6:	315e      	adds	r1, #94	; 0x5e
10009ab8:	7809      	ldrb	r1, [r1, #0]
10009aba:	2902      	cmp	r1, #2
10009abc:	d1f1      	bne.n	10009aa2 <ble_pair_request_handler+0x1a>
			ble_dev_info[idx].conn_state = BLE_DEVICE_PAIRING;
10009abe:	0153      	lsls	r3, r2, #5
10009ac0:	1a9d      	subs	r5, r3, r2
10009ac2:	00ad      	lsls	r5, r5, #2
10009ac4:	4b42      	ldr	r3, [pc, #264]	; (10009bd0 <ble_pair_request_handler+0x148>)
10009ac6:	195b      	adds	r3, r3, r5
10009ac8:	335e      	adds	r3, #94	; 0x5e
10009aca:	2203      	movs	r2, #3
10009acc:	701a      	strb	r2, [r3, #0]
	features.desired_auth =  BLE_AUTHENTICATION_LEVEL; 
10009ace:	ab03      	add	r3, sp, #12
10009ad0:	2202      	movs	r2, #2
10009ad2:	721a      	strb	r2, [r3, #8]
	features.bond = BLE_BOND_REQ;
10009ad4:	3a01      	subs	r2, #1
10009ad6:	709a      	strb	r2, [r3, #2]
	features.mitm_protection = BLE_MITM_REQ;
10009ad8:	705a      	strb	r2, [r3, #1]
	features.io_cababilities = BLE_IO_CAPABALITIES;
10009ada:	2200      	movs	r2, #0
10009adc:	701a      	strb	r2, [r3, #0]
	features.oob_avaiable = BLE_OOB_REQ;
10009ade:	70da      	strb	r2, [r3, #3]
	if (ble_dev_info[idx].conn_info.peer_addr.type == AT_BLE_ADDRESS_RANDOM_PRIVATE_RESOLVABLE)
10009ae0:	46a0      	mov	r8, r4
10009ae2:	0163      	lsls	r3, r4, #5
10009ae4:	1b1b      	subs	r3, r3, r4
10009ae6:	009b      	lsls	r3, r3, #2
10009ae8:	4a39      	ldr	r2, [pc, #228]	; (10009bd0 <ble_pair_request_handler+0x148>)
10009aea:	5c9b      	ldrb	r3, [r3, r2]
10009aec:	2b02      	cmp	r3, #2
10009aee:	d026      	beq.n	10009b3e <ble_pair_request_handler+0xb6>
		features.initiator_keys =   AT_BLE_KEY_DIST_ENC;
10009af0:	ab03      	add	r3, sp, #12
10009af2:	2201      	movs	r2, #1
10009af4:	719a      	strb	r2, [r3, #6]
		features.responder_keys =   AT_BLE_KEY_DIST_ENC;
10009af6:	71da      	strb	r2, [r3, #7]
	features.max_key_size = 16;
10009af8:	ab03      	add	r3, sp, #12
10009afa:	2210      	movs	r2, #16
10009afc:	715a      	strb	r2, [r3, #5]
	features.min_key_size = 16;
10009afe:	711a      	strb	r2, [r3, #4]
	if (ble_dev_info[idx].bond_info.status == AT_BLE_GAP_INVALID_PARAM)
10009b00:	4643      	mov	r3, r8
10009b02:	015b      	lsls	r3, r3, #5
10009b04:	4642      	mov	r2, r8
10009b06:	1a9b      	subs	r3, r3, r2
10009b08:	009b      	lsls	r3, r3, #2
10009b0a:	4a31      	ldr	r2, [pc, #196]	; (10009bd0 <ble_pair_request_handler+0x148>)
10009b0c:	18d3      	adds	r3, r2, r3
10009b0e:	7e1b      	ldrb	r3, [r3, #24]
10009b10:	2b40      	cmp	r3, #64	; 0x40
10009b12:	d019      	beq.n	10009b48 <ble_pair_request_handler+0xc0>
	if(at_ble_authenticate(pair_req->handle, &features, &ble_dev_info[idx].host_ltk, NULL) != AT_BLE_SUCCESS)
10009b14:	0162      	lsls	r2, r4, #5
10009b16:	1b12      	subs	r2, r2, r4
10009b18:	0092      	lsls	r2, r2, #2
10009b1a:	3260      	adds	r2, #96	; 0x60
10009b1c:	4c2c      	ldr	r4, [pc, #176]	; (10009bd0 <ble_pair_request_handler+0x148>)
10009b1e:	1912      	adds	r2, r2, r4
10009b20:	9b01      	ldr	r3, [sp, #4]
10009b22:	8818      	ldrh	r0, [r3, #0]
10009b24:	2300      	movs	r3, #0
10009b26:	a903      	add	r1, sp, #12
10009b28:	4c2a      	ldr	r4, [pc, #168]	; (10009bd4 <ble_pair_request_handler+0x14c>)
10009b2a:	47a0      	blx	r4
10009b2c:	2800      	cmp	r0, #0
10009b2e:	d143      	bne.n	10009bb8 <ble_pair_request_handler+0x130>
}
10009b30:	b007      	add	sp, #28
10009b32:	bc3c      	pop	{r2, r3, r4, r5}
10009b34:	4690      	mov	r8, r2
10009b36:	4699      	mov	r9, r3
10009b38:	46a2      	mov	sl, r4
10009b3a:	46ab      	mov	fp, r5
10009b3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
		features.initiator_keys =   (at_ble_key_dis_t)(AT_BLE_KEY_DIST_ENC | AT_BLE_KEY_DIST_ID);
10009b3e:	ab03      	add	r3, sp, #12
10009b40:	2203      	movs	r2, #3
10009b42:	719a      	strb	r2, [r3, #6]
		features.responder_keys =   (at_ble_key_dis_t)(AT_BLE_KEY_DIST_ENC | AT_BLE_KEY_DIST_ID);
10009b44:	71da      	strb	r2, [r3, #7]
10009b46:	e7d7      	b.n	10009af8 <ble_pair_request_handler+0x70>
10009b48:	0167      	lsls	r7, r4, #5
10009b4a:	1b3f      	subs	r7, r7, r4
10009b4c:	00bb      	lsls	r3, r7, #2
10009b4e:	469b      	mov	fp, r3
10009b50:	001d      	movs	r5, r3
10009b52:	3560      	adds	r5, #96	; 0x60
10009b54:	0013      	movs	r3, r2
10009b56:	18ad      	adds	r5, r5, r2
10009b58:	465a      	mov	r2, fp
10009b5a:	3268      	adds	r2, #104	; 0x68
10009b5c:	4692      	mov	sl, r2
10009b5e:	449a      	add	sl, r3
			ble_dev_info[idx].host_ltk.key[i] = rand()&0x0f;
10009b60:	4e1d      	ldr	r6, [pc, #116]	; (10009bd8 <ble_pair_request_handler+0x150>)
10009b62:	270f      	movs	r7, #15
10009b64:	47b0      	blx	r6
10009b66:	4038      	ands	r0, r7
10009b68:	7028      	strb	r0, [r5, #0]
			ble_dev_info[idx].host_ltk.nb[i] = rand()&0x0f;
10009b6a:	47b0      	blx	r6
10009b6c:	4038      	ands	r0, r7
10009b6e:	74a8      	strb	r0, [r5, #18]
10009b70:	3501      	adds	r5, #1
		for(i=0; i<8; i++)
10009b72:	45aa      	cmp	sl, r5
10009b74:	d1f6      	bne.n	10009b64 <ble_pair_request_handler+0xdc>
10009b76:	465f      	mov	r7, fp
10009b78:	3770      	adds	r7, #112	; 0x70
10009b7a:	4b15      	ldr	r3, [pc, #84]	; (10009bd0 <ble_pair_request_handler+0x148>)
10009b7c:	18ff      	adds	r7, r7, r3
			ble_dev_info[idx].host_ltk.key[i] = rand()&0x0f;
10009b7e:	4b16      	ldr	r3, [pc, #88]	; (10009bd8 <ble_pair_request_handler+0x150>)
10009b80:	469a      	mov	sl, r3
10009b82:	230f      	movs	r3, #15
10009b84:	4699      	mov	r9, r3
10009b86:	47d0      	blx	sl
10009b88:	464b      	mov	r3, r9
10009b8a:	4018      	ands	r0, r3
10009b8c:	7028      	strb	r0, [r5, #0]
10009b8e:	3501      	adds	r5, #1
		for(i=8 ; i<16 ;i++)
10009b90:	42bd      	cmp	r5, r7
10009b92:	d1f8      	bne.n	10009b86 <ble_pair_request_handler+0xfe>
		ble_dev_info[idx].host_ltk.ediv = rand()&0xffff;
10009b94:	4b10      	ldr	r3, [pc, #64]	; (10009bd8 <ble_pair_request_handler+0x150>)
10009b96:	4798      	blx	r3
10009b98:	4a0d      	ldr	r2, [pc, #52]	; (10009bd0 <ble_pair_request_handler+0x148>)
10009b9a:	4643      	mov	r3, r8
10009b9c:	0159      	lsls	r1, r3, #5
10009b9e:	1acb      	subs	r3, r1, r3
10009ba0:	009b      	lsls	r3, r3, #2
10009ba2:	18d3      	adds	r3, r2, r3
10009ba4:	3370      	adds	r3, #112	; 0x70
10009ba6:	8018      	strh	r0, [r3, #0]
		ble_dev_info[idx].host_ltk.key_size = 16;
10009ba8:	4643      	mov	r3, r8
10009baa:	1ac9      	subs	r1, r1, r3
10009bac:	0089      	lsls	r1, r1, #2
10009bae:	1852      	adds	r2, r2, r1
10009bb0:	327a      	adds	r2, #122	; 0x7a
10009bb2:	2310      	movs	r3, #16
10009bb4:	7013      	strb	r3, [r2, #0]
10009bb6:	e7ad      	b.n	10009b14 <ble_pair_request_handler+0x8c>
		features.bond = false;
10009bb8:	ab03      	add	r3, sp, #12
10009bba:	2200      	movs	r2, #0
10009bbc:	709a      	strb	r2, [r3, #2]
		features.mitm_protection = false;
10009bbe:	705a      	strb	r2, [r3, #1]
		DBG_LOG("Pair Request - Authentication Failed");
10009bc0:	4806      	ldr	r0, [pc, #24]	; (10009bdc <ble_pair_request_handler+0x154>)
10009bc2:	4b07      	ldr	r3, [pc, #28]	; (10009be0 <ble_pair_request_handler+0x158>)
10009bc4:	4798      	blx	r3
10009bc6:	4807      	ldr	r0, [pc, #28]	; (10009be4 <ble_pair_request_handler+0x15c>)
10009bc8:	4b07      	ldr	r3, [pc, #28]	; (10009be8 <ble_pair_request_handler+0x160>)
10009bca:	4798      	blx	r3
		return AT_BLE_FAILURE;
10009bcc:	20e2      	movs	r0, #226	; 0xe2
10009bce:	e7af      	b.n	10009b30 <ble_pair_request_handler+0xa8>
10009bd0:	10011f08 	.word	0x10011f08
10009bd4:	1000bff5 	.word	0x1000bff5
10009bd8:	1000ec1d 	.word	0x1000ec1d
10009bdc:	10010514 	.word	0x10010514
10009be0:	1000ec09 	.word	0x1000ec09
10009be4:	1001049c 	.word	0x1001049c
10009be8:	1000eaed 	.word	0x1000eaed

10009bec <ble_pair_key_request_handler>:
{
10009bec:	b5f0      	push	{r4, r5, r6, r7, lr}
10009bee:	b085      	sub	sp, #20
10009bf0:	0005      	movs	r5, r0
	uint8_t passkey[6]={'1','2','3','4','5','6'};
10009bf2:	4b42      	ldr	r3, [pc, #264]	; (10009cfc <ble_pair_key_request_handler+0x110>)
10009bf4:	681a      	ldr	r2, [r3, #0]
10009bf6:	9202      	str	r2, [sp, #8]
10009bf8:	889a      	ldrh	r2, [r3, #4]
10009bfa:	ab02      	add	r3, sp, #8
10009bfc:	809a      	strh	r2, [r3, #4]
	memcpy((uint8_t *)&pair_key_request, pair_key, sizeof(at_ble_pair_key_request_t));
10009bfe:	ac01      	add	r4, sp, #4
10009c00:	2204      	movs	r2, #4
10009c02:	0001      	movs	r1, r0
10009c04:	0020      	movs	r0, r4
10009c06:	4b3e      	ldr	r3, [pc, #248]	; (10009d00 <ble_pair_key_request_handler+0x114>)
10009c08:	4798      	blx	r3
	if (pair_key_request.passkey_type == AT_BLE_PAIR_PASSKEY_ENTRY) {
10009c0a:	78e3      	ldrb	r3, [r4, #3]
10009c0c:	2b00      	cmp	r3, #0
10009c0e:	d00b      	beq.n	10009c28 <ble_pair_key_request_handler+0x3c>
	if(((pair_key_request.passkey_type == AT_BLE_PAIR_PASSKEY_DISPLAY) &&
10009c10:	2380      	movs	r3, #128	; 0x80
10009c12:	005b      	lsls	r3, r3, #1
10009c14:	aa01      	add	r2, sp, #4
10009c16:	8852      	ldrh	r2, [r2, #2]
10009c18:	429a      	cmp	r2, r3
10009c1a:	d047      	beq.n	10009cac <ble_pair_key_request_handler+0xc0>
		if(pair_key_request.type == AT_BLE_PAIR_OOB)
10009c1c:	ab01      	add	r3, sp, #4
10009c1e:	789b      	ldrb	r3, [r3, #2]
10009c20:	2b01      	cmp	r3, #1
10009c22:	d063      	beq.n	10009cec <ble_pair_key_request_handler+0x100>
	return AT_BLE_SUCCESS;	
10009c24:	2000      	movs	r0, #0
10009c26:	e057      	b.n	10009cd8 <ble_pair_key_request_handler+0xec>
		DBG_LOG("Enter the Passkey(6-Digit) in Terminal:");
10009c28:	4836      	ldr	r0, [pc, #216]	; (10009d04 <ble_pair_key_request_handler+0x118>)
10009c2a:	4b37      	ldr	r3, [pc, #220]	; (10009d08 <ble_pair_key_request_handler+0x11c>)
10009c2c:	4798      	blx	r3
10009c2e:	4837      	ldr	r0, [pc, #220]	; (10009d0c <ble_pair_key_request_handler+0x120>)
10009c30:	4b37      	ldr	r3, [pc, #220]	; (10009d10 <ble_pair_key_request_handler+0x124>)
10009c32:	4798      	blx	r3
10009c34:	2700      	movs	r7, #0
			pin = getchar_b11_timeout(CHECK_PAIRING_KEY_TIME_OUT);
10009c36:	4c37      	ldr	r4, [pc, #220]	; (10009d14 <ble_pair_key_request_handler+0x128>)
		for (idx = 0; idx < 6;) {          
10009c38:	b2fe      	uxtb	r6, r7
			pin = getchar_b11_timeout(CHECK_PAIRING_KEY_TIME_OUT);
10009c3a:	201e      	movs	r0, #30
10009c3c:	47a0      	blx	r4
10009c3e:	b2c3      	uxtb	r3, r0
			if (!pin) {
10009c40:	2b00      	cmp	r3, #0
10009c42:	d00c      	beq.n	10009c5e <ble_pair_key_request_handler+0x72>
			if ((pin >= '0') && ( pin <= '9')) {
10009c44:	001a      	movs	r2, r3
10009c46:	3a30      	subs	r2, #48	; 0x30
10009c48:	2a09      	cmp	r2, #9
10009c4a:	d923      	bls.n	10009c94 <ble_pair_key_request_handler+0xa8>
		for (idx = 0; idx < 6;) {          
10009c4c:	2e05      	cmp	r6, #5
10009c4e:	d9f4      	bls.n	10009c3a <ble_pair_key_request_handler+0x4e>
            DBG_LOG("Entered Pass-code:");
10009c50:	482c      	ldr	r0, [pc, #176]	; (10009d04 <ble_pair_key_request_handler+0x118>)
10009c52:	4b2d      	ldr	r3, [pc, #180]	; (10009d08 <ble_pair_key_request_handler+0x11c>)
10009c54:	4798      	blx	r3
10009c56:	4830      	ldr	r0, [pc, #192]	; (10009d18 <ble_pair_key_request_handler+0x12c>)
10009c58:	4b2d      	ldr	r3, [pc, #180]	; (10009d10 <ble_pair_key_request_handler+0x124>)
10009c5a:	4798      	blx	r3
10009c5c:	e02c      	b.n	10009cb8 <ble_pair_key_request_handler+0xcc>
			DBG_LOG("Pin Timeout");
10009c5e:	4f29      	ldr	r7, [pc, #164]	; (10009d04 <ble_pair_key_request_handler+0x118>)
10009c60:	0038      	movs	r0, r7
10009c62:	4e29      	ldr	r6, [pc, #164]	; (10009d08 <ble_pair_key_request_handler+0x11c>)
10009c64:	47b0      	blx	r6
10009c66:	482d      	ldr	r0, [pc, #180]	; (10009d1c <ble_pair_key_request_handler+0x130>)
10009c68:	4c29      	ldr	r4, [pc, #164]	; (10009d10 <ble_pair_key_request_handler+0x124>)
10009c6a:	47a0      	blx	r4
				DBG_LOG("Disconnecting ...");
10009c6c:	0038      	movs	r0, r7
10009c6e:	47b0      	blx	r6
10009c70:	482b      	ldr	r0, [pc, #172]	; (10009d20 <ble_pair_key_request_handler+0x134>)
10009c72:	47a0      	blx	r4
				if (!(at_ble_disconnect(pair_key->handle,
10009c74:	8828      	ldrh	r0, [r5, #0]
10009c76:	2113      	movs	r1, #19
10009c78:	4b2a      	ldr	r3, [pc, #168]	; (10009d24 <ble_pair_key_request_handler+0x138>)
10009c7a:	4798      	blx	r3
10009c7c:	0003      	movs	r3, r0
				return AT_BLE_FAILURE;
10009c7e:	20e2      	movs	r0, #226	; 0xe2
				if (!(at_ble_disconnect(pair_key->handle,
10009c80:	2b00      	cmp	r3, #0
10009c82:	d029      	beq.n	10009cd8 <ble_pair_key_request_handler+0xec>
					DBG_LOG("Disconnect Request Failed");
10009c84:	481f      	ldr	r0, [pc, #124]	; (10009d04 <ble_pair_key_request_handler+0x118>)
10009c86:	4b20      	ldr	r3, [pc, #128]	; (10009d08 <ble_pair_key_request_handler+0x11c>)
10009c88:	4798      	blx	r3
10009c8a:	4827      	ldr	r0, [pc, #156]	; (10009d28 <ble_pair_key_request_handler+0x13c>)
10009c8c:	4b20      	ldr	r3, [pc, #128]	; (10009d10 <ble_pair_key_request_handler+0x124>)
10009c8e:	4798      	blx	r3
				return AT_BLE_FAILURE;
10009c90:	20e2      	movs	r0, #226	; 0xe2
10009c92:	e021      	b.n	10009cd8 <ble_pair_key_request_handler+0xec>
			  passkey[idx++] = pin;
10009c94:	466a      	mov	r2, sp
10009c96:	2108      	movs	r1, #8
10009c98:	1852      	adds	r2, r2, r1
10009c9a:	55d3      	strb	r3, [r2, r7]
			  DBG_LOG_CONT("%c", pin);
10009c9c:	23ff      	movs	r3, #255	; 0xff
10009c9e:	4018      	ands	r0, r3
10009ca0:	4b22      	ldr	r3, [pc, #136]	; (10009d2c <ble_pair_key_request_handler+0x140>)
10009ca2:	4798      	blx	r3
10009ca4:	3701      	adds	r7, #1
		for (idx = 0; idx < 6;) {          
10009ca6:	2f06      	cmp	r7, #6
10009ca8:	d0d2      	beq.n	10009c50 <ble_pair_key_request_handler+0x64>
10009caa:	e7c5      	b.n	10009c38 <ble_pair_key_request_handler+0x4c>
            DBG_LOG("Please Enter the following Pass-code(on other Device):");
10009cac:	4815      	ldr	r0, [pc, #84]	; (10009d04 <ble_pair_key_request_handler+0x118>)
10009cae:	4b16      	ldr	r3, [pc, #88]	; (10009d08 <ble_pair_key_request_handler+0x11c>)
10009cb0:	4798      	blx	r3
10009cb2:	481f      	ldr	r0, [pc, #124]	; (10009d30 <ble_pair_key_request_handler+0x144>)
10009cb4:	4b16      	ldr	r3, [pc, #88]	; (10009d10 <ble_pair_key_request_handler+0x124>)
10009cb6:	4798      	blx	r3
		DBG_LOG("Enter the Passkey(6-Digit) in Terminal:");
10009cb8:	2400      	movs	r4, #0
                  passkey[idx] = (passkey[idx]);
10009cba:	ae02      	add	r6, sp, #8
                  DBG_LOG_CONT("%c",passkey[idx]);
10009cbc:	4f1b      	ldr	r7, [pc, #108]	; (10009d2c <ble_pair_key_request_handler+0x140>)
10009cbe:	5da0      	ldrb	r0, [r4, r6]
10009cc0:	47b8      	blx	r7
10009cc2:	3401      	adds	r4, #1
          for(idx=0; idx<AT_BLE_PASSKEY_LEN; idx++)
10009cc4:	2c06      	cmp	r4, #6
10009cc6:	d1fa      	bne.n	10009cbe <ble_pair_key_request_handler+0xd2>
          if(!(at_ble_pair_key_reply(pair_key->handle, pair_key_request.type, passkey)) == AT_BLE_SUCCESS)
10009cc8:	ab01      	add	r3, sp, #4
10009cca:	7899      	ldrb	r1, [r3, #2]
10009ccc:	8828      	ldrh	r0, [r5, #0]
10009cce:	aa02      	add	r2, sp, #8
10009cd0:	4b18      	ldr	r3, [pc, #96]	; (10009d34 <ble_pair_key_request_handler+0x148>)
10009cd2:	4798      	blx	r3
10009cd4:	2800      	cmp	r0, #0
10009cd6:	d101      	bne.n	10009cdc <ble_pair_key_request_handler+0xf0>
}
10009cd8:	b005      	add	sp, #20
10009cda:	bdf0      	pop	{r4, r5, r6, r7, pc}
                  DBG_LOG("Pair-key reply failed");
10009cdc:	4809      	ldr	r0, [pc, #36]	; (10009d04 <ble_pair_key_request_handler+0x118>)
10009cde:	4b0a      	ldr	r3, [pc, #40]	; (10009d08 <ble_pair_key_request_handler+0x11c>)
10009ce0:	4798      	blx	r3
10009ce2:	4815      	ldr	r0, [pc, #84]	; (10009d38 <ble_pair_key_request_handler+0x14c>)
10009ce4:	4b0a      	ldr	r3, [pc, #40]	; (10009d10 <ble_pair_key_request_handler+0x124>)
10009ce6:	4798      	blx	r3
	return AT_BLE_SUCCESS;	
10009ce8:	2000      	movs	r0, #0
10009cea:	e7f5      	b.n	10009cd8 <ble_pair_key_request_handler+0xec>
			DBG_LOG("OOB Feature Not supported");
10009cec:	4805      	ldr	r0, [pc, #20]	; (10009d04 <ble_pair_key_request_handler+0x118>)
10009cee:	4b06      	ldr	r3, [pc, #24]	; (10009d08 <ble_pair_key_request_handler+0x11c>)
10009cf0:	4798      	blx	r3
10009cf2:	4812      	ldr	r0, [pc, #72]	; (10009d3c <ble_pair_key_request_handler+0x150>)
10009cf4:	4b06      	ldr	r3, [pc, #24]	; (10009d10 <ble_pair_key_request_handler+0x124>)
10009cf6:	4798      	blx	r3
	return AT_BLE_SUCCESS;	
10009cf8:	2000      	movs	r0, #0
10009cfa:	e7ed      	b.n	10009cd8 <ble_pair_key_request_handler+0xec>
10009cfc:	1000ff28 	.word	0x1000ff28
10009d00:	1000eacb 	.word	0x1000eacb
10009d04:	10010514 	.word	0x10010514
10009d08:	1000ec09 	.word	0x1000ec09
10009d0c:	100103d4 	.word	0x100103d4
10009d10:	1000eaed 	.word	0x1000eaed
10009d14:	1000a35d 	.word	0x1000a35d
10009d18:	10010488 	.word	0x10010488
10009d1c:	100103fc 	.word	0x100103fc
10009d20:	10010408 	.word	0x10010408
10009d24:	1000bc89 	.word	0x1000bc89
10009d28:	1001035c 	.word	0x1001035c
10009d2c:	1000eb21 	.word	0x1000eb21
10009d30:	1001041c 	.word	0x1001041c
10009d34:	1000c125 	.word	0x1000c125
10009d38:	10010454 	.word	0x10010454
10009d3c:	1001046c 	.word	0x1001046c

10009d40 <ble_encryption_request_handler>:

/** @brief function handles encryption requests */
at_ble_status_t ble_encryption_request_handler(void *params)
{
10009d40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10009d42:	0006      	movs	r6, r0
	uint8_t idx;
	enc_req = (at_ble_encryption_request_t *)params;

	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++)
	{
		if((ble_dev_info[idx].conn_info.handle == enc_req->handle) && (ble_dev_info[idx].conn_state != BLE_DEVICE_DISCONNECTED) &&
10009d44:	8805      	ldrh	r5, [r0, #0]
10009d46:	4b2f      	ldr	r3, [pc, #188]	; (10009e04 <ble_encryption_request_handler+0xc4>)
10009d48:	2200      	movs	r2, #0
	for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++)
10009d4a:	2400      	movs	r4, #0
10009d4c:	e005      	b.n	10009d5a <ble_encryption_request_handler+0x1a>
10009d4e:	3401      	adds	r4, #1
10009d50:	b2e4      	uxtb	r4, r4
10009d52:	3201      	adds	r2, #1
10009d54:	337c      	adds	r3, #124	; 0x7c
10009d56:	2c05      	cmp	r4, #5
10009d58:	d019      	beq.n	10009d8e <ble_encryption_request_handler+0x4e>
		if((ble_dev_info[idx].conn_info.handle == enc_req->handle) && (ble_dev_info[idx].conn_state != BLE_DEVICE_DISCONNECTED) &&
10009d5a:	0010      	movs	r0, r2
10009d5c:	8919      	ldrh	r1, [r3, #8]
10009d5e:	42a9      	cmp	r1, r5
10009d60:	d1f5      	bne.n	10009d4e <ble_encryption_request_handler+0xe>
10009d62:	0019      	movs	r1, r3
10009d64:	315e      	adds	r1, #94	; 0x5e
10009d66:	7809      	ldrb	r1, [r1, #0]
10009d68:	2901      	cmp	r1, #1
10009d6a:	d9f0      	bls.n	10009d4e <ble_encryption_request_handler+0xe>
		(ble_dev_info[idx].conn_state != BLE_DEVICE_DEFAULT_IDLE))
		{
			device_found = true;
			ble_dev_info[idx].conn_state = BLE_DEVICE_ENCRYPTION_STATE;
10009d6c:	4a25      	ldr	r2, [pc, #148]	; (10009e04 <ble_encryption_request_handler+0xc4>)
10009d6e:	0143      	lsls	r3, r0, #5
10009d70:	1a18      	subs	r0, r3, r0
10009d72:	0080      	lsls	r0, r0, #2
10009d74:	1810      	adds	r0, r2, r0
10009d76:	305e      	adds	r0, #94	; 0x5e
10009d78:	2306      	movs	r3, #6
10009d7a:	7003      	strb	r3, [r0, #0]
	{
		DBG_LOG_DEV("host device ediv %x",ble_dev_info[idx].host_ltk.ediv);
		DBG_LOG_DEV("peer device ediv %x",ble_dev_info[idx].bond_info.peer_ltk.ediv);
		DBG_LOG_DEV("enc_req ediv %x", enc_req->ediv);
		DBG_LOG_DEV("The index is %d",idx);
		if((ble_dev_info[idx].host_ltk.ediv == enc_req->ediv)
10009d7c:	0163      	lsls	r3, r4, #5
10009d7e:	1b1b      	subs	r3, r3, r4
10009d80:	009b      	lsls	r3, r3, #2
10009d82:	18d2      	adds	r2, r2, r3
10009d84:	3270      	adds	r2, #112	; 0x70
10009d86:	8812      	ldrh	r2, [r2, #0]
10009d88:	8873      	ldrh	r3, [r6, #2]
10009d8a:	429a      	cmp	r2, r3
10009d8c:	d015      	beq.n	10009dba <ble_encryption_request_handler+0x7a>
	}
	
	
    if(key_found == false)
    {
	    DBG_LOG("Pairing information of peer device is not available.");
10009d8e:	4f1e      	ldr	r7, [pc, #120]	; (10009e08 <ble_encryption_request_handler+0xc8>)
10009d90:	0038      	movs	r0, r7
10009d92:	4e1e      	ldr	r6, [pc, #120]	; (10009e0c <ble_encryption_request_handler+0xcc>)
10009d94:	47b0      	blx	r6
10009d96:	481e      	ldr	r0, [pc, #120]	; (10009e10 <ble_encryption_request_handler+0xd0>)
10009d98:	4d1e      	ldr	r5, [pc, #120]	; (10009e14 <ble_encryption_request_handler+0xd4>)
10009d9a:	47a8      	blx	r5
	    DBG_LOG("Please unpair the device from peer device(mobile) settings menu and start pairing again");
10009d9c:	0038      	movs	r0, r7
10009d9e:	47b0      	blx	r6
10009da0:	481d      	ldr	r0, [pc, #116]	; (10009e18 <ble_encryption_request_handler+0xd8>)
10009da2:	47a8      	blx	r5
		at_ble_disconnect(ble_dev_info[idx].conn_info.handle, AT_BLE_AUTH_FAILURE);
10009da4:	0163      	lsls	r3, r4, #5
10009da6:	1b1c      	subs	r4, r3, r4
10009da8:	00a4      	lsls	r4, r4, #2
10009daa:	4b16      	ldr	r3, [pc, #88]	; (10009e04 <ble_encryption_request_handler+0xc4>)
10009dac:	191c      	adds	r4, r3, r4
10009dae:	8920      	ldrh	r0, [r4, #8]
10009db0:	2105      	movs	r1, #5
10009db2:	4b1a      	ldr	r3, [pc, #104]	; (10009e1c <ble_encryption_request_handler+0xdc>)
10009db4:	4798      	blx	r3
		return AT_BLE_FAILURE;
10009db6:	20e2      	movs	r0, #226	; 0xe2
	else
	{      
		DBG_LOG_DEV("Encryption Request Reply");
	}
	return AT_BLE_SUCCESS;
}
10009db8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		&& !memcmp(&enc_req->nb[0],&ble_dev_info[idx].host_ltk.nb[0],8))
10009dba:	0161      	lsls	r1, r4, #5
10009dbc:	1b09      	subs	r1, r1, r4
10009dbe:	0089      	lsls	r1, r1, #2
10009dc0:	3172      	adds	r1, #114	; 0x72
10009dc2:	4b10      	ldr	r3, [pc, #64]	; (10009e04 <ble_encryption_request_handler+0xc4>)
10009dc4:	18c9      	adds	r1, r1, r3
10009dc6:	1d30      	adds	r0, r6, #4
10009dc8:	2208      	movs	r2, #8
10009dca:	4b15      	ldr	r3, [pc, #84]	; (10009e20 <ble_encryption_request_handler+0xe0>)
10009dcc:	4798      	blx	r3
    if(key_found == false)
10009dce:	2800      	cmp	r0, #0
10009dd0:	d1dd      	bne.n	10009d8e <ble_encryption_request_handler+0x4e>
	if(!(at_ble_encryption_request_reply(enc_req->handle, ble_dev_info[idx].bond_info.auth, key_found, &ble_dev_info[idx].host_ltk) == AT_BLE_SUCCESS))
10009dd2:	0162      	lsls	r2, r4, #5
10009dd4:	1b13      	subs	r3, r2, r4
10009dd6:	009b      	lsls	r3, r3, #2
10009dd8:	3360      	adds	r3, #96	; 0x60
10009dda:	490a      	ldr	r1, [pc, #40]	; (10009e04 <ble_encryption_request_handler+0xc4>)
10009ddc:	185b      	adds	r3, r3, r1
10009dde:	1b14      	subs	r4, r2, r4
10009de0:	00a4      	lsls	r4, r4, #2
10009de2:	190c      	adds	r4, r1, r4
10009de4:	7d21      	ldrb	r1, [r4, #20]
10009de6:	8830      	ldrh	r0, [r6, #0]
10009de8:	2201      	movs	r2, #1
10009dea:	4c0e      	ldr	r4, [pc, #56]	; (10009e24 <ble_encryption_request_handler+0xe4>)
10009dec:	47a0      	blx	r4
10009dee:	2800      	cmp	r0, #0
10009df0:	d0e2      	beq.n	10009db8 <ble_encryption_request_handler+0x78>
		DBG_LOG("Encryption Request Reply Failed");
10009df2:	4805      	ldr	r0, [pc, #20]	; (10009e08 <ble_encryption_request_handler+0xc8>)
10009df4:	4b05      	ldr	r3, [pc, #20]	; (10009e0c <ble_encryption_request_handler+0xcc>)
10009df6:	4798      	blx	r3
10009df8:	480b      	ldr	r0, [pc, #44]	; (10009e28 <ble_encryption_request_handler+0xe8>)
10009dfa:	4b06      	ldr	r3, [pc, #24]	; (10009e14 <ble_encryption_request_handler+0xd4>)
10009dfc:	4798      	blx	r3
	return AT_BLE_SUCCESS;
10009dfe:	2000      	movs	r0, #0
10009e00:	e7da      	b.n	10009db8 <ble_encryption_request_handler+0x78>
10009e02:	46c0      	nop			; (mov r8, r8)
10009e04:	10011f08 	.word	0x10011f08
10009e08:	10010514 	.word	0x10010514
10009e0c:	1000ec09 	.word	0x1000ec09
10009e10:	10010180 	.word	0x10010180
10009e14:	1000eaed 	.word	0x1000eaed
10009e18:	100101b8 	.word	0x100101b8
10009e1c:	1000bc89 	.word	0x1000bc89
10009e20:	1000eaad 	.word	0x1000eaad
10009e24:	1000c219 	.word	0x1000c219
10009e28:	10010210 	.word	0x10010210

10009e2c <ble_mgr_events_callback_handler>:
{
10009e2c:	b530      	push	{r4, r5, lr}
	if (ble_event_handler != NULL)
10009e2e:	2a00      	cmp	r2, #0
10009e30:	d043      	beq.n	10009eba <ble_mgr_events_callback_handler+0x8e>
		switch(event_type)
10009e32:	2906      	cmp	r1, #6
10009e34:	d843      	bhi.n	10009ebe <ble_mgr_events_callback_handler+0x92>
10009e36:	0089      	lsls	r1, r1, #2
10009e38:	4b25      	ldr	r3, [pc, #148]	; (10009ed0 <ble_mgr_events_callback_handler+0xa4>)
10009e3a:	585b      	ldr	r3, [r3, r1]
10009e3c:	469f      	mov	pc, r3
				ble_event_cb_ptr = ble_mgr_gatt_server_event_cb;
10009e3e:	4c25      	ldr	r4, [pc, #148]	; (10009ed4 <ble_mgr_events_callback_handler+0xa8>)
				max_event_handler = MAX_GATT_SERVER_SUBSCRIBERS;
10009e40:	2505      	movs	r5, #5
10009e42:	e00a      	b.n	10009e5a <ble_mgr_events_callback_handler+0x2e>
				ble_event_cb_ptr = ble_mgr_htpt_event_cb;
10009e44:	4c24      	ldr	r4, [pc, #144]	; (10009ed8 <ble_mgr_events_callback_handler+0xac>)
				max_event_handler = MAX_HTPT_EVENT_SUBSCRIBERS;
10009e46:	2501      	movs	r5, #1
			break;
10009e48:	e007      	b.n	10009e5a <ble_mgr_events_callback_handler+0x2e>
				ble_event_cb_ptr = ble_mgr_dtm_event_cb;
10009e4a:	4c24      	ldr	r4, [pc, #144]	; (10009edc <ble_mgr_events_callback_handler+0xb0>)
				max_event_handler = MAX_DTM_EVENT_SUBSCRIBERS;
10009e4c:	2505      	movs	r5, #5
			break;
10009e4e:	e004      	b.n	10009e5a <ble_mgr_events_callback_handler+0x2e>
				ble_event_cb_ptr = ble_mgr_custom_event_cb;
10009e50:	4c23      	ldr	r4, [pc, #140]	; (10009ee0 <ble_mgr_events_callback_handler+0xb4>)
				max_event_handler = MAX_CUSTOM_EVENT_SUBSCRIBERS;
10009e52:	2501      	movs	r5, #1
			break;
10009e54:	e001      	b.n	10009e5a <ble_mgr_events_callback_handler+0x2e>
				ble_event_cb_ptr = ble_mgr_gap_event_cb;
10009e56:	4c23      	ldr	r4, [pc, #140]	; (10009ee4 <ble_mgr_events_callback_handler+0xb8>)
				max_event_handler = MAX_GAP_EVENT_SUBSCRIBERS;
10009e58:	2505      	movs	r5, #5
			if (event_cb_type == REGISTER_CALL_BACK)
10009e5a:	2800      	cmp	r0, #0
10009e5c:	d113      	bne.n	10009e86 <ble_mgr_events_callback_handler+0x5a>
					if(ble_event_cb_ptr[idx] == NULL)
10009e5e:	6823      	ldr	r3, [r4, #0]
10009e60:	2b00      	cmp	r3, #0
10009e62:	d00b      	beq.n	10009e7c <ble_mgr_events_callback_handler+0x50>
10009e64:	1d21      	adds	r1, r4, #4
10009e66:	2300      	movs	r3, #0
				for (idx = 0; idx < max_event_handler; idx++)
10009e68:	3301      	adds	r3, #1
10009e6a:	b2db      	uxtb	r3, r3
10009e6c:	42ab      	cmp	r3, r5
10009e6e:	d208      	bcs.n	10009e82 <ble_mgr_events_callback_handler+0x56>
					if(ble_event_cb_ptr[idx] == NULL)
10009e70:	000c      	movs	r4, r1
10009e72:	3104      	adds	r1, #4
10009e74:	1f08      	subs	r0, r1, #4
10009e76:	6800      	ldr	r0, [r0, #0]
10009e78:	2800      	cmp	r0, #0
10009e7a:	d1f5      	bne.n	10009e68 <ble_mgr_events_callback_handler+0x3c>
						ble_event_cb_ptr[idx] = ble_event_handler;
10009e7c:	6022      	str	r2, [r4, #0]
						status = true; //Successfully registered to table
10009e7e:	2301      	movs	r3, #1
						break;
10009e80:	e004      	b.n	10009e8c <ble_mgr_events_callback_handler+0x60>
			status = false; //Defaults to Failure[No Space to register, Not Found, Invalid Type]scenario
10009e82:	2300      	movs	r3, #0
10009e84:	e002      	b.n	10009e8c <ble_mgr_events_callback_handler+0x60>
10009e86:	2300      	movs	r3, #0
			else if(event_cb_type == UNREGISTER_CALL_BACK)
10009e88:	2801      	cmp	r0, #1
10009e8a:	d001      	beq.n	10009e90 <ble_mgr_events_callback_handler+0x64>
}
10009e8c:	0018      	movs	r0, r3
10009e8e:	bd30      	pop	{r4, r5, pc}
					if(ble_event_cb_ptr[idx] == ble_event_handler)
10009e90:	6823      	ldr	r3, [r4, #0]
10009e92:	429a      	cmp	r2, r3
10009e94:	d00b      	beq.n	10009eae <ble_mgr_events_callback_handler+0x82>
10009e96:	1d21      	adds	r1, r4, #4
10009e98:	2300      	movs	r3, #0
				for (idx = 0; idx < max_event_handler; idx++)
10009e9a:	3301      	adds	r3, #1
10009e9c:	b2db      	uxtb	r3, r3
10009e9e:	42ab      	cmp	r3, r5
10009ea0:	d209      	bcs.n	10009eb6 <ble_mgr_events_callback_handler+0x8a>
					if(ble_event_cb_ptr[idx] == ble_event_handler)
10009ea2:	000c      	movs	r4, r1
10009ea4:	3104      	adds	r1, #4
10009ea6:	1f08      	subs	r0, r1, #4
10009ea8:	6800      	ldr	r0, [r0, #0]
10009eaa:	4282      	cmp	r2, r0
10009eac:	d1f5      	bne.n	10009e9a <ble_mgr_events_callback_handler+0x6e>
						ble_event_cb_ptr[idx] = NULL;
10009eae:	2300      	movs	r3, #0
10009eb0:	6023      	str	r3, [r4, #0]
						status = true;//Successfully unregistered from table
10009eb2:	3301      	adds	r3, #1
						break;
10009eb4:	e7ea      	b.n	10009e8c <ble_mgr_events_callback_handler+0x60>
			status = false; //Defaults to Failure[No Space to register, Not Found, Invalid Type]scenario
10009eb6:	2300      	movs	r3, #0
10009eb8:	e7e8      	b.n	10009e8c <ble_mgr_events_callback_handler+0x60>
		status = false; //Invalid parameter
10009eba:	2300      	movs	r3, #0
10009ebc:	e7e6      	b.n	10009e8c <ble_mgr_events_callback_handler+0x60>
		switch(event_type)
10009ebe:	2300      	movs	r3, #0
10009ec0:	e7e4      	b.n	10009e8c <ble_mgr_events_callback_handler+0x60>
				ble_event_cb_ptr = ble_mgr_gatt_client_event_cb;
10009ec2:	4c09      	ldr	r4, [pc, #36]	; (10009ee8 <ble_mgr_events_callback_handler+0xbc>)
				max_event_handler = MAX_GATT_CLIENT_SUBSCRIBERS;
10009ec4:	2505      	movs	r5, #5
10009ec6:	e7c8      	b.n	10009e5a <ble_mgr_events_callback_handler+0x2e>
				ble_event_cb_ptr = ble_mgr_l2cap_event_cb;
10009ec8:	4c08      	ldr	r4, [pc, #32]	; (10009eec <ble_mgr_events_callback_handler+0xc0>)
				max_event_handler = MAX_L2CAP_EVENT_SUBSCRIBERS;
10009eca:	2501      	movs	r5, #1
10009ecc:	e7c5      	b.n	10009e5a <ble_mgr_events_callback_handler+0x2e>
10009ece:	46c0      	nop			; (mov r8, r8)
10009ed0:	1000ff0c 	.word	0x1000ff0c
10009ed4:	10011ef4 	.word	0x10011ef4
10009ed8:	10011ef0 	.word	0x10011ef0
10009edc:	10012178 	.word	0x10012178
10009ee0:	1001272c 	.word	0x1001272c
10009ee4:	1001218c 	.word	0x1001218c
10009ee8:	100121a0 	.word	0x100121a0
10009eec:	100121e8 	.word	0x100121e8

10009ef0 <ble_device_init>:
{
10009ef0:	b5f0      	push	{r4, r5, r6, r7, lr}
10009ef2:	46de      	mov	lr, fp
10009ef4:	4657      	mov	r7, sl
10009ef6:	464e      	mov	r6, r9
10009ef8:	4645      	mov	r5, r8
10009efa:	b5e0      	push	{r5, r6, r7, lr}
10009efc:	b091      	sub	sp, #68	; 0x44
10009efe:	0005      	movs	r5, r0
	ble_user_event_cb = 0;
10009f00:	2400      	movs	r4, #0
10009f02:	4b7c      	ldr	r3, [pc, #496]	; (1000a0f4 <ble_device_init+0x204>)
10009f04:	601c      	str	r4, [r3, #0]
	memset(&ble_peripheral_dev_address, 0, sizeof(at_ble_addr_t));
10009f06:	2207      	movs	r2, #7
10009f08:	2100      	movs	r1, #0
10009f0a:	487b      	ldr	r0, [pc, #492]	; (1000a0f8 <ble_device_init+0x208>)
10009f0c:	4e7b      	ldr	r6, [pc, #492]	; (1000a0fc <ble_device_init+0x20c>)
10009f0e:	47b0      	blx	r6
	memset(&connected_state_info, 0, sizeof(at_ble_connected_t));
10009f10:	2212      	movs	r2, #18
10009f12:	2100      	movs	r1, #0
10009f14:	487a      	ldr	r0, [pc, #488]	; (1000a100 <ble_device_init+0x210>)
10009f16:	47b0      	blx	r6
	scan_response_count = 0;
10009f18:	4b7a      	ldr	r3, [pc, #488]	; (1000a104 <ble_device_init+0x214>)
10009f1a:	701c      	strb	r4, [r3, #0]
	memset(scan_info, 0, sizeof(scan_info));
10009f1c:	22cd      	movs	r2, #205	; 0xcd
10009f1e:	0092      	lsls	r2, r2, #2
10009f20:	2100      	movs	r1, #0
10009f22:	4879      	ldr	r0, [pc, #484]	; (1000a108 <ble_device_init+0x218>)
10009f24:	47b0      	blx	r6
	event = AT_BLE_UNDEFINED_EVENT;
10009f26:	4b79      	ldr	r3, [pc, #484]	; (1000a10c <ble_device_init+0x21c>)
10009f28:	701c      	strb	r4, [r3, #0]
	memset(ble_event_params, 0, BLE_EVENT_PARAM_MAX_SIZE);
10009f2a:	2283      	movs	r2, #131	; 0x83
10009f2c:	0092      	lsls	r2, r2, #2
10009f2e:	2100      	movs	r1, #0
10009f30:	4877      	ldr	r0, [pc, #476]	; (1000a110 <ble_device_init+0x220>)
10009f32:	47b0      	blx	r6
	memset((uint8_t *)event_pool_memory, 0, sizeof(event_pool_memory));
10009f34:	4b77      	ldr	r3, [pc, #476]	; (1000a114 <ble_device_init+0x224>)
10009f36:	469b      	mov	fp, r3
10009f38:	2380      	movs	r3, #128	; 0x80
10009f3a:	00db      	lsls	r3, r3, #3
10009f3c:	469a      	mov	sl, r3
10009f3e:	001a      	movs	r2, r3
10009f40:	2100      	movs	r1, #0
10009f42:	4658      	mov	r0, fp
10009f44:	47b0      	blx	r6
	memset((uint8_t *)event_params_memory, 0, sizeof(event_params_memory));
10009f46:	4b74      	ldr	r3, [pc, #464]	; (1000a118 <ble_device_init+0x228>)
10009f48:	4699      	mov	r9, r3
10009f4a:	2380      	movs	r3, #128	; 0x80
10009f4c:	015b      	lsls	r3, r3, #5
10009f4e:	4698      	mov	r8, r3
10009f50:	001a      	movs	r2, r3
10009f52:	2100      	movs	r1, #0
10009f54:	4648      	mov	r0, r9
10009f56:	47b0      	blx	r6
	memset(&pf_cfg, 0, sizeof(pf_cfg));
10009f58:	4f70      	ldr	r7, [pc, #448]	; (1000a11c <ble_device_init+0x22c>)
10009f5a:	221c      	movs	r2, #28
10009f5c:	2100      	movs	r1, #0
10009f5e:	0038      	movs	r0, r7
10009f60:	47b0      	blx	r6
	pf_cfg.event_mem_pool.memStartAdd        = (uint8_t *)event_pool_memory;
10009f62:	465b      	mov	r3, fp
10009f64:	60bb      	str	r3, [r7, #8]
	pf_cfg.event_mem_pool.memSize            = sizeof(event_pool_memory);
10009f66:	4653      	mov	r3, sl
10009f68:	60fb      	str	r3, [r7, #12]
	pf_cfg.event_params_mem_pool.memStartAdd = (uint8_t *)event_params_memory;
10009f6a:	464b      	mov	r3, r9
10009f6c:	613b      	str	r3, [r7, #16]
	pf_cfg.event_params_mem_pool.memSize     = sizeof(event_params_memory);
10009f6e:	4643      	mov	r3, r8
10009f70:	617b      	str	r3, [r7, #20]
		ble_mgr_gap_event_cb[idx] = NULL;
10009f72:	4b6b      	ldr	r3, [pc, #428]	; (1000a120 <ble_device_init+0x230>)
10009f74:	601c      	str	r4, [r3, #0]
10009f76:	605c      	str	r4, [r3, #4]
10009f78:	609c      	str	r4, [r3, #8]
10009f7a:	60dc      	str	r4, [r3, #12]
10009f7c:	611c      	str	r4, [r3, #16]
		ble_mgr_gatt_client_event_cb[idx] = NULL;
10009f7e:	4b69      	ldr	r3, [pc, #420]	; (1000a124 <ble_device_init+0x234>)
10009f80:	601c      	str	r4, [r3, #0]
10009f82:	605c      	str	r4, [r3, #4]
10009f84:	609c      	str	r4, [r3, #8]
10009f86:	60dc      	str	r4, [r3, #12]
10009f88:	611c      	str	r4, [r3, #16]
		ble_mgr_gatt_server_event_cb[idx] = NULL;
10009f8a:	4b67      	ldr	r3, [pc, #412]	; (1000a128 <ble_device_init+0x238>)
10009f8c:	601c      	str	r4, [r3, #0]
10009f8e:	605c      	str	r4, [r3, #4]
10009f90:	609c      	str	r4, [r3, #8]
10009f92:	60dc      	str	r4, [r3, #12]
10009f94:	611c      	str	r4, [r3, #16]
		ble_mgr_l2cap_event_cb[idx] = NULL;
10009f96:	4b65      	ldr	r3, [pc, #404]	; (1000a12c <ble_device_init+0x23c>)
10009f98:	601c      	str	r4, [r3, #0]
		ble_mgr_htpt_event_cb[idx] = NULL;
10009f9a:	4b65      	ldr	r3, [pc, #404]	; (1000a130 <ble_device_init+0x240>)
10009f9c:	601c      	str	r4, [r3, #0]
		ble_mgr_dtm_event_cb[idx] = NULL;
10009f9e:	4b65      	ldr	r3, [pc, #404]	; (1000a134 <ble_device_init+0x244>)
10009fa0:	601c      	str	r4, [r3, #0]
10009fa2:	605c      	str	r4, [r3, #4]
10009fa4:	609c      	str	r4, [r3, #8]
10009fa6:	60dc      	str	r4, [r3, #12]
10009fa8:	611c      	str	r4, [r3, #16]
		ble_mgr_custom_event_cb[idx] = NULL;
10009faa:	4b63      	ldr	r3, [pc, #396]	; (1000a138 <ble_device_init+0x248>)
10009fac:	601c      	str	r4, [r3, #0]
10009fae:	4c63      	ldr	r4, [pc, #396]	; (1000a13c <ble_device_init+0x24c>)
10009fb0:	239b      	movs	r3, #155	; 0x9b
10009fb2:	009b      	lsls	r3, r3, #2
10009fb4:	4698      	mov	r8, r3
10009fb6:	44a0      	add	r8, r4
        memset(&ble_dev_info[idx], 0, sizeof(ble_connected_dev_info_t));
10009fb8:	4f50      	ldr	r7, [pc, #320]	; (1000a0fc <ble_device_init+0x20c>)
		ble_dev_info[idx].bond_info.status = AT_BLE_GAP_INVALID_PARAM;
10009fba:	2640      	movs	r6, #64	; 0x40
        memset(&ble_dev_info[idx], 0, sizeof(ble_connected_dev_info_t));
10009fbc:	227c      	movs	r2, #124	; 0x7c
10009fbe:	2100      	movs	r1, #0
10009fc0:	0020      	movs	r0, r4
10009fc2:	47b8      	blx	r7
		ble_dev_info[idx].conn_state = BLE_DEVICE_DEFAULT_IDLE;
10009fc4:	0023      	movs	r3, r4
10009fc6:	335e      	adds	r3, #94	; 0x5e
10009fc8:	2200      	movs	r2, #0
10009fca:	701a      	strb	r2, [r3, #0]
		ble_dev_info[idx].bond_info.status = AT_BLE_GAP_INVALID_PARAM;
10009fcc:	7626      	strb	r6, [r4, #24]
10009fce:	347c      	adds	r4, #124	; 0x7c
    for (idx = 0; idx < BLE_MAX_DEVICE_CONNECTED; idx++)
10009fd0:	45a0      	cmp	r8, r4
10009fd2:	d1f3      	bne.n	10009fbc <ble_device_init+0xcc>
	ble_device_count = 0; 
10009fd4:	4b5a      	ldr	r3, [pc, #360]	; (1000a140 <ble_device_init+0x250>)
10009fd6:	701a      	strb	r2, [r3, #0]
	DBG_LOG("Initializing SAMB11");
10009fd8:	485a      	ldr	r0, [pc, #360]	; (1000a144 <ble_device_init+0x254>)
10009fda:	4b5b      	ldr	r3, [pc, #364]	; (1000a148 <ble_device_init+0x258>)
10009fdc:	4798      	blx	r3
10009fde:	485b      	ldr	r0, [pc, #364]	; (1000a14c <ble_device_init+0x25c>)
10009fe0:	4b5b      	ldr	r3, [pc, #364]	; (1000a150 <ble_device_init+0x260>)
10009fe2:	4798      	blx	r3
	if(at_ble_init(args) != AT_BLE_SUCCESS)
10009fe4:	484d      	ldr	r0, [pc, #308]	; (1000a11c <ble_device_init+0x22c>)
10009fe6:	4b5b      	ldr	r3, [pc, #364]	; (1000a154 <ble_device_init+0x264>)
10009fe8:	4798      	blx	r3
10009fea:	2800      	cmp	r0, #0
10009fec:	d168      	bne.n	1000a0c0 <ble_device_init+0x1d0>
	ble_mgr_events_callback_handler(REGISTER_CALL_BACK, 
10009fee:	4a5a      	ldr	r2, [pc, #360]	; (1000a158 <ble_device_init+0x268>)
10009ff0:	2100      	movs	r1, #0
10009ff2:	2000      	movs	r0, #0
10009ff4:	4c59      	ldr	r4, [pc, #356]	; (1000a15c <ble_device_init+0x26c>)
10009ff6:	47a0      	blx	r4
	ble_mgr_events_callback_handler(REGISTER_CALL_BACK,
10009ff8:	4a59      	ldr	r2, [pc, #356]	; (1000a160 <ble_device_init+0x270>)
10009ffa:	2102      	movs	r1, #2
10009ffc:	2000      	movs	r0, #0
10009ffe:	47a0      	blx	r4
	return at_ble_device_name_set(name, name_len);
1000a000:	2109      	movs	r1, #9
1000a002:	4858      	ldr	r0, [pc, #352]	; (1000a164 <ble_device_init+0x274>)
1000a004:	4b58      	ldr	r3, [pc, #352]	; (1000a168 <ble_device_init+0x278>)
1000a006:	4798      	blx	r3
	if (ble_set_device_name((uint8_t *)dev_name, strlen(dev_name)) != AT_BLE_SUCCESS)
1000a008:	2800      	cmp	r0, #0
1000a00a:	d005      	beq.n	1000a018 <ble_device_init+0x128>
		DBG_LOG("Device name set failed");
1000a00c:	484d      	ldr	r0, [pc, #308]	; (1000a144 <ble_device_init+0x254>)
1000a00e:	4b4e      	ldr	r3, [pc, #312]	; (1000a148 <ble_device_init+0x258>)
1000a010:	4798      	blx	r3
1000a012:	4856      	ldr	r0, [pc, #344]	; (1000a16c <ble_device_init+0x27c>)
1000a014:	4b4e      	ldr	r3, [pc, #312]	; (1000a150 <ble_device_init+0x260>)
1000a016:	4798      	blx	r3
	at_ble_addr_t address = {AT_BLE_ADDRESS_PUBLIC, {0xAB, 0xCD, 0xEF, 0xAB, 0xCD, 0xEF}};
1000a018:	ab04      	add	r3, sp, #16
1000a01a:	4955      	ldr	r1, [pc, #340]	; (1000a170 <ble_device_init+0x280>)
1000a01c:	000a      	movs	r2, r1
1000a01e:	6889      	ldr	r1, [r1, #8]
1000a020:	9104      	str	r1, [sp, #16]
1000a022:	8991      	ldrh	r1, [r2, #12]
1000a024:	3208      	adds	r2, #8
1000a026:	8099      	strh	r1, [r3, #4]
1000a028:	7992      	ldrb	r2, [r2, #6]
1000a02a:	719a      	strb	r2, [r3, #6]
	memset(&stDevConfig, 0, sizeof(at_ble_dev_config_t));
1000a02c:	2226      	movs	r2, #38	; 0x26
1000a02e:	2100      	movs	r1, #0
1000a030:	a806      	add	r0, sp, #24
1000a032:	4b32      	ldr	r3, [pc, #200]	; (1000a0fc <ble_device_init+0x20c>)
1000a034:	4798      	blx	r3
	if (addr == NULL)
1000a036:	2d00      	cmp	r5, #0
1000a038:	d04e      	beq.n	1000a0d8 <ble_device_init+0x1e8>
	DBG_LOG("BD Address:0x%02X%02X%02X%02X%02X%02X, Address Type:%d",
1000a03a:	4842      	ldr	r0, [pc, #264]	; (1000a144 <ble_device_init+0x254>)
1000a03c:	4b42      	ldr	r3, [pc, #264]	; (1000a148 <ble_device_init+0x258>)
1000a03e:	4798      	blx	r3
1000a040:	792b      	ldrb	r3, [r5, #4]
1000a042:	796a      	ldrb	r2, [r5, #5]
1000a044:	79a9      	ldrb	r1, [r5, #6]
1000a046:	7828      	ldrb	r0, [r5, #0]
1000a048:	9003      	str	r0, [sp, #12]
1000a04a:	7868      	ldrb	r0, [r5, #1]
1000a04c:	9002      	str	r0, [sp, #8]
1000a04e:	78a8      	ldrb	r0, [r5, #2]
1000a050:	9001      	str	r0, [sp, #4]
1000a052:	78e8      	ldrb	r0, [r5, #3]
1000a054:	9000      	str	r0, [sp, #0]
1000a056:	4847      	ldr	r0, [pc, #284]	; (1000a174 <ble_device_init+0x284>)
1000a058:	4c3d      	ldr	r4, [pc, #244]	; (1000a150 <ble_device_init+0x260>)
1000a05a:	47a0      	blx	r4
	stDevConfig.role = (at_ble_dev_role_t)BLE_DEVICE_ROLE;
1000a05c:	ac06      	add	r4, sp, #24
1000a05e:	2302      	movs	r3, #2
1000a060:	7023      	strb	r3, [r4, #0]
	stDevConfig.renew_dur = AT_RENEW_DUR_VAL_MIN;
1000a062:	4b45      	ldr	r3, [pc, #276]	; (1000a178 <ble_device_init+0x288>)
1000a064:	8063      	strh	r3, [r4, #2]
	memcpy((uint8_t *)&stDevConfig.address, (uint8_t *)addr, sizeof(at_ble_addr_t));
1000a066:	2207      	movs	r2, #7
1000a068:	0029      	movs	r1, r5
1000a06a:	a807      	add	r0, sp, #28
1000a06c:	4b43      	ldr	r3, [pc, #268]	; (1000a17c <ble_device_init+0x28c>)
1000a06e:	4798      	blx	r3
	stDevConfig.att_cfg.b2NamePerm = AT_BLE_WRITE_DISABLE;
1000a070:	2300      	movs	r3, #0
1000a072:	76e3      	strb	r3, [r4, #27]
	stDevConfig.att_cfg.b2AppearancePerm = AT_BLE_WRITE_DISABLE;
1000a074:	7723      	strb	r3, [r4, #28]
	stDevConfig.att_cfg.b1EnableSpcs = 0;
1000a076:	7763      	strb	r3, [r4, #29]
	stDevConfig.att_cfg.b1EnableServiceChanged = 0;
1000a078:	77a3      	strb	r3, [r4, #30]
	stDevConfig.att_cfg.b2Rfu = AT_BLE_WRITE_DISABLE;
1000a07a:	77e3      	strb	r3, [r4, #31]
	stDevConfig.gap_start_hdl = AT_BLE_AUTO_ALLOC_HANDLE;
1000a07c:	8423      	strh	r3, [r4, #32]
	stDevConfig.gatt_start_hdl = AT_BLE_AUTO_ALLOC_HANDLE;
1000a07e:	8463      	strh	r3, [r4, #34]	; 0x22
	stDevConfig.max_mtu = AT_MTU_VAL_RECOMMENDED;
1000a080:	2380      	movs	r3, #128	; 0x80
1000a082:	009b      	lsls	r3, r3, #2
1000a084:	84a3      	strh	r3, [r4, #36]	; 0x24
	if(at_ble_set_dev_config(&stDevConfig) != AT_BLE_SUCCESS)
1000a086:	0020      	movs	r0, r4
1000a088:	4b3d      	ldr	r3, [pc, #244]	; (1000a180 <ble_device_init+0x290>)
1000a08a:	4798      	blx	r3
1000a08c:	2800      	cmp	r0, #0
1000a08e:	d005      	beq.n	1000a09c <ble_device_init+0x1ac>
		DBG_LOG("Set BLE Device configuration failed");
1000a090:	482c      	ldr	r0, [pc, #176]	; (1000a144 <ble_device_init+0x254>)
1000a092:	4b2d      	ldr	r3, [pc, #180]	; (1000a148 <ble_device_init+0x258>)
1000a094:	4798      	blx	r3
1000a096:	483b      	ldr	r0, [pc, #236]	; (1000a184 <ble_device_init+0x294>)
1000a098:	4b2d      	ldr	r3, [pc, #180]	; (1000a150 <ble_device_init+0x260>)
1000a09a:	4798      	blx	r3
	if (at_ble_addr_set(addr) != AT_BLE_SUCCESS)
1000a09c:	0028      	movs	r0, r5
1000a09e:	4b3a      	ldr	r3, [pc, #232]	; (1000a188 <ble_device_init+0x298>)
1000a0a0:	4798      	blx	r3
1000a0a2:	2800      	cmp	r0, #0
1000a0a4:	d005      	beq.n	1000a0b2 <ble_device_init+0x1c2>
		DBG_LOG("Set BLE Device Address failed");
1000a0a6:	4827      	ldr	r0, [pc, #156]	; (1000a144 <ble_device_init+0x254>)
1000a0a8:	4b27      	ldr	r3, [pc, #156]	; (1000a148 <ble_device_init+0x258>)
1000a0aa:	4798      	blx	r3
1000a0ac:	4837      	ldr	r0, [pc, #220]	; (1000a18c <ble_device_init+0x29c>)
1000a0ae:	4b28      	ldr	r3, [pc, #160]	; (1000a150 <ble_device_init+0x260>)
1000a0b0:	4798      	blx	r3
}
1000a0b2:	b011      	add	sp, #68	; 0x44
1000a0b4:	bc3c      	pop	{r2, r3, r4, r5}
1000a0b6:	4690      	mov	r8, r2
1000a0b8:	4699      	mov	r9, r3
1000a0ba:	46a2      	mov	sl, r4
1000a0bc:	46ab      	mov	fp, r5
1000a0be:	bdf0      	pop	{r4, r5, r6, r7, pc}
		DBG_LOG("SAMB11 Initialization failed");
1000a0c0:	4e20      	ldr	r6, [pc, #128]	; (1000a144 <ble_device_init+0x254>)
1000a0c2:	0030      	movs	r0, r6
1000a0c4:	4d20      	ldr	r5, [pc, #128]	; (1000a148 <ble_device_init+0x258>)
1000a0c6:	47a8      	blx	r5
1000a0c8:	4831      	ldr	r0, [pc, #196]	; (1000a190 <ble_device_init+0x2a0>)
1000a0ca:	4c21      	ldr	r4, [pc, #132]	; (1000a150 <ble_device_init+0x260>)
1000a0cc:	47a0      	blx	r4
		DBG_LOG("Please check the power and connection / hardware connector");	
1000a0ce:	0030      	movs	r0, r6
1000a0d0:	47a8      	blx	r5
1000a0d2:	4830      	ldr	r0, [pc, #192]	; (1000a194 <ble_device_init+0x2a4>)
1000a0d4:	47a0      	blx	r4
1000a0d6:	e7fe      	b.n	1000a0d6 <ble_device_init+0x1e6>
		if(at_ble_addr_get(&address) != AT_BLE_SUCCESS)
1000a0d8:	a804      	add	r0, sp, #16
1000a0da:	4b2f      	ldr	r3, [pc, #188]	; (1000a198 <ble_device_init+0x2a8>)
1000a0dc:	4798      	blx	r3
		addr = &address;
1000a0de:	ad04      	add	r5, sp, #16
		if(at_ble_addr_get(&address) != AT_BLE_SUCCESS)
1000a0e0:	2800      	cmp	r0, #0
1000a0e2:	d0aa      	beq.n	1000a03a <ble_device_init+0x14a>
			DBG_LOG("BD address get failed");
1000a0e4:	4817      	ldr	r0, [pc, #92]	; (1000a144 <ble_device_init+0x254>)
1000a0e6:	4b18      	ldr	r3, [pc, #96]	; (1000a148 <ble_device_init+0x258>)
1000a0e8:	4798      	blx	r3
1000a0ea:	482c      	ldr	r0, [pc, #176]	; (1000a19c <ble_device_init+0x2ac>)
1000a0ec:	4b18      	ldr	r3, [pc, #96]	; (1000a150 <ble_device_init+0x260>)
1000a0ee:	4798      	blx	r3
		addr = &address;
1000a0f0:	ad04      	add	r5, sp, #16
1000a0f2:	e7a2      	b.n	1000a03a <ble_device_init+0x14a>
1000a0f4:	10010928 	.word	0x10010928
1000a0f8:	10010920 	.word	0x10010920
1000a0fc:	1000eadd 	.word	0x1000eadd
1000a100:	100121b4 	.word	0x100121b4
1000a104:	10011d2c 	.word	0x10011d2c
1000a108:	100121ec 	.word	0x100121ec
1000a10c:	100121e4 	.word	0x100121e4
1000a110:	10012520 	.word	0x10012520
1000a114:	1001192c 	.word	0x1001192c
1000a118:	1001092c 	.word	0x1001092c
1000a11c:	100121c8 	.word	0x100121c8
1000a120:	1001218c 	.word	0x1001218c
1000a124:	100121a0 	.word	0x100121a0
1000a128:	10011ef4 	.word	0x10011ef4
1000a12c:	100121e8 	.word	0x100121e8
1000a130:	10011ef0 	.word	0x10011ef0
1000a134:	10012178 	.word	0x10012178
1000a138:	1001272c 	.word	0x1001272c
1000a13c:	10011f08 	.word	0x10011f08
1000a140:	10012174 	.word	0x10012174
1000a144:	10010514 	.word	0x10010514
1000a148:	1000ec09 	.word	0x1000ec09
1000a14c:	10010028 	.word	0x10010028
1000a150:	1000eaed 	.word	0x1000eaed
1000a154:	1000b8a1 	.word	0x1000b8a1
1000a158:	10010290 	.word	0x10010290
1000a15c:	10009e2d 	.word	0x10009e2d
1000a160:	100102dc 	.word	0x100102dc
1000a164:	10010098 	.word	0x10010098
1000a168:	1000b7b9 	.word	0x1000b7b9
1000a16c:	100100a4 	.word	0x100100a4
1000a170:	1000ff28 	.word	0x1000ff28
1000a174:	100100d4 	.word	0x100100d4
1000a178:	00003a98 	.word	0x00003a98
1000a17c:	1000eacb 	.word	0x1000eacb
1000a180:	1000b811 	.word	0x1000b811
1000a184:	1001010c 	.word	0x1001010c
1000a188:	1000ba55 	.word	0x1000ba55
1000a18c:	10010130 	.word	0x10010130
1000a190:	1001003c 	.word	0x1001003c
1000a194:	1001005c 	.word	0x1001005c
1000a198:	1000b7ed 	.word	0x1000b7ed
1000a19c:	100100bc 	.word	0x100100bc

1000a1a0 <led_init>:

#include <asf.h>
#include "led.h"

void led_init(void)
{
1000a1a0:	b510      	push	{r4, lr}
1000a1a2:	b082      	sub	sp, #8
	struct gpio_config config_gpio_pin;

	gpio_get_config_defaults(&config_gpio_pin);
1000a1a4:	ac01      	add	r4, sp, #4
1000a1a6:	0020      	movs	r0, r4
1000a1a8:	4b05      	ldr	r3, [pc, #20]	; (1000a1c0 <led_init+0x20>)
1000a1aa:	4798      	blx	r3

	config_gpio_pin.direction = GPIO_PIN_DIR_OUTPUT;
1000a1ac:	2301      	movs	r3, #1
1000a1ae:	7023      	strb	r3, [r4, #0]
	config_gpio_pin.input_pull = GPIO_PIN_PULL_NONE;
1000a1b0:	2300      	movs	r3, #0
1000a1b2:	7063      	strb	r3, [r4, #1]

	gpio_pin_set_config(LED_0_PIN, &config_gpio_pin);
1000a1b4:	0021      	movs	r1, r4
1000a1b6:	2016      	movs	r0, #22
1000a1b8:	4b02      	ldr	r3, [pc, #8]	; (1000a1c4 <led_init+0x24>)
1000a1ba:	4798      	blx	r3
}
1000a1bc:	b002      	add	sp, #8
1000a1be:	bd10      	pop	{r4, pc}
1000a1c0:	100080dd 	.word	0x100080dd
1000a1c4:	100080ed 	.word	0x100080ed

1000a1c8 <uart_read_complete_callback>:

void _time_start(unsigned int sec);
unsigned int _time_done(void);

static void uart_read_complete_callback(struct uart_module *const module)
{
1000a1c8:	b510      	push	{r4, lr}
	if(read_status == UART_READ_WAITING) {
1000a1ca:	4b0e      	ldr	r3, [pc, #56]	; (1000a204 <uart_read_complete_callback+0x3c>)
1000a1cc:	781b      	ldrb	r3, [r3, #0]
1000a1ce:	2b01      	cmp	r3, #1
1000a1d0:	d00c      	beq.n	1000a1ec <uart_read_complete_callback+0x24>
		read_status = UART_READ_DONE;
		
		if(user_callback_func == NULL)
			uart_disable_callback(&uart_instance, UART_RX_COMPLETE);
	}
	else if(user_callback_func != NULL) {
1000a1d2:	4b0d      	ldr	r3, [pc, #52]	; (1000a208 <uart_read_complete_callback+0x40>)
1000a1d4:	681b      	ldr	r3, [r3, #0]
1000a1d6:	2b00      	cmp	r3, #0
1000a1d8:	d007      	beq.n	1000a1ea <uart_read_complete_callback+0x22>
		user_callback_func(string_input[0]);
1000a1da:	4c0c      	ldr	r4, [pc, #48]	; (1000a20c <uart_read_complete_callback+0x44>)
1000a1dc:	7820      	ldrb	r0, [r4, #0]
1000a1de:	4798      	blx	r3
		uart_read_buffer_job(&uart_instance, string_input, sizeof(string_input));
1000a1e0:	2201      	movs	r2, #1
1000a1e2:	0021      	movs	r1, r4
1000a1e4:	480a      	ldr	r0, [pc, #40]	; (1000a210 <uart_read_complete_callback+0x48>)
1000a1e6:	4b0b      	ldr	r3, [pc, #44]	; (1000a214 <uart_read_complete_callback+0x4c>)
1000a1e8:	4798      	blx	r3
	}
	else {
		//Nothing to do.
	}
}
1000a1ea:	bd10      	pop	{r4, pc}
		read_status = UART_READ_DONE;
1000a1ec:	2202      	movs	r2, #2
1000a1ee:	4b05      	ldr	r3, [pc, #20]	; (1000a204 <uart_read_complete_callback+0x3c>)
1000a1f0:	701a      	strb	r2, [r3, #0]
		if(user_callback_func == NULL)
1000a1f2:	4b05      	ldr	r3, [pc, #20]	; (1000a208 <uart_read_complete_callback+0x40>)
1000a1f4:	681b      	ldr	r3, [r3, #0]
1000a1f6:	2b00      	cmp	r3, #0
1000a1f8:	d1f7      	bne.n	1000a1ea <uart_read_complete_callback+0x22>
			uart_disable_callback(&uart_instance, UART_RX_COMPLETE);
1000a1fa:	2102      	movs	r1, #2
1000a1fc:	4804      	ldr	r0, [pc, #16]	; (1000a210 <uart_read_complete_callback+0x48>)
1000a1fe:	4b06      	ldr	r3, [pc, #24]	; (1000a218 <uart_read_complete_callback+0x50>)
1000a200:	4798      	blx	r3
1000a202:	e7f2      	b.n	1000a1ea <uart_read_complete_callback+0x22>
1000a204:	10011d2d 	.word	0x10011d2d
1000a208:	10011d38 	.word	0x10011d38
1000a20c:	10011d30 	.word	0x10011d30
1000a210:	10012730 	.word	0x10012730
1000a214:	10009107 	.word	0x10009107
1000a218:	10009167 	.word	0x10009167

1000a21c <usart_serial_getchar>:
 * \param[out]    c       Destination for the read character.
 */
static inline void usart_serial_getchar(
		struct uart_module *const module,
		uint8_t *c)
{
1000a21c:	b570      	push	{r4, r5, r6, lr}
1000a21e:	0006      	movs	r6, r0
1000a220:	000d      	movs	r5, r1
	while(STATUS_OK != uart_read_wait(module, c));
1000a222:	4c03      	ldr	r4, [pc, #12]	; (1000a230 <usart_serial_getchar+0x14>)
1000a224:	0029      	movs	r1, r5
1000a226:	0030      	movs	r0, r6
1000a228:	47a0      	blx	r4
1000a22a:	2800      	cmp	r0, #0
1000a22c:	d1fa      	bne.n	1000a224 <usart_serial_getchar+0x8>
}
1000a22e:	bd70      	pop	{r4, r5, r6, pc}
1000a230:	100090f5 	.word	0x100090f5

1000a234 <usart_serial_putchar>:
{
1000a234:	b570      	push	{r4, r5, r6, lr}
1000a236:	0006      	movs	r6, r0
1000a238:	000d      	movs	r5, r1
	while(STATUS_OK !=uart_write_wait(module, c));
1000a23a:	4c03      	ldr	r4, [pc, #12]	; (1000a248 <usart_serial_putchar+0x14>)
1000a23c:	0029      	movs	r1, r5
1000a23e:	0030      	movs	r0, r6
1000a240:	47a0      	blx	r4
1000a242:	2800      	cmp	r0, #0
1000a244:	d1fa      	bne.n	1000a23c <usart_serial_putchar+0x8>
}
1000a246:	bd70      	pop	{r4, r5, r6, pc}
1000a248:	100090e5 	.word	0x100090e5

1000a24c <serial_console_init>:

void serial_console_init(void)
{
1000a24c:	b570      	push	{r4, r5, r6, lr}
	system_clock_config(CLOCK_RESOURCE_XO_26_MHZ, CLOCK_FREQ_26_MHZ);
1000a24e:	2100      	movs	r1, #0
1000a250:	2000      	movs	r0, #0
1000a252:	4b19      	ldr	r3, [pc, #100]	; (1000a2b8 <serial_console_init+0x6c>)
1000a254:	4798      	blx	r3

	uart_get_config_defaults(&config_uart);
1000a256:	4c19      	ldr	r4, [pc, #100]	; (1000a2bc <serial_console_init+0x70>)
1000a258:	0020      	movs	r0, r4
1000a25a:	4b19      	ldr	r3, [pc, #100]	; (1000a2c0 <serial_console_init+0x74>)
1000a25c:	4798      	blx	r3

	config_uart.baud_rate = CONF_STDIO_BAUDRATE;
1000a25e:	23e1      	movs	r3, #225	; 0xe1
1000a260:	025b      	lsls	r3, r3, #9
1000a262:	6023      	str	r3, [r4, #0]
	config_uart.pin_number_pad[0] = EDBG_CDC_SERCOM_PIN_PAD0;
1000a264:	2302      	movs	r3, #2
1000a266:	60a3      	str	r3, [r4, #8]
	config_uart.pin_number_pad[1] = EDBG_CDC_SERCOM_PIN_PAD1;
1000a268:	2203      	movs	r2, #3
1000a26a:	60e2      	str	r2, [r4, #12]
	config_uart.pin_number_pad[2] = EDBG_CDC_SERCOM_PIN_PAD2;
1000a26c:	3201      	adds	r2, #1
1000a26e:	6122      	str	r2, [r4, #16]
	config_uart.pin_number_pad[3] = EDBG_CDC_SERCOM_PIN_PAD3;
1000a270:	3201      	adds	r2, #1
1000a272:	6162      	str	r2, [r4, #20]
	
	config_uart.pinmux_sel_pad[0] = EDBG_CDC_SERCOM_MUX_PAD0;
1000a274:	61a3      	str	r3, [r4, #24]
	config_uart.pinmux_sel_pad[1] = EDBG_CDC_SERCOM_MUX_PAD1;
1000a276:	61e3      	str	r3, [r4, #28]
	config_uart.pinmux_sel_pad[2] = EDBG_CDC_SERCOM_MUX_PAD2;
1000a278:	6223      	str	r3, [r4, #32]
	config_uart.pinmux_sel_pad[3] = EDBG_CDC_SERCOM_MUX_PAD3;
1000a27a:	6263      	str	r3, [r4, #36]	; 0x24
static inline void stdio_serial_init(
		struct uart_module *const module,
		Uart * const hw,
		const struct uart_config *const config)
{
	stdio_base = (void *)module;
1000a27c:	4d11      	ldr	r5, [pc, #68]	; (1000a2c4 <serial_console_init+0x78>)
1000a27e:	4b12      	ldr	r3, [pc, #72]	; (1000a2c8 <serial_console_init+0x7c>)
1000a280:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
1000a282:	4a12      	ldr	r2, [pc, #72]	; (1000a2cc <serial_console_init+0x80>)
1000a284:	4b12      	ldr	r3, [pc, #72]	; (1000a2d0 <serial_console_init+0x84>)
1000a286:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
1000a288:	4a12      	ldr	r2, [pc, #72]	; (1000a2d4 <serial_console_init+0x88>)
1000a28a:	4b13      	ldr	r3, [pc, #76]	; (1000a2d8 <serial_console_init+0x8c>)
1000a28c:	601a      	str	r2, [r3, #0]
	if (uart_init(module, hw, config) == STATUS_OK) {
1000a28e:	0022      	movs	r2, r4
1000a290:	4912      	ldr	r1, [pc, #72]	; (1000a2dc <serial_console_init+0x90>)
1000a292:	0028      	movs	r0, r5
1000a294:	4b12      	ldr	r3, [pc, #72]	; (1000a2e0 <serial_console_init+0x94>)
1000a296:	4798      	blx	r3

	usart_serial_init(module, hw, config);
# if defined(__GNUC__)
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
1000a298:	4e12      	ldr	r6, [pc, #72]	; (1000a2e4 <serial_console_init+0x98>)
1000a29a:	6833      	ldr	r3, [r6, #0]
1000a29c:	6898      	ldr	r0, [r3, #8]
1000a29e:	2100      	movs	r1, #0
1000a2a0:	4c11      	ldr	r4, [pc, #68]	; (1000a2e8 <serial_console_init+0x9c>)
1000a2a2:	47a0      	blx	r4
	setbuf(stdin, NULL);
1000a2a4:	6833      	ldr	r3, [r6, #0]
1000a2a6:	6858      	ldr	r0, [r3, #4]
1000a2a8:	2100      	movs	r1, #0
1000a2aa:	47a0      	blx	r4

	stdio_serial_init(&uart_instance, CONF_STDIO_USART_MODULE, &config_uart);
	
	uart_register_callback(&uart_instance, uart_read_complete_callback, UART_RX_COMPLETE);
1000a2ac:	2202      	movs	r2, #2
1000a2ae:	490f      	ldr	r1, [pc, #60]	; (1000a2ec <serial_console_init+0xa0>)
1000a2b0:	0028      	movs	r0, r5
1000a2b2:	4b0f      	ldr	r3, [pc, #60]	; (1000a2f0 <serial_console_init+0xa4>)
1000a2b4:	4798      	blx	r3
}
1000a2b6:	bd70      	pop	{r4, r5, r6, pc}
1000a2b8:	10008479 	.word	0x10008479
1000a2bc:	10012754 	.word	0x10012754
1000a2c0:	10008f05 	.word	0x10008f05
1000a2c4:	10012730 	.word	0x10012730
1000a2c8:	10011eec 	.word	0x10011eec
1000a2cc:	1000a235 	.word	0x1000a235
1000a2d0:	10011ee8 	.word	0x10011ee8
1000a2d4:	1000a21d 	.word	0x1000a21d
1000a2d8:	10011ee4 	.word	0x10011ee4
1000a2dc:	40004000 	.word	0x40004000
1000a2e0:	10008f31 	.word	0x10008f31
1000a2e4:	1001089c 	.word	0x1001089c
1000a2e8:	1000ec95 	.word	0x1000ec95
1000a2ec:	1000a1c9 	.word	0x1000a1c9
1000a2f0:	10009131 	.word	0x10009131

1000a2f4 <_time_start>:

void _time_start(unsigned int sec)
{
1000a2f4:	b5f0      	push	{r4, r5, r6, r7, lr}
1000a2f6:	b083      	sub	sp, #12
1000a2f8:	0005      	movs	r5, r0
	system_clock_get_value();
1000a2fa:	4c0d      	ldr	r4, [pc, #52]	; (1000a330 <_time_start+0x3c>)
1000a2fc:	47a0      	blx	r4
	unsigned int main_clk = system_clock_get_value();
1000a2fe:	47a0      	blx	r4

	tick = (((double)(main_clk)) * ((double)0.0000493)) * (sec * 1000);
1000a300:	4f0c      	ldr	r7, [pc, #48]	; (1000a334 <_time_start+0x40>)
1000a302:	47b8      	blx	r7
1000a304:	4e0c      	ldr	r6, [pc, #48]	; (1000a338 <_time_start+0x44>)
1000a306:	4a0d      	ldr	r2, [pc, #52]	; (1000a33c <_time_start+0x48>)
1000a308:	4b0d      	ldr	r3, [pc, #52]	; (1000a340 <_time_start+0x4c>)
1000a30a:	47b0      	blx	r6
1000a30c:	9000      	str	r0, [sp, #0]
1000a30e:	9101      	str	r1, [sp, #4]
1000a310:	20fa      	movs	r0, #250	; 0xfa
1000a312:	0080      	lsls	r0, r0, #2
1000a314:	4368      	muls	r0, r5
1000a316:	47b8      	blx	r7
1000a318:	0002      	movs	r2, r0
1000a31a:	000b      	movs	r3, r1
1000a31c:	9800      	ldr	r0, [sp, #0]
1000a31e:	9901      	ldr	r1, [sp, #4]
1000a320:	47b0      	blx	r6
1000a322:	4b08      	ldr	r3, [pc, #32]	; (1000a344 <_time_start+0x50>)
1000a324:	4798      	blx	r3
1000a326:	4b08      	ldr	r3, [pc, #32]	; (1000a348 <_time_start+0x54>)
1000a328:	6018      	str	r0, [r3, #0]
}
1000a32a:	b003      	add	sp, #12
1000a32c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000a32e:	46c0      	nop			; (mov r8, r8)
1000a330:	100084fd 	.word	0x100084fd
1000a334:	1000e73d 	.word	0x1000e73d
1000a338:	1000dba9 	.word	0x1000dba9
1000a33c:	19feaec7 	.word	0x19feaec7
1000a340:	3f09d8ef 	.word	0x3f09d8ef
1000a344:	1000db6d 	.word	0x1000db6d
1000a348:	10011d34 	.word	0x10011d34

1000a34c <_time_done>:

unsigned int _time_done()
{
	return --tick;
1000a34c:	4b02      	ldr	r3, [pc, #8]	; (1000a358 <_time_done+0xc>)
1000a34e:	681a      	ldr	r2, [r3, #0]
1000a350:	1e50      	subs	r0, r2, #1
1000a352:	6018      	str	r0, [r3, #0]
}
1000a354:	4770      	bx	lr
1000a356:	46c0      	nop			; (mov r8, r8)
1000a358:	10011d34 	.word	0x10011d34

1000a35c <getchar_b11_timeout>:

int getchar_b11_timeout(unsigned int sec)
{
1000a35c:	b570      	push	{r4, r5, r6, lr}
1000a35e:	0004      	movs	r4, r0
	read_status = UART_READ_WAITING;
1000a360:	2201      	movs	r2, #1
1000a362:	4b11      	ldr	r3, [pc, #68]	; (1000a3a8 <getchar_b11_timeout+0x4c>)
1000a364:	701a      	strb	r2, [r3, #0]
	
	if(user_callback_func == NULL)
1000a366:	4b11      	ldr	r3, [pc, #68]	; (1000a3ac <getchar_b11_timeout+0x50>)
1000a368:	681b      	ldr	r3, [r3, #0]
1000a36a:	2b00      	cmp	r3, #0
1000a36c:	d017      	beq.n	1000a39e <getchar_b11_timeout+0x42>
		uart_enable_callback(&uart_instance, UART_RX_COMPLETE);

	_time_start(sec);
1000a36e:	0020      	movs	r0, r4
1000a370:	4b0f      	ldr	r3, [pc, #60]	; (1000a3b0 <getchar_b11_timeout+0x54>)
1000a372:	4798      	blx	r3
	
	string_input[0] = 0;
1000a374:	490f      	ldr	r1, [pc, #60]	; (1000a3b4 <getchar_b11_timeout+0x58>)
1000a376:	2300      	movs	r3, #0
1000a378:	700b      	strb	r3, [r1, #0]
	uart_read_buffer_job(&uart_instance, string_input, sizeof(string_input));
1000a37a:	2201      	movs	r2, #1
1000a37c:	480e      	ldr	r0, [pc, #56]	; (1000a3b8 <getchar_b11_timeout+0x5c>)
1000a37e:	4b0f      	ldr	r3, [pc, #60]	; (1000a3bc <getchar_b11_timeout+0x60>)
1000a380:	4798      	blx	r3
	
	while (read_status != UART_READ_DONE && _time_done() > 0 );
1000a382:	4c09      	ldr	r4, [pc, #36]	; (1000a3a8 <getchar_b11_timeout+0x4c>)
1000a384:	4d0e      	ldr	r5, [pc, #56]	; (1000a3c0 <getchar_b11_timeout+0x64>)
1000a386:	7823      	ldrb	r3, [r4, #0]
1000a388:	2b02      	cmp	r3, #2
1000a38a:	d002      	beq.n	1000a392 <getchar_b11_timeout+0x36>
1000a38c:	47a8      	blx	r5
1000a38e:	2800      	cmp	r0, #0
1000a390:	d1f9      	bne.n	1000a386 <getchar_b11_timeout+0x2a>
	
	read_status = UART_READ_NONE;
1000a392:	2200      	movs	r2, #0
1000a394:	4b04      	ldr	r3, [pc, #16]	; (1000a3a8 <getchar_b11_timeout+0x4c>)
1000a396:	701a      	strb	r2, [r3, #0]

	return string_input[0];
1000a398:	4b06      	ldr	r3, [pc, #24]	; (1000a3b4 <getchar_b11_timeout+0x58>)
1000a39a:	7818      	ldrb	r0, [r3, #0]
}
1000a39c:	bd70      	pop	{r4, r5, r6, pc}
		uart_enable_callback(&uart_instance, UART_RX_COMPLETE);
1000a39e:	2102      	movs	r1, #2
1000a3a0:	4805      	ldr	r0, [pc, #20]	; (1000a3b8 <getchar_b11_timeout+0x5c>)
1000a3a2:	4b08      	ldr	r3, [pc, #32]	; (1000a3c4 <getchar_b11_timeout+0x68>)
1000a3a4:	4798      	blx	r3
1000a3a6:	e7e2      	b.n	1000a36e <getchar_b11_timeout+0x12>
1000a3a8:	10011d2d 	.word	0x10011d2d
1000a3ac:	10011d38 	.word	0x10011d38
1000a3b0:	1000a2f5 	.word	0x1000a2f5
1000a3b4:	10011d30 	.word	0x10011d30
1000a3b8:	10012730 	.word	0x10012730
1000a3bc:	10009107 	.word	0x10009107
1000a3c0:	1000a34d 	.word	0x1000a34d
1000a3c4:	10009147 	.word	0x10009147

1000a3c8 <platform_event_free>:
void platform_event_free(struct platform_event* event);
//struct str_watched_event watched_event;

void platform_event_free(struct platform_event* event)
{
	event->next = platform_event_free_list;
1000a3c8:	4b02      	ldr	r3, [pc, #8]	; (1000a3d4 <platform_event_free+0xc>)
1000a3ca:	681a      	ldr	r2, [r3, #0]
1000a3cc:	6002      	str	r2, [r0, #0]
	platform_event_free_list = event;
1000a3ce:	6018      	str	r0, [r3, #0]
}
1000a3d0:	4770      	bx	lr
1000a3d2:	46c0      	nop			; (mov r8, r8)
1000a3d4:	10011d3c 	.word	0x10011d3c

1000a3d8 <platform_event_post>:

void platform_event_post(uint16_t event_type, void * data, uint16_t data_len)
{
1000a3d8:	b530      	push	{r4, r5, lr}
	// get a free event object
	struct platform_event* evt = platform_event_free_list;
1000a3da:	4b0b      	ldr	r3, [pc, #44]	; (1000a408 <platform_event_post+0x30>)
1000a3dc:	681c      	ldr	r4, [r3, #0]
	if(evt != NULL)
1000a3de:	2c00      	cmp	r4, #0
1000a3e0:	d011      	beq.n	1000a406 <platform_event_post+0x2e>
	{
		platform_event_free_list = evt->next;
1000a3e2:	6825      	ldr	r5, [r4, #0]
1000a3e4:	601d      	str	r5, [r3, #0]
		
		evt->next = NULL;
1000a3e6:	2300      	movs	r3, #0
1000a3e8:	6023      	str	r3, [r4, #0]
		evt->data = data;
1000a3ea:	60a1      	str	r1, [r4, #8]
		evt->data_len = data_len;
1000a3ec:	80e2      	strh	r2, [r4, #6]
		evt->event_type = event_type;
1000a3ee:	80a0      	strh	r0, [r4, #4]

		if(platform_event_pending_list == NULL)
1000a3f0:	4b06      	ldr	r3, [pc, #24]	; (1000a40c <platform_event_post+0x34>)
1000a3f2:	681a      	ldr	r2, [r3, #0]
1000a3f4:	2a00      	cmp	r2, #0
1000a3f6:	d102      	bne.n	1000a3fe <platform_event_post+0x26>
		{
			platform_event_pending_list = evt;
1000a3f8:	601c      	str	r4, [r3, #0]
1000a3fa:	e004      	b.n	1000a406 <platform_event_post+0x2e>
		else
		{
			struct platform_event* cur = platform_event_pending_list;
			while(cur->next != NULL)
			{
				cur = cur->next;
1000a3fc:	001a      	movs	r2, r3
			while(cur->next != NULL)
1000a3fe:	6813      	ldr	r3, [r2, #0]
1000a400:	2b00      	cmp	r3, #0
1000a402:	d1fb      	bne.n	1000a3fc <platform_event_post+0x24>
			}
			cur->next = evt;
1000a404:	6014      	str	r4, [r2, #0]
		}
		
		//platform_event_signal();
	}
	
}
1000a406:	bd30      	pop	{r4, r5, pc}
1000a408:	10011d3c 	.word	0x10011d3c
1000a40c:	10011d40 	.word	0x10011d40

1000a410 <platform_event_init>:
	return status;
	
}

void platform_event_init()
{
1000a410:	b570      	push	{r4, r5, r6, lr}
	uint32_t i;
	platform_event_free_list = NULL;
1000a412:	2300      	movs	r3, #0
1000a414:	4a06      	ldr	r2, [pc, #24]	; (1000a430 <platform_event_init+0x20>)
1000a416:	6013      	str	r3, [r2, #0]
	platform_event_pending_list = NULL;
1000a418:	4a06      	ldr	r2, [pc, #24]	; (1000a434 <platform_event_init+0x24>)
1000a41a:	6013      	str	r3, [r2, #0]
1000a41c:	4c06      	ldr	r4, [pc, #24]	; (1000a438 <platform_event_init+0x28>)
1000a41e:	0026      	movs	r6, r4
1000a420:	3678      	adds	r6, #120	; 0x78
	//memset(&watched_event,0,sizeof(struct str_watched_event));
	for(i = 0; i < PLATFORM_EVENT_POOL_DEPTH; i++)
	{
		platform_event_free(&platform_event_pool[i]);
1000a422:	4d06      	ldr	r5, [pc, #24]	; (1000a43c <platform_event_init+0x2c>)
1000a424:	0020      	movs	r0, r4
1000a426:	47a8      	blx	r5
1000a428:	340c      	adds	r4, #12
	for(i = 0; i < PLATFORM_EVENT_POOL_DEPTH; i++)
1000a42a:	42b4      	cmp	r4, r6
1000a42c:	d1fa      	bne.n	1000a424 <platform_event_init+0x14>
	}
}
1000a42e:	bd70      	pop	{r4, r5, r6, pc}
1000a430:	10011d3c 	.word	0x10011d3c
1000a434:	10011d40 	.word	0x10011d40
1000a438:	10011d44 	.word	0x10011d44
1000a43c:	1000a3c9 	.word	0x1000a3c9

1000a440 <at_ke_msg_send>:
	}
	return status;
}

static void at_ke_msg_send(void const * param_ptr)
{
1000a440:	b570      	push	{r4, r5, r6, lr}
1000a442:	0004      	movs	r4, r0
	struct ke_msg *kemsg;
	uint8_t osc_en = REG_PL_RD(0x4000B1EC)&0x01;
1000a444:	4b13      	ldr	r3, [pc, #76]	; (1000a494 <at_ke_msg_send+0x54>)
1000a446:	681d      	ldr	r5, [r3, #0]
	ke_msg_send(param_ptr);
1000a448:	4b13      	ldr	r3, [pc, #76]	; (1000a498 <at_ke_msg_send+0x58>)
1000a44a:	681b      	ldr	r3, [r3, #0]
1000a44c:	4798      	blx	r3
	kemsg = ke_param2msg(param_ptr);

	if((kemsg != NULL) && (kemsg->dest_id != TASK_INTERNAL_APP)) {
1000a44e:	2c0c      	cmp	r4, #12
1000a450:	d019      	beq.n	1000a486 <at_ke_msg_send+0x46>
1000a452:	3c0c      	subs	r4, #12
1000a454:	88e3      	ldrh	r3, [r4, #6]
1000a456:	2b05      	cmp	r3, #5
1000a458:	d015      	beq.n	1000a486 <at_ke_msg_send+0x46>
		if(osc_en == 0)
1000a45a:	07eb      	lsls	r3, r5, #31
1000a45c:	d414      	bmi.n	1000a488 <at_ke_msg_send+0x48>
		{
			/* BLE Core is off, issue a wakeup request*/
			/* First, make sure PD4 is powered up and out of reset */
			pwr_enable_arm_wakeup(1<<1);
1000a45e:	4b0f      	ldr	r3, [pc, #60]	; (1000a49c <at_ke_msg_send+0x5c>)
1000a460:	681b      	ldr	r3, [r3, #0]
1000a462:	2002      	movs	r0, #2
1000a464:	4798      	blx	r3
			pwr_arm_wakeup_req();
1000a466:	4b0e      	ldr	r3, [pc, #56]	; (1000a4a0 <at_ke_msg_send+0x60>)
1000a468:	681b      	ldr	r3, [r3, #0]
1000a46a:	4798      	blx	r3
			while (pwr_wait_BLE_out_of_reset(3));
1000a46c:	4c0d      	ldr	r4, [pc, #52]	; (1000a4a4 <at_ke_msg_send+0x64>)
1000a46e:	2003      	movs	r0, #3
1000a470:	6823      	ldr	r3, [r4, #0]
1000a472:	4798      	blx	r3
1000a474:	2800      	cmp	r0, #0
1000a476:	d1fa      	bne.n	1000a46e <at_ke_msg_send+0x2e>
			pwr_disable_arm_wakeup(1<<1);
1000a478:	4b0b      	ldr	r3, [pc, #44]	; (1000a4a8 <at_ke_msg_send+0x68>)
1000a47a:	681b      	ldr	r3, [r3, #0]
1000a47c:	3002      	adds	r0, #2
1000a47e:	4798      	blx	r3
			REG_PL_WR(0x4000B020, 1);
1000a480:	2201      	movs	r2, #1
1000a482:	4b0a      	ldr	r3, [pc, #40]	; (1000a4ac <at_ke_msg_send+0x6c>)
1000a484:	601a      	str	r2, [r3, #0]
		{
			/*  */
			os_sem_up(gstrFwSem);
		}
	}
}
1000a486:	bd70      	pop	{r4, r5, r6, pc}
			os_sem_up(gstrFwSem);
1000a488:	4b09      	ldr	r3, [pc, #36]	; (1000a4b0 <at_ke_msg_send+0x70>)
1000a48a:	6818      	ldr	r0, [r3, #0]
1000a48c:	4b09      	ldr	r3, [pc, #36]	; (1000a4b4 <at_ke_msg_send+0x74>)
1000a48e:	681b      	ldr	r3, [r3, #0]
1000a490:	4798      	blx	r3
}
1000a492:	e7f8      	b.n	1000a486 <at_ke_msg_send+0x46>
1000a494:	4000b1ec 	.word	0x4000b1ec
1000a498:	10011de0 	.word	0x10011de0
1000a49c:	10011df8 	.word	0x10011df8
1000a4a0:	10011df0 	.word	0x10011df0
1000a4a4:	10011dfc 	.word	0x10011dfc
1000a4a8:	10011df4 	.word	0x10011df4
1000a4ac:	4000b020 	.word	0x4000b020
1000a4b0:	10011dd0 	.word	0x10011dd0
1000a4b4:	10011de8 	.word	0x10011de8

1000a4b8 <samb11_plf_resume_callback>:
	rwip_prevent_sleep_clear(APP_PREVENT_SLEEP);
	return status;
}

void samb11_plf_resume_callback(void)
{
1000a4b8:	b510      	push	{r4, lr}
	//spi_flash_turn_off();
	REG_PL_WR(LPMCU_CORTEX_MISC_REGS_LPMCU_CLOCK_ENABLES_0,default_samb11_clock_init[0]);
1000a4ba:	4b06      	ldr	r3, [pc, #24]	; (1000a4d4 <samb11_plf_resume_callback+0x1c>)
1000a4bc:	4a06      	ldr	r2, [pc, #24]	; (1000a4d8 <samb11_plf_resume_callback+0x20>)
1000a4be:	6819      	ldr	r1, [r3, #0]
1000a4c0:	6011      	str	r1, [r2, #0]
	REG_PL_WR(LPMCU_CORTEX_MISC_REGS_LPMCU_CLOCK_ENABLES_1,default_samb11_clock_init[1]);
1000a4c2:	685a      	ldr	r2, [r3, #4]
1000a4c4:	4b05      	ldr	r3, [pc, #20]	; (1000a4dc <samb11_plf_resume_callback+0x24>)
1000a4c6:	601a      	str	r2, [r3, #0]
	if(samb11_app_resume_cb != NULL)
1000a4c8:	4b05      	ldr	r3, [pc, #20]	; (1000a4e0 <samb11_plf_resume_callback+0x28>)
1000a4ca:	681b      	ldr	r3, [r3, #0]
1000a4cc:	2b00      	cmp	r3, #0
1000a4ce:	d000      	beq.n	1000a4d2 <samb11_plf_resume_callback+0x1a>
	{
		samb11_app_resume_cb();
1000a4d0:	4798      	blx	r3
	}
}
1000a4d2:	bd10      	pop	{r4, pc}
1000a4d4:	1001277c 	.word	0x1001277c
1000a4d8:	4000b00c 	.word	0x4000b00c
1000a4dc:	4000b010 	.word	0x4000b010
1000a4e0:	10012a58 	.word	0x10012a58

1000a4e4 <init_port_list>:
{
1000a4e4:	b570      	push	{r4, r5, r6, lr}
	memset(port_list,0,sizeof(port_list));
1000a4e6:	2232      	movs	r2, #50	; 0x32
1000a4e8:	2100      	movs	r1, #0
1000a4ea:	480d      	ldr	r0, [pc, #52]	; (1000a520 <init_port_list+0x3c>)
1000a4ec:	4b0d      	ldr	r3, [pc, #52]	; (1000a524 <init_port_list+0x40>)
1000a4ee:	4798      	blx	r3
1000a4f0:	2100      	movs	r1, #0
		port_list[i].bit.gpio_num = i;
1000a4f2:	480b      	ldr	r0, [pc, #44]	; (1000a520 <init_port_list+0x3c>)
		port_list[i].bit.available = 1;
1000a4f4:	2501      	movs	r5, #1
		port_list[i].bit.configured = 0;
1000a4f6:	2402      	movs	r4, #2
		port_list[i].bit.gpio_num = i;
1000a4f8:	004a      	lsls	r2, r1, #1
1000a4fa:	5411      	strb	r1, [r2, r0]
		port_list[i].bit.available = 1;
1000a4fc:	1882      	adds	r2, r0, r2
1000a4fe:	7853      	ldrb	r3, [r2, #1]
1000a500:	432b      	orrs	r3, r5
		port_list[i].bit.configured = 0;
1000a502:	b2db      	uxtb	r3, r3
1000a504:	43a3      	bics	r3, r4
1000a506:	7053      	strb	r3, [r2, #1]
1000a508:	3101      	adds	r1, #1
	for(i=0;i<(sizeof(port_list)/sizeof(port_list[0]));i++) {
1000a50a:	2919      	cmp	r1, #25
1000a50c:	d1f4      	bne.n	1000a4f8 <init_port_list+0x14>
	port_list[0].bit.available = 0;
1000a50e:	4b04      	ldr	r3, [pc, #16]	; (1000a520 <init_port_list+0x3c>)
1000a510:	785a      	ldrb	r2, [r3, #1]
1000a512:	3918      	subs	r1, #24
1000a514:	438a      	bics	r2, r1
1000a516:	705a      	strb	r2, [r3, #1]
	port_list[1].bit.available = 0;
1000a518:	78da      	ldrb	r2, [r3, #3]
1000a51a:	438a      	bics	r2, r1
1000a51c:	70da      	strb	r2, [r3, #3]
}
1000a51e:	bd70      	pop	{r4, r5, r6, pc}
1000a520:	10012798 	.word	0x10012798
1000a524:	1000eadd 	.word	0x1000eadd

1000a528 <init_clock>:
	regval = REG_PL_RD(LPMCU_CORTEX_MISC_REGS_LPMCU_CLOCK_ENABLES_0);
1000a528:	4a06      	ldr	r2, [pc, #24]	; (1000a544 <init_clock+0x1c>)
1000a52a:	6813      	ldr	r3, [r2, #0]
	regval &= ~(LPMCU_CORTEX_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART_1_IF_CLK_EN);
1000a52c:	4906      	ldr	r1, [pc, #24]	; (1000a548 <init_clock+0x20>)
1000a52e:	400b      	ands	r3, r1
	REG_PL_WR(LPMCU_CORTEX_MISC_REGS_LPMCU_CLOCK_ENABLES_0,regval);
1000a530:	6013      	str	r3, [r2, #0]
	default_samb11_clock_init[0] = regval;
1000a532:	4a06      	ldr	r2, [pc, #24]	; (1000a54c <init_clock+0x24>)
1000a534:	6013      	str	r3, [r2, #0]
	regval = REG_PL_RD(LPMCU_CORTEX_MISC_REGS_LPMCU_CLOCK_ENABLES_1);
1000a536:	4906      	ldr	r1, [pc, #24]	; (1000a550 <init_clock+0x28>)
1000a538:	680b      	ldr	r3, [r1, #0]
	regval &= ~(LPMCU_CORTEX_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SPI1_SCK_PHASE_INT_CLK_EN);
1000a53a:	4806      	ldr	r0, [pc, #24]	; (1000a554 <init_clock+0x2c>)
1000a53c:	4003      	ands	r3, r0
	REG_PL_WR(LPMCU_CORTEX_MISC_REGS_LPMCU_CLOCK_ENABLES_1,regval);
1000a53e:	600b      	str	r3, [r1, #0]
	default_samb11_clock_init[1] = regval;
1000a540:	6053      	str	r3, [r2, #4]
}
1000a542:	4770      	bx	lr
1000a544:	4000b00c 	.word	0x4000b00c
1000a548:	fffe0fd3 	.word	0xfffe0fd3
1000a54c:	1001277c 	.word	0x1001277c
1000a550:	4000b010 	.word	0x4000b010
1000a554:	ffffe7c0 	.word	0xffffe7c0

1000a558 <platform_driver_init>:
{
1000a558:	b5f0      	push	{r4, r5, r6, r7, lr}
1000a55a:	46d6      	mov	lr, sl
1000a55c:	464f      	mov	r7, r9
1000a55e:	4646      	mov	r6, r8
1000a560:	b5c0      	push	{r6, r7, lr}
	if((platform_initialized == 0) || (platform_initialized != 1)) {
1000a562:	4b4f      	ldr	r3, [pc, #316]	; (1000a6a0 <platform_driver_init+0x148>)
1000a564:	781b      	ldrb	r3, [r3, #0]
1000a566:	2b00      	cmp	r3, #0
1000a568:	d004      	beq.n	1000a574 <platform_driver_init+0x1c>
1000a56a:	4b4d      	ldr	r3, [pc, #308]	; (1000a6a0 <platform_driver_init+0x148>)
1000a56c:	781b      	ldrb	r3, [r3, #0]
1000a56e:	2b01      	cmp	r3, #1
1000a570:	d100      	bne.n	1000a574 <platform_driver_init+0x1c>
1000a572:	e090      	b.n	1000a696 <platform_driver_init+0x13e>
		init_port_list();
1000a574:	4b4b      	ldr	r3, [pc, #300]	; (1000a6a4 <platform_driver_init+0x14c>)
1000a576:	4798      	blx	r3
		init_clock();
1000a578:	4b4b      	ldr	r3, [pc, #300]	; (1000a6a8 <platform_driver_init+0x150>)
1000a57a:	4798      	blx	r3
		ble_stack_message_handler = NULL;
1000a57c:	2300      	movs	r3, #0
1000a57e:	4698      	mov	r8, r3
1000a580:	4b4a      	ldr	r3, [pc, #296]	; (1000a6ac <platform_driver_init+0x154>)
1000a582:	4642      	mov	r2, r8
1000a584:	601a      	str	r2, [r3, #0]

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
1000a586:	4c4a      	ldr	r4, [pc, #296]	; (1000a6b0 <platform_driver_init+0x158>)
1000a588:	2380      	movs	r3, #128	; 0x80
1000a58a:	2280      	movs	r2, #128	; 0x80
1000a58c:	0412      	lsls	r2, r2, #16
1000a58e:	4692      	mov	sl, r2
1000a590:	50e2      	str	r2, [r4, r3]
1000a592:	2280      	movs	r2, #128	; 0x80
1000a594:	0452      	lsls	r2, r2, #17
1000a596:	4691      	mov	r9, r2
1000a598:	50e2      	str	r2, [r4, r3]
		platform_register_isr = (uint8_t (*)(uint8_t ,void *))0x000007d7;
1000a59a:	4d46      	ldr	r5, [pc, #280]	; (1000a6b4 <platform_driver_init+0x15c>)
1000a59c:	4b46      	ldr	r3, [pc, #280]	; (1000a6b8 <platform_driver_init+0x160>)
1000a59e:	602b      	str	r3, [r5, #0]
		platform_unregister_isr = (uint8_t (*)(uint8_t ))0x000007bd;
1000a5a0:	4b46      	ldr	r3, [pc, #280]	; (1000a6bc <platform_driver_init+0x164>)
1000a5a2:	4a47      	ldr	r2, [pc, #284]	; (1000a6c0 <platform_driver_init+0x168>)
1000a5a4:	6013      	str	r3, [r2, #0]
		handle_ext_wakeup_isr = (void (*)(void))0x1bc51;
1000a5a6:	4947      	ldr	r1, [pc, #284]	; (1000a6c4 <platform_driver_init+0x16c>)
1000a5a8:	4a47      	ldr	r2, [pc, #284]	; (1000a6c8 <platform_driver_init+0x170>)
1000a5aa:	6011      	str	r1, [r2, #0]
		gapm_get_task_from_id = (ke_task_id_t (*)(ke_msg_id_t))(*((unsigned int *)0x100400bc));
1000a5ac:	4a47      	ldr	r2, [pc, #284]	; (1000a6cc <platform_driver_init+0x174>)
1000a5ae:	6811      	ldr	r1, [r2, #0]
1000a5b0:	4a47      	ldr	r2, [pc, #284]	; (1000a6d0 <platform_driver_init+0x178>)
1000a5b2:	6011      	str	r1, [r2, #0]
		gapm_get_id_from_task = (ke_task_id_t (*)(ke_msg_id_t))(*((unsigned int *)0x100400b8));
1000a5b4:	4a47      	ldr	r2, [pc, #284]	; (1000a6d4 <platform_driver_init+0x17c>)
1000a5b6:	6811      	ldr	r1, [r2, #0]
1000a5b8:	4a47      	ldr	r2, [pc, #284]	; (1000a6d8 <platform_driver_init+0x180>)
1000a5ba:	6011      	str	r1, [r2, #0]
		rwip_prevent_sleep_set = (void (*)(uint16_t))0x0001b99f;
1000a5bc:	4947      	ldr	r1, [pc, #284]	; (1000a6dc <platform_driver_init+0x184>)
1000a5be:	4a48      	ldr	r2, [pc, #288]	; (1000a6e0 <platform_driver_init+0x188>)
1000a5c0:	6011      	str	r1, [r2, #0]
		rwip_prevent_sleep_clear = (void (*)(uint16_t))0x0001b9db;
1000a5c2:	4948      	ldr	r1, [pc, #288]	; (1000a6e4 <platform_driver_init+0x18c>)
1000a5c4:	4a48      	ldr	r2, [pc, #288]	; (1000a6e8 <platform_driver_init+0x190>)
1000a5c6:	6011      	str	r1, [r2, #0]
		apps_resume_cb = (uint32_t *)0x1004003c;
1000a5c8:	4f48      	ldr	r7, [pc, #288]	; (1000a6ec <platform_driver_init+0x194>)
1000a5ca:	4a49      	ldr	r2, [pc, #292]	; (1000a6f0 <platform_driver_init+0x198>)
1000a5cc:	603a      	str	r2, [r7, #0]
		actualfreq = (uint32_t *)0x10041FC0; /* set to NULL for now as clock calibration is disabled for the time being */  /*(uint32_t *)0x10006bd8;*/
1000a5ce:	4949      	ldr	r1, [pc, #292]	; (1000a6f4 <platform_driver_init+0x19c>)
1000a5d0:	4a49      	ldr	r2, [pc, #292]	; (1000a6f8 <platform_driver_init+0x1a0>)
1000a5d2:	6011      	str	r1, [r2, #0]
		updateuartbr_fp = (void (*)())0x10041FC4;
1000a5d4:	4949      	ldr	r1, [pc, #292]	; (1000a6fc <platform_driver_init+0x1a4>)
1000a5d6:	4a4a      	ldr	r2, [pc, #296]	; (1000a700 <platform_driver_init+0x1a8>)
1000a5d8:	6011      	str	r1, [r2, #0]
		wakeup_source_active_cb = (uint32_t *)0x10041FD4;
1000a5da:	4e4a      	ldr	r6, [pc, #296]	; (1000a704 <platform_driver_init+0x1ac>)
1000a5dc:	4a4a      	ldr	r2, [pc, #296]	; (1000a708 <platform_driver_init+0x1b0>)
1000a5de:	6032      	str	r2, [r6, #0]
		wakeup_event_pending = (uint32_t *)0x10041FD8;
1000a5e0:	494a      	ldr	r1, [pc, #296]	; (1000a70c <platform_driver_init+0x1b4>)
1000a5e2:	4a4b      	ldr	r2, [pc, #300]	; (1000a710 <platform_driver_init+0x1b8>)
1000a5e4:	6011      	str	r1, [r2, #0]
		pwr_enable_arm_wakeup = (void (*)(uint32_t wakeup_domain))0x0001cbe9;
1000a5e6:	494b      	ldr	r1, [pc, #300]	; (1000a714 <platform_driver_init+0x1bc>)
1000a5e8:	4a4b      	ldr	r2, [pc, #300]	; (1000a718 <platform_driver_init+0x1c0>)
1000a5ea:	6011      	str	r1, [r2, #0]
		pwr_disable_arm_wakeup = (void (*)(uint32_t wakeup_domain))0x0001cd8f;
1000a5ec:	494b      	ldr	r1, [pc, #300]	; (1000a71c <platform_driver_init+0x1c4>)
1000a5ee:	4a4c      	ldr	r2, [pc, #304]	; (1000a720 <platform_driver_init+0x1c8>)
1000a5f0:	6011      	str	r1, [r2, #0]
		pwr_arm_wakeup_req = (int (*)(void))0x0001cea3;
1000a5f2:	494c      	ldr	r1, [pc, #304]	; (1000a724 <platform_driver_init+0x1cc>)
1000a5f4:	4a4c      	ldr	r2, [pc, #304]	; (1000a728 <platform_driver_init+0x1d0>)
1000a5f6:	6011      	str	r1, [r2, #0]
		pwr_wait_BLE_out_of_reset = (int (*)(uint32_t threshold))0x0001cbcf;
1000a5f8:	494c      	ldr	r1, [pc, #304]	; (1000a72c <platform_driver_init+0x1d4>)
1000a5fa:	4a4d      	ldr	r2, [pc, #308]	; (1000a730 <platform_driver_init+0x1d8>)
1000a5fc:	6011      	str	r1, [r2, #0]
		platform_unregister_isr(GPIO1_COMBINED_VECTOR_TABLE_INDEX);
1000a5fe:	2028      	movs	r0, #40	; 0x28
1000a600:	4798      	blx	r3
		platform_register_isr(GPIO1_COMBINED_VECTOR_TABLE_INDEX,(void*)PORT1_COMB_Handler);
1000a602:	494c      	ldr	r1, [pc, #304]	; (1000a734 <platform_driver_init+0x1dc>)
1000a604:	2028      	movs	r0, #40	; 0x28
1000a606:	682b      	ldr	r3, [r5, #0]
1000a608:	4798      	blx	r3
		platform_register_isr(GPIO0_COMBINED_VECTOR_TABLE_INDEX,(void*)gpio0_combined_isr_handler);
1000a60a:	682b      	ldr	r3, [r5, #0]
1000a60c:	494a      	ldr	r1, [pc, #296]	; (1000a738 <platform_driver_init+0x1e0>)
1000a60e:	2027      	movs	r0, #39	; 0x27
1000a610:	4798      	blx	r3
		ke_msg_send 	= (void (*)(void const *))(*((unsigned int *)0x100400e4));
1000a612:	4b4a      	ldr	r3, [pc, #296]	; (1000a73c <platform_driver_init+0x1e4>)
1000a614:	681a      	ldr	r2, [r3, #0]
1000a616:	4b4a      	ldr	r3, [pc, #296]	; (1000a740 <platform_driver_init+0x1e8>)
1000a618:	601a      	str	r2, [r3, #0]
		ke_msg_alloc 	= (void* (*)(ke_msg_id_t const id, ke_task_id_t const dest_id,
1000a61a:	4a4a      	ldr	r2, [pc, #296]	; (1000a744 <platform_driver_init+0x1ec>)
1000a61c:	4b4a      	ldr	r3, [pc, #296]	; (1000a748 <platform_driver_init+0x1f0>)
1000a61e:	601a      	str	r2, [r3, #0]
		os_sem_up 		= (int (*)(void*))0x0001dbdd;
1000a620:	4a4a      	ldr	r2, [pc, #296]	; (1000a74c <platform_driver_init+0x1f4>)
1000a622:	4b4b      	ldr	r3, [pc, #300]	; (1000a750 <platform_driver_init+0x1f8>)
1000a624:	601a      	str	r2, [r3, #0]
		os_sem_down		= (int (*)(void*))0x0001dc5b;
1000a626:	4a4b      	ldr	r2, [pc, #300]	; (1000a754 <platform_driver_init+0x1fc>)
1000a628:	4b4b      	ldr	r3, [pc, #300]	; (1000a758 <platform_driver_init+0x200>)
1000a62a:	601a      	str	r2, [r3, #0]
		gstrFwSem 		= (void*)0x100405ec;
1000a62c:	4a4b      	ldr	r2, [pc, #300]	; (1000a75c <platform_driver_init+0x204>)
1000a62e:	4b4c      	ldr	r3, [pc, #304]	; (1000a760 <platform_driver_init+0x208>)
1000a630:	601a      	str	r2, [r3, #0]
		NMI_MsgQueueRecv = (int(*)(void*, void ** ))0x0001d5e3;
1000a632:	4a4c      	ldr	r2, [pc, #304]	; (1000a764 <platform_driver_init+0x20c>)
1000a634:	4b4c      	ldr	r3, [pc, #304]	; (1000a768 <platform_driver_init+0x210>)
1000a636:	601a      	str	r2, [r3, #0]
		InternalAppMsgQHandle = (void*)0x10040c20;
1000a638:	4a4c      	ldr	r2, [pc, #304]	; (1000a76c <platform_driver_init+0x214>)
1000a63a:	4b4d      	ldr	r3, [pc, #308]	; (1000a770 <platform_driver_init+0x218>)
1000a63c:	601a      	str	r2, [r3, #0]
		ke_free = (void(*)(void*))0x00019f09;
1000a63e:	4a4d      	ldr	r2, [pc, #308]	; (1000a774 <platform_driver_init+0x21c>)
1000a640:	4b4d      	ldr	r3, [pc, #308]	; (1000a778 <platform_driver_init+0x220>)
1000a642:	601a      	str	r2, [r3, #0]
		memset(rx_buffer,0,sizeof(rx_buffer));
1000a644:	22a0      	movs	r2, #160	; 0xa0
1000a646:	0092      	lsls	r2, r2, #2
1000a648:	2100      	movs	r1, #0
1000a64a:	484c      	ldr	r0, [pc, #304]	; (1000a77c <platform_driver_init+0x224>)
1000a64c:	4b4c      	ldr	r3, [pc, #304]	; (1000a780 <platform_driver_init+0x228>)
1000a64e:	4798      	blx	r3
		plf_event_buff_index = PLF_EVENT_BUFFER_START_INDEX;
1000a650:	2280      	movs	r2, #128	; 0x80
1000a652:	0092      	lsls	r2, r2, #2
1000a654:	4b4b      	ldr	r3, [pc, #300]	; (1000a784 <platform_driver_init+0x22c>)
1000a656:	801a      	strh	r2, [r3, #0]
		platform_event_init();
1000a658:	4b4b      	ldr	r3, [pc, #300]	; (1000a788 <platform_driver_init+0x230>)
1000a65a:	4798      	blx	r3
  NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
1000a65c:	4653      	mov	r3, sl
1000a65e:	6023      	str	r3, [r4, #0]
1000a660:	464b      	mov	r3, r9
1000a662:	6023      	str	r3, [r4, #0]
		samb11_app_resume_cb = NULL;
1000a664:	4b49      	ldr	r3, [pc, #292]	; (1000a78c <platform_driver_init+0x234>)
1000a666:	4642      	mov	r2, r8
1000a668:	601a      	str	r2, [r3, #0]
		*apps_resume_cb = (uint32_t)((resume_callback)samb11_plf_resume_callback);
1000a66a:	683b      	ldr	r3, [r7, #0]
1000a66c:	4a48      	ldr	r2, [pc, #288]	; (1000a790 <platform_driver_init+0x238>)
1000a66e:	601a      	str	r2, [r3, #0]
		*wakeup_source_active_cb = (uint32_t)((wakeup_source_active_callback)wakeup_active_event_callback);
1000a670:	6833      	ldr	r3, [r6, #0]
1000a672:	4a48      	ldr	r2, [pc, #288]	; (1000a794 <platform_driver_init+0x23c>)
1000a674:	601a      	str	r2, [r3, #0]
		wakeup_int_unregister_callback(0);
1000a676:	2000      	movs	r0, #0
1000a678:	4c47      	ldr	r4, [pc, #284]	; (1000a798 <platform_driver_init+0x240>)
1000a67a:	47a0      	blx	r4
		wakeup_int_unregister_callback(1);
1000a67c:	2001      	movs	r0, #1
1000a67e:	47a0      	blx	r4
		wakeup_int_unregister_callback(2);
1000a680:	2002      	movs	r0, #2
1000a682:	47a0      	blx	r4
		platform_initialized = 1;
1000a684:	2201      	movs	r2, #1
1000a686:	4b06      	ldr	r3, [pc, #24]	; (1000a6a0 <platform_driver_init+0x148>)
1000a688:	701a      	strb	r2, [r3, #0]
		status = STATUS_SUCCESS;
1000a68a:	2000      	movs	r0, #0
}
1000a68c:	bc1c      	pop	{r2, r3, r4}
1000a68e:	4690      	mov	r8, r2
1000a690:	4699      	mov	r9, r3
1000a692:	46a2      	mov	sl, r4
1000a694:	bdf0      	pop	{r4, r5, r6, r7, pc}
		platform_initialized = 1;
1000a696:	2201      	movs	r2, #1
1000a698:	4b01      	ldr	r3, [pc, #4]	; (1000a6a0 <platform_driver_init+0x148>)
1000a69a:	701a      	strb	r2, [r3, #0]
		status = STATUS_ALREADY_INITIALIZED;
1000a69c:	2001      	movs	r0, #1
1000a69e:	e7f5      	b.n	1000a68c <platform_driver_init+0x134>
1000a6a0:	10011dec 	.word	0x10011dec
1000a6a4:	1000a4e5 	.word	0x1000a4e5
1000a6a8:	1000a529 	.word	0x1000a529
1000a6ac:	10011dc4 	.word	0x10011dc4
1000a6b0:	e000e100 	.word	0xe000e100
1000a6b4:	10012a4c 	.word	0x10012a4c
1000a6b8:	000007d7 	.word	0x000007d7
1000a6bc:	000007bd 	.word	0x000007bd
1000a6c0:	10012788 	.word	0x10012788
1000a6c4:	0001bc51 	.word	0x0001bc51
1000a6c8:	10012a50 	.word	0x10012a50
1000a6cc:	100400bc 	.word	0x100400bc
1000a6d0:	10011dcc 	.word	0x10011dcc
1000a6d4:	100400b8 	.word	0x100400b8
1000a6d8:	10011dc8 	.word	0x10011dc8
1000a6dc:	0001b99f 	.word	0x0001b99f
1000a6e0:	10012784 	.word	0x10012784
1000a6e4:	0001b9db 	.word	0x0001b9db
1000a6e8:	10012790 	.word	0x10012790
1000a6ec:	10012a60 	.word	0x10012a60
1000a6f0:	1004003c 	.word	0x1004003c
1000a6f4:	10041fc0 	.word	0x10041fc0
1000a6f8:	10012794 	.word	0x10012794
1000a6fc:	10041fc4 	.word	0x10041fc4
1000a700:	10012a5c 	.word	0x10012a5c
1000a704:	10012a54 	.word	0x10012a54
1000a708:	10041fd4 	.word	0x10041fd4
1000a70c:	10041fd8 	.word	0x10041fd8
1000a710:	1001278c 	.word	0x1001278c
1000a714:	0001cbe9 	.word	0x0001cbe9
1000a718:	10011df8 	.word	0x10011df8
1000a71c:	0001cd8f 	.word	0x0001cd8f
1000a720:	10011df4 	.word	0x10011df4
1000a724:	0001cea3 	.word	0x0001cea3
1000a728:	10011df0 	.word	0x10011df0
1000a72c:	0001cbcf 	.word	0x0001cbcf
1000a730:	10011dfc 	.word	0x10011dfc
1000a734:	1000ab7d 	.word	0x1000ab7d
1000a738:	1000ab0d 	.word	0x1000ab0d
1000a73c:	100400e4 	.word	0x100400e4
1000a740:	10011de0 	.word	0x10011de0
1000a744:	00019fe9 	.word	0x00019fe9
1000a748:	10011dd8 	.word	0x10011dd8
1000a74c:	0001dbdd 	.word	0x0001dbdd
1000a750:	10011de8 	.word	0x10011de8
1000a754:	0001dc5b 	.word	0x0001dc5b
1000a758:	10011de4 	.word	0x10011de4
1000a75c:	100405ec 	.word	0x100405ec
1000a760:	10011dd0 	.word	0x10011dd0
1000a764:	0001d5e3 	.word	0x0001d5e3
1000a768:	10011dc0 	.word	0x10011dc0
1000a76c:	10040c20 	.word	0x10040c20
1000a770:	10011dbc 	.word	0x10011dbc
1000a774:	00019f09 	.word	0x00019f09
1000a778:	10011dd4 	.word	0x10011dd4
1000a77c:	100127cc 	.word	0x100127cc
1000a780:	1000eadd 	.word	0x1000eadd
1000a784:	10012a64 	.word	0x10012a64
1000a788:	1000a411 	.word	0x1000a411
1000a78c:	10012a58 	.word	0x10012a58
1000a790:	1000a4b9 	.word	0x1000a4b9
1000a794:	1000abdd 	.word	0x1000abdd
1000a798:	1000abc1 	.word	0x1000abc1

1000a79c <platform_register_ble_msg_handler>:
	if(platform_initialized == 1) {
1000a79c:	4b05      	ldr	r3, [pc, #20]	; (1000a7b4 <platform_register_ble_msg_handler+0x18>)
1000a79e:	781a      	ldrb	r2, [r3, #0]
		status = STATUS_NOT_INITIALIZED;
1000a7a0:	2305      	movs	r3, #5
	if(platform_initialized == 1) {
1000a7a2:	2a01      	cmp	r2, #1
1000a7a4:	d001      	beq.n	1000a7aa <platform_register_ble_msg_handler+0xe>
}
1000a7a6:	0018      	movs	r0, r3
1000a7a8:	4770      	bx	lr
		ble_stack_message_handler = fp;
1000a7aa:	4b03      	ldr	r3, [pc, #12]	; (1000a7b8 <platform_register_ble_msg_handler+0x1c>)
1000a7ac:	6018      	str	r0, [r3, #0]
		status = STATUS_SUCCESS;
1000a7ae:	2300      	movs	r3, #0
1000a7b0:	e7f9      	b.n	1000a7a6 <platform_register_ble_msg_handler+0xa>
1000a7b2:	46c0      	nop			; (mov r8, r8)
1000a7b4:	10011dec 	.word	0x10011dec
1000a7b8:	10011dc4 	.word	0x10011dc4

1000a7bc <platform_interface_send>:
{
1000a7bc:	b570      	push	{r4, r5, r6, lr}
1000a7be:	0004      	movs	r4, r0
	if(gapm_get_task_from_id != NULL)
1000a7c0:	4b0e      	ldr	r3, [pc, #56]	; (1000a7fc <platform_interface_send+0x40>)
1000a7c2:	681b      	ldr	r3, [r3, #0]
1000a7c4:	2b00      	cmp	r3, #0
1000a7c6:	d002      	beq.n	1000a7ce <platform_interface_send+0x12>
		p_msg_hdr->dest_id = gapm_get_task_from_id(dest_id);
1000a7c8:	8840      	ldrh	r0, [r0, #2]
1000a7ca:	4798      	blx	r3
1000a7cc:	8060      	strh	r0, [r4, #2]
	params = ke_msg_alloc(p_msg_hdr->id, p_msg_hdr->dest_id, p_msg_hdr->src_id, p_msg_hdr->param_len);
1000a7ce:	88e3      	ldrh	r3, [r4, #6]
1000a7d0:	88a2      	ldrh	r2, [r4, #4]
1000a7d2:	8861      	ldrh	r1, [r4, #2]
1000a7d4:	8820      	ldrh	r0, [r4, #0]
1000a7d6:	4d0a      	ldr	r5, [pc, #40]	; (1000a800 <platform_interface_send+0x44>)
1000a7d8:	682d      	ldr	r5, [r5, #0]
1000a7da:	47a8      	blx	r5
1000a7dc:	0005      	movs	r5, r0
	if (p_msg_hdr->param_len == 0)
1000a7de:	88e2      	ldrh	r2, [r4, #6]
1000a7e0:	2a00      	cmp	r2, #0
1000a7e2:	d007      	beq.n	1000a7f4 <platform_interface_send+0x38>
		memcpy(params,&(data[KE_MSG_HDR_LENGTH]),p_msg_hdr->param_len);
1000a7e4:	0021      	movs	r1, r4
1000a7e6:	3108      	adds	r1, #8
1000a7e8:	4b06      	ldr	r3, [pc, #24]	; (1000a804 <platform_interface_send+0x48>)
1000a7ea:	4798      	blx	r3
		at_ke_msg_send(params);
1000a7ec:	0028      	movs	r0, r5
1000a7ee:	4b06      	ldr	r3, [pc, #24]	; (1000a808 <platform_interface_send+0x4c>)
1000a7f0:	4798      	blx	r3
}
1000a7f2:	bd70      	pop	{r4, r5, r6, pc}
		at_ke_msg_send(params);
1000a7f4:	4b04      	ldr	r3, [pc, #16]	; (1000a808 <platform_interface_send+0x4c>)
1000a7f6:	4798      	blx	r3
1000a7f8:	e7fb      	b.n	1000a7f2 <platform_interface_send+0x36>
1000a7fa:	46c0      	nop			; (mov r8, r8)
1000a7fc:	10011dcc 	.word	0x10011dcc
1000a800:	10011dd8 	.word	0x10011dd8
1000a804:	1000eacb 	.word	0x1000eacb
1000a808:	1000a441 	.word	0x1000a441

1000a80c <platform_event_wait>:
{
1000a80c:	b5f0      	push	{r4, r5, r6, r7, lr}
1000a80e:	46de      	mov	lr, fp
1000a810:	4657      	mov	r7, sl
1000a812:	464e      	mov	r6, r9
1000a814:	4645      	mov	r5, r8
1000a816:	b5e0      	push	{r5, r6, r7, lr}
1000a818:	b087      	sub	sp, #28
	if(((uint32_t)-1 != timeout) && ((uint32_t)0 < timeout))
1000a81a:	1e44      	subs	r4, r0, #1
	uint8_t bEventTimeoutFlag = 0;
1000a81c:	2300      	movs	r3, #0
1000a81e:	4699      	mov	r9, r3
	if(((uint32_t)-1 != timeout) && ((uint32_t)0 < timeout))
1000a820:	1ce3      	adds	r3, r4, #3
1000a822:	d904      	bls.n	1000a82e <platform_event_wait+0x22>
		bEventTimeoutFlag = 1;
1000a824:	2400      	movs	r4, #0
1000a826:	2500      	movs	r5, #0
		if(NMI_MsgQueueRecv(InternalAppMsgQHandle, (void**)&rcv_msg) == STATUS_SUCCESS)
1000a828:	4f83      	ldr	r7, [pc, #524]	; (1000aa38 <platform_event_wait+0x22c>)
1000a82a:	4e84      	ldr	r6, [pc, #528]	; (1000aa3c <platform_event_wait+0x230>)
1000a82c:	e066      	b.n	1000a8fc <platform_event_wait+0xf0>
	uint8_t msg[8+5] = {0};
1000a82e:	220d      	movs	r2, #13
1000a830:	2100      	movs	r1, #0
1000a832:	a802      	add	r0, sp, #8
1000a834:	4b82      	ldr	r3, [pc, #520]	; (1000aa40 <platform_event_wait+0x234>)
1000a836:	4798      	blx	r3
	msg[u16TxLen++] = ((DBG_KE_TIMER_REQ) & 0x00FF );
1000a838:	2333      	movs	r3, #51	; 0x33
1000a83a:	aa02      	add	r2, sp, #8
1000a83c:	7013      	strb	r3, [r2, #0]
	msg[u16TxLen++] = (((DBG_KE_TIMER_REQ)>>8) & 0x00FF );
1000a83e:	3b30      	subs	r3, #48	; 0x30
1000a840:	7053      	strb	r3, [r2, #1]
	msg[u16TxLen++] = ((TASK_DBG) & 0x00FF );
1000a842:	7093      	strb	r3, [r2, #2]
	msg[u16TxLen++] = ((TASK_INTERNAL_APP) & 0x00FF );
1000a844:	3302      	adds	r3, #2
1000a846:	7113      	strb	r3, [r2, #4]
	msg[u16TxLen++] = ((5) & 0x00FF );
1000a848:	7193      	strb	r3, [r2, #6]
	msg[u16TxLen++] = (uint8_t)((timeout) & 0x00FF );
1000a84a:	7214      	strb	r4, [r2, #8]
	msg[u16TxLen++] = (uint8_t)(( (timeout) >> 8) & 0x00FF) ;
1000a84c:	0a23      	lsrs	r3, r4, #8
1000a84e:	7253      	strb	r3, [r2, #9]
	msg[u16TxLen++] = (uint8_t)(( (timeout) >> 16) & 0x00FF);
1000a850:	0c23      	lsrs	r3, r4, #16
1000a852:	7293      	strb	r3, [r2, #10]
	msg[u16TxLen++] = (uint8_t)(( (timeout) >> 24) & 0x00FF);
1000a854:	0e24      	lsrs	r4, r4, #24
1000a856:	72d4      	strb	r4, [r2, #11]
	msg[u16TxLen++] = ((1) & 0x00FF );
1000a858:	2301      	movs	r3, #1
1000a85a:	7313      	strb	r3, [r2, #12]
	platform_interface_send(msg, u16TxLen);
1000a85c:	210d      	movs	r1, #13
1000a85e:	0010      	movs	r0, r2
1000a860:	4b78      	ldr	r3, [pc, #480]	; (1000aa44 <platform_event_wait+0x238>)
1000a862:	4798      	blx	r3
		bEventTimeoutFlag = 1;
1000a864:	2301      	movs	r3, #1
1000a866:	4699      	mov	r9, r3
1000a868:	e7dc      	b.n	1000a824 <platform_event_wait+0x18>
			uint16_t msg_id = rcv_msg->id;
1000a86a:	4b77      	ldr	r3, [pc, #476]	; (1000aa48 <platform_event_wait+0x23c>)
1000a86c:	681c      	ldr	r4, [r3, #0]
1000a86e:	88a3      	ldrh	r3, [r4, #4]
1000a870:	469a      	mov	sl, r3
			if((rcv_msg->id != DBG_KE_TIMER_RESP) && (bEventTimeoutFlag))
1000a872:	23cd      	movs	r3, #205	; 0xcd
1000a874:	009b      	lsls	r3, r3, #2
1000a876:	459a      	cmp	sl, r3
1000a878:	d100      	bne.n	1000a87c <platform_event_wait+0x70>
1000a87a:	e0cf      	b.n	1000aa1c <platform_event_wait+0x210>
			uint16_t src_id = rcv_msg->src_id;
1000a87c:	8923      	ldrh	r3, [r4, #8]
1000a87e:	469b      	mov	fp, r3
			uint16_t len = rcv_msg->param_len;
1000a880:	8963      	ldrh	r3, [r4, #10]
1000a882:	4698      	mov	r8, r3
			if((rcv_msg->id != DBG_KE_TIMER_RESP) && (bEventTimeoutFlag))
1000a884:	464b      	mov	r3, r9
1000a886:	2b00      	cmp	r3, #0
1000a888:	d140      	bne.n	1000a90c <platform_event_wait+0x100>
			if(msg_id == PERIPHERAL_INTERRUPT_EVENT)
1000a88a:	23a0      	movs	r3, #160	; 0xa0
1000a88c:	00db      	lsls	r3, r3, #3
1000a88e:	459a      	cmp	sl, r3
1000a890:	d04f      	beq.n	1000a932 <platform_event_wait+0x126>
				if(ble_stack_message_handler) {
1000a892:	4b6e      	ldr	r3, [pc, #440]	; (1000aa4c <platform_event_wait+0x240>)
1000a894:	681b      	ldr	r3, [r3, #0]
1000a896:	2b00      	cmp	r3, #0
1000a898:	d072      	beq.n	1000a980 <platform_event_wait+0x174>
					if(rcv_msg->id == DBG_KE_TIMER_RESP)
1000a89a:	4b6b      	ldr	r3, [pc, #428]	; (1000aa48 <platform_event_wait+0x23c>)
1000a89c:	681a      	ldr	r2, [r3, #0]
1000a89e:	8893      	ldrh	r3, [r2, #4]
1000a8a0:	21cd      	movs	r1, #205	; 0xcd
1000a8a2:	0089      	lsls	r1, r1, #2
1000a8a4:	428b      	cmp	r3, r1
1000a8a6:	d100      	bne.n	1000a8aa <platform_event_wait+0x9e>
1000a8a8:	e0be      	b.n	1000aa28 <platform_event_wait+0x21c>
						ke_msg_hdr = (struct ke_msghdr *)((void *)(rx_buffer+BLE_EVENT_BUFFER_START_INDEX));
1000a8aa:	4c69      	ldr	r4, [pc, #420]	; (1000aa50 <platform_event_wait+0x244>)
1000a8ac:	4d69      	ldr	r5, [pc, #420]	; (1000aa54 <platform_event_wait+0x248>)
1000a8ae:	6025      	str	r5, [r4, #0]
						ke_msg_hdr->id = rcv_msg->id;
1000a8b0:	702b      	strb	r3, [r5, #0]
1000a8b2:	0a1b      	lsrs	r3, r3, #8
1000a8b4:	706b      	strb	r3, [r5, #1]
					ke_msg_hdr->src_id = gapm_get_id_from_task(rcv_msg->src_id);
1000a8b6:	8910      	ldrh	r0, [r2, #8]
1000a8b8:	4b67      	ldr	r3, [pc, #412]	; (1000aa58 <platform_event_wait+0x24c>)
1000a8ba:	681b      	ldr	r3, [r3, #0]
1000a8bc:	4798      	blx	r3
1000a8be:	7128      	strb	r0, [r5, #4]
1000a8c0:	0a00      	lsrs	r0, r0, #8
1000a8c2:	7168      	strb	r0, [r5, #5]
						ke_msg_hdr->dest_id = rcv_msg->dest_id;
1000a8c4:	6820      	ldr	r0, [r4, #0]
1000a8c6:	4b60      	ldr	r3, [pc, #384]	; (1000aa48 <platform_event_wait+0x23c>)
1000a8c8:	681a      	ldr	r2, [r3, #0]
1000a8ca:	88d2      	ldrh	r2, [r2, #6]
1000a8cc:	8042      	strh	r2, [r0, #2]
						ke_msg_hdr->param_len = rcv_msg->param_len;
1000a8ce:	681d      	ldr	r5, [r3, #0]
1000a8d0:	896b      	ldrh	r3, [r5, #10]
1000a8d2:	80c3      	strh	r3, [r0, #6]
						ke_msg_hdr++;
1000a8d4:	3008      	adds	r0, #8
1000a8d6:	6020      	str	r0, [r4, #0]
						if(rcv_msg->param_len > 0) {
1000a8d8:	896a      	ldrh	r2, [r5, #10]
1000a8da:	2a00      	cmp	r2, #0
1000a8dc:	d14b      	bne.n	1000a976 <platform_event_wait+0x16a>
						ble_stack_message_handler(rx_buffer,(rcv_msg->param_len + sizeof(struct ke_msghdr)));
1000a8de:	8969      	ldrh	r1, [r5, #10]
1000a8e0:	3108      	adds	r1, #8
1000a8e2:	4b5a      	ldr	r3, [pc, #360]	; (1000aa4c <platform_event_wait+0x240>)
1000a8e4:	681b      	ldr	r3, [r3, #0]
1000a8e6:	485b      	ldr	r0, [pc, #364]	; (1000aa54 <platform_event_wait+0x248>)
1000a8e8:	4798      	blx	r3
			bLoopAgain = 0;
1000a8ea:	2400      	movs	r4, #0
						status = STATUS_RECEIVED_BLE_MSG;
1000a8ec:	2503      	movs	r5, #3
			ke_free(rcv_msg);
1000a8ee:	4b56      	ldr	r3, [pc, #344]	; (1000aa48 <platform_event_wait+0x23c>)
1000a8f0:	6818      	ldr	r0, [r3, #0]
1000a8f2:	4b5a      	ldr	r3, [pc, #360]	; (1000aa5c <platform_event_wait+0x250>)
1000a8f4:	681b      	ldr	r3, [r3, #0]
1000a8f6:	4798      	blx	r3
	}while(bLoopAgain);
1000a8f8:	2c00      	cmp	r4, #0
1000a8fa:	d043      	beq.n	1000a984 <platform_event_wait+0x178>
		if(NMI_MsgQueueRecv(InternalAppMsgQHandle, (void**)&rcv_msg) == STATUS_SUCCESS)
1000a8fc:	4952      	ldr	r1, [pc, #328]	; (1000aa48 <platform_event_wait+0x23c>)
1000a8fe:	6838      	ldr	r0, [r7, #0]
1000a900:	6833      	ldr	r3, [r6, #0]
1000a902:	4798      	blx	r3
1000a904:	2800      	cmp	r0, #0
1000a906:	d0b0      	beq.n	1000a86a <platform_event_wait+0x5e>
			status = STATUS_FAILURE;
1000a908:	2507      	movs	r5, #7
1000a90a:	e7f5      	b.n	1000a8f8 <platform_event_wait+0xec>
	uint8_t msg[8+5] = {0};
1000a90c:	220d      	movs	r2, #13
1000a90e:	2100      	movs	r1, #0
1000a910:	a802      	add	r0, sp, #8
1000a912:	4b4b      	ldr	r3, [pc, #300]	; (1000aa40 <platform_event_wait+0x234>)
1000a914:	4798      	blx	r3
	msg[u16TxLen++] = ((DBG_KE_TIMER_REQ) & 0x00FF );
1000a916:	2333      	movs	r3, #51	; 0x33
1000a918:	aa02      	add	r2, sp, #8
1000a91a:	7013      	strb	r3, [r2, #0]
	msg[u16TxLen++] = (((DBG_KE_TIMER_REQ)>>8) & 0x00FF );
1000a91c:	3b30      	subs	r3, #48	; 0x30
1000a91e:	7053      	strb	r3, [r2, #1]
	msg[u16TxLen++] = ((TASK_DBG) & 0x00FF );
1000a920:	7093      	strb	r3, [r2, #2]
	msg[u16TxLen++] = ((TASK_INTERNAL_APP) & 0x00FF );
1000a922:	3302      	adds	r3, #2
1000a924:	7113      	strb	r3, [r2, #4]
	msg[u16TxLen++] = ((5) & 0x00FF );
1000a926:	7193      	strb	r3, [r2, #6]
	platform_interface_send(msg, u16TxLen);
1000a928:	210d      	movs	r1, #13
1000a92a:	0010      	movs	r0, r2
1000a92c:	4b45      	ldr	r3, [pc, #276]	; (1000aa44 <platform_event_wait+0x238>)
1000a92e:	4798      	blx	r3
1000a930:	e7ab      	b.n	1000a88a <platform_event_wait+0x7e>
				if(plf_event_buff_index+len > MAX_EVT_BUFF_LEN)
1000a932:	4b4b      	ldr	r3, [pc, #300]	; (1000aa60 <platform_event_wait+0x254>)
1000a934:	881b      	ldrh	r3, [r3, #0]
1000a936:	4443      	add	r3, r8
1000a938:	22a0      	movs	r2, #160	; 0xa0
1000a93a:	0092      	lsls	r2, r2, #2
1000a93c:	4293      	cmp	r3, r2
1000a93e:	dd02      	ble.n	1000a946 <platform_event_wait+0x13a>
					plf_event_buff_index = PLF_EVENT_BUFFER_START_INDEX;
1000a940:	3a80      	subs	r2, #128	; 0x80
1000a942:	4b47      	ldr	r3, [pc, #284]	; (1000aa60 <platform_event_wait+0x254>)
1000a944:	801a      	strh	r2, [r3, #0]
				memcpy(&rx_buffer[plf_event_buff_index],data,len);
1000a946:	4b46      	ldr	r3, [pc, #280]	; (1000aa60 <platform_event_wait+0x254>)
1000a948:	469a      	mov	sl, r3
1000a94a:	881d      	ldrh	r5, [r3, #0]
1000a94c:	4b41      	ldr	r3, [pc, #260]	; (1000aa54 <platform_event_wait+0x248>)
1000a94e:	18ed      	adds	r5, r5, r3
1000a950:	0021      	movs	r1, r4
1000a952:	310c      	adds	r1, #12
1000a954:	4642      	mov	r2, r8
1000a956:	0028      	movs	r0, r5
1000a958:	4b42      	ldr	r3, [pc, #264]	; (1000aa64 <platform_event_wait+0x258>)
1000a95a:	4798      	blx	r3
				platform_event_post(src_id,&rx_buffer[plf_event_buff_index],len);
1000a95c:	4642      	mov	r2, r8
1000a95e:	0029      	movs	r1, r5
1000a960:	4658      	mov	r0, fp
1000a962:	4b41      	ldr	r3, [pc, #260]	; (1000aa68 <platform_event_wait+0x25c>)
1000a964:	4798      	blx	r3
				plf_event_buff_index += len;
1000a966:	4653      	mov	r3, sl
1000a968:	881b      	ldrh	r3, [r3, #0]
1000a96a:	4443      	add	r3, r8
1000a96c:	4652      	mov	r2, sl
1000a96e:	8013      	strh	r3, [r2, #0]
			bLoopAgain = 0;
1000a970:	2400      	movs	r4, #0
				status = STATUS_RECEIVED_PLF_EVENT_MSG;
1000a972:	2502      	movs	r5, #2
1000a974:	e7bb      	b.n	1000a8ee <platform_event_wait+0xe2>
							memcpy((void *)ke_msg_hdr,rcv_msg->param,rcv_msg->param_len);
1000a976:	0029      	movs	r1, r5
1000a978:	310c      	adds	r1, #12
1000a97a:	4b3a      	ldr	r3, [pc, #232]	; (1000aa64 <platform_event_wait+0x258>)
1000a97c:	4798      	blx	r3
1000a97e:	e7ae      	b.n	1000a8de <platform_event_wait+0xd2>
			bLoopAgain = 0;
1000a980:	2400      	movs	r4, #0
1000a982:	e7b4      	b.n	1000a8ee <platform_event_wait+0xe2>
	if(bEventTimeoutFlag)
1000a984:	464b      	mov	r3, r9
1000a986:	2b00      	cmp	r3, #0
1000a988:	d107      	bne.n	1000a99a <platform_event_wait+0x18e>
}
1000a98a:	0028      	movs	r0, r5
1000a98c:	b007      	add	sp, #28
1000a98e:	bc3c      	pop	{r2, r3, r4, r5}
1000a990:	4690      	mov	r8, r2
1000a992:	4699      	mov	r9, r3
1000a994:	46a2      	mov	sl, r4
1000a996:	46ab      	mov	fp, r5
1000a998:	bdf0      	pop	{r4, r5, r6, r7, pc}
		NMI_MsgQueueDestroyOnKeID(InternalAppMsgQHandle, DBG_KE_TIMER_RESP);
1000a99a:	4b27      	ldr	r3, [pc, #156]	; (1000aa38 <platform_event_wait+0x22c>)
1000a99c:	681e      	ldr	r6, [r3, #0]
	if((NULL == pHandle) && (NULL == pHandle->pstrMessageList))
1000a99e:	2e00      	cmp	r6, #0
1000a9a0:	d013      	beq.n	1000a9ca <platform_event_wait+0x1be>
	current = pHandle->pstrMessageList;
1000a9a2:	6a34      	ldr	r4, [r6, #32]
	os_sem_down(&pHandle->strCriticalSection);
1000a9a4:	2314      	movs	r3, #20
1000a9a6:	469c      	mov	ip, r3
1000a9a8:	44b4      	add	ip, r6
1000a9aa:	4663      	mov	r3, ip
1000a9ac:	4660      	mov	r0, ip
1000a9ae:	9300      	str	r3, [sp, #0]
1000a9b0:	4b2e      	ldr	r3, [pc, #184]	; (1000aa6c <platform_event_wait+0x260>)
1000a9b2:	681b      	ldr	r3, [r3, #0]
1000a9b4:	4798      	blx	r3
	while(NULL != current)
1000a9b6:	2c00      	cmp	r4, #0
1000a9b8:	d02b      	beq.n	1000aa12 <platform_event_wait+0x206>
			status = STATUS_FAILURE;
1000a9ba:	2700      	movs	r7, #0
		if(u16KeMsgId == ((struct ke_msg*)current->pvBuffer)->id)
1000a9bc:	23cd      	movs	r3, #205	; 0xcd
1000a9be:	009b      	lsls	r3, r3, #2
1000a9c0:	4698      	mov	r8, r3
				ke_free(current);
1000a9c2:	4b26      	ldr	r3, [pc, #152]	; (1000aa5c <platform_event_wait+0x250>)
1000a9c4:	469a      	mov	sl, r3
1000a9c6:	0020      	movs	r0, r4
1000a9c8:	e014      	b.n	1000a9f4 <platform_event_wait+0x1e8>
	if((NULL == pHandle) && (NULL == pHandle->pstrMessageList))
1000a9ca:	2300      	movs	r3, #0
1000a9cc:	6a1c      	ldr	r4, [r3, #32]
1000a9ce:	2c00      	cmp	r4, #0
1000a9d0:	d0db      	beq.n	1000a98a <platform_event_wait+0x17e>
	os_sem_down(&pHandle->strCriticalSection);
1000a9d2:	2314      	movs	r3, #20
1000a9d4:	9300      	str	r3, [sp, #0]
1000a9d6:	4b25      	ldr	r3, [pc, #148]	; (1000aa6c <platform_event_wait+0x260>)
1000a9d8:	681b      	ldr	r3, [r3, #0]
1000a9da:	2014      	movs	r0, #20
1000a9dc:	4798      	blx	r3
1000a9de:	e7ec      	b.n	1000a9ba <platform_event_wait+0x1ae>
			if(NULL != prev)
1000a9e0:	2f00      	cmp	r7, #0
1000a9e2:	d00e      	beq.n	1000aa02 <platform_event_wait+0x1f6>
				prev->pstrNext = current->pstrNext;
1000a9e4:	6883      	ldr	r3, [r0, #8]
1000a9e6:	60bb      	str	r3, [r7, #8]
				ke_free(current);
1000a9e8:	4653      	mov	r3, sl
1000a9ea:	681b      	ldr	r3, [r3, #0]
1000a9ec:	4798      	blx	r3
				current = prev->pstrNext;
1000a9ee:	68b8      	ldr	r0, [r7, #8]
	while(NULL != current)
1000a9f0:	2800      	cmp	r0, #0
1000a9f2:	d00e      	beq.n	1000aa12 <platform_event_wait+0x206>
		if(u16KeMsgId == ((struct ke_msg*)current->pvBuffer)->id)
1000a9f4:	6803      	ldr	r3, [r0, #0]
1000a9f6:	889b      	ldrh	r3, [r3, #4]
1000a9f8:	4543      	cmp	r3, r8
1000a9fa:	d0f1      	beq.n	1000a9e0 <platform_event_wait+0x1d4>
			current = current ->pstrNext;
1000a9fc:	0007      	movs	r7, r0
1000a9fe:	6880      	ldr	r0, [r0, #8]
1000aa00:	e7f6      	b.n	1000a9f0 <platform_event_wait+0x1e4>
				pHandle->pstrMessageList = current->pstrNext;
1000aa02:	6883      	ldr	r3, [r0, #8]
1000aa04:	6233      	str	r3, [r6, #32]
				ke_free(current);
1000aa06:	4b15      	ldr	r3, [pc, #84]	; (1000aa5c <platform_event_wait+0x250>)
1000aa08:	681b      	ldr	r3, [r3, #0]
1000aa0a:	9301      	str	r3, [sp, #4]
1000aa0c:	4798      	blx	r3
				current = pHandle->pstrMessageList;
1000aa0e:	6a30      	ldr	r0, [r6, #32]
1000aa10:	e7ee      	b.n	1000a9f0 <platform_event_wait+0x1e4>
	os_sem_up(&pHandle->strCriticalSection);
1000aa12:	4b17      	ldr	r3, [pc, #92]	; (1000aa70 <platform_event_wait+0x264>)
1000aa14:	681b      	ldr	r3, [r3, #0]
1000aa16:	9800      	ldr	r0, [sp, #0]
1000aa18:	4798      	blx	r3
	return status;
1000aa1a:	e7b6      	b.n	1000a98a <platform_event_wait+0x17e>
				if(ble_stack_message_handler) {
1000aa1c:	4b0b      	ldr	r3, [pc, #44]	; (1000aa4c <platform_event_wait+0x240>)
1000aa1e:	681b      	ldr	r3, [r3, #0]
			bLoopAgain = 0;
1000aa20:	2400      	movs	r4, #0
				if(ble_stack_message_handler) {
1000aa22:	2b00      	cmp	r3, #0
1000aa24:	d100      	bne.n	1000aa28 <platform_event_wait+0x21c>
1000aa26:	e762      	b.n	1000a8ee <platform_event_wait+0xe2>
						if(bEventTimeoutFlag)
1000aa28:	464b      	mov	r3, r9
							bLoopAgain = 1;
1000aa2a:	2401      	movs	r4, #1
						if(bEventTimeoutFlag)
1000aa2c:	2b00      	cmp	r3, #0
1000aa2e:	d100      	bne.n	1000aa32 <platform_event_wait+0x226>
1000aa30:	e75d      	b.n	1000a8ee <platform_event_wait+0xe2>
			bLoopAgain = 0;
1000aa32:	2400      	movs	r4, #0
							status = STATUS_TIMEOUT;	
1000aa34:	25d0      	movs	r5, #208	; 0xd0
1000aa36:	e75a      	b.n	1000a8ee <platform_event_wait+0xe2>
1000aa38:	10011dbc 	.word	0x10011dbc
1000aa3c:	10011dc0 	.word	0x10011dc0
1000aa40:	1000eadd 	.word	0x1000eadd
1000aa44:	1000a7bd 	.word	0x1000a7bd
1000aa48:	10011e00 	.word	0x10011e00
1000aa4c:	10011dc4 	.word	0x10011dc4
1000aa50:	10011ddc 	.word	0x10011ddc
1000aa54:	100127cc 	.word	0x100127cc
1000aa58:	10011dc8 	.word	0x10011dc8
1000aa5c:	10011dd4 	.word	0x10011dd4
1000aa60:	10012a64 	.word	0x10012a64
1000aa64:	1000eacb 	.word	0x1000eacb
1000aa68:	1000a3d9 	.word	0x1000a3d9
1000aa6c:	10011de4 	.word	0x10011de4
1000aa70:	10011de8 	.word	0x10011de8

1000aa74 <acquire_sleep_lock>:
{
1000aa74:	b510      	push	{r4, lr}
	rwip_prevent_sleep_set(APP_PREVENT_SLEEP);
1000aa76:	4b03      	ldr	r3, [pc, #12]	; (1000aa84 <acquire_sleep_lock+0x10>)
1000aa78:	681b      	ldr	r3, [r3, #0]
1000aa7a:	2080      	movs	r0, #128	; 0x80
1000aa7c:	0200      	lsls	r0, r0, #8
1000aa7e:	4798      	blx	r3
}
1000aa80:	2008      	movs	r0, #8
1000aa82:	bd10      	pop	{r4, pc}
1000aa84:	10012784 	.word	0x10012784

1000aa88 <release_message_lock>:
{
1000aa88:	b510      	push	{r4, lr}
	rwip_prevent_sleep_clear(MSG_PREVENT_SLEEP);
1000aa8a:	4b03      	ldr	r3, [pc, #12]	; (1000aa98 <release_message_lock+0x10>)
1000aa8c:	681b      	ldr	r3, [r3, #0]
1000aa8e:	2080      	movs	r0, #128	; 0x80
1000aa90:	01c0      	lsls	r0, r0, #7
1000aa92:	4798      	blx	r3
}
1000aa94:	2000      	movs	r0, #0
1000aa96:	bd10      	pop	{r4, pc}
1000aa98:	10012790 	.word	0x10012790

1000aa9c <gpio1_combined_isr_handler>:

enum port_status_code wakeup_int_unregister_callback(enum port_wakeup_source wakeup_source);
void wakeup_active_event_callback(uint32_t wakeup_source);

void gpio1_combined_isr_handler(void)
{
1000aa9c:	b530      	push	{r4, r5, lr}
	uint8_t index = 0;
	/* portint_callback_t callback; */
	uint8_t port_gpio1 = LPGPIO_16;
	uint32_t intstatus = GPIO1->INTSTATUSCLEAR.reg; /* jeffy */
1000aa9e:	4b18      	ldr	r3, [pc, #96]	; (1000ab00 <gpio1_combined_isr_handler+0x64>)
1000aaa0:	8f1a      	ldrh	r2, [r3, #56]	; 0x38
1000aaa2:	b292      	uxth	r2, r2
	GPIO1->INTTYPESET.reg |= (1 << 15); /* jeffy */
1000aaa4:	8d19      	ldrh	r1, [r3, #40]	; 0x28
1000aaa6:	2080      	movs	r0, #128	; 0x80
1000aaa8:	0200      	lsls	r0, r0, #8
1000aaaa:	4301      	orrs	r1, r0
1000aaac:	8519      	strh	r1, [r3, #40]	; 0x28
			/* CMSDK_GPIO1->INTCLEAR = (1 << index); */
			/* /REG_GPIO1_INTSTATUSCLEAR = (1 << index); */
			GPIO1->INTSTATUSCLEAR.reg = (1 << index); /* / jeffy */
		} else {
			/* CMSDK_GPIO1->INTCLEAR = CMSDK_GPIO1->INTSTATUS; */
			GPIO1->INTSTATUSCLEAR.reg |= (1 << 15); /* jeffy */
1000aaae:	0018      	movs	r0, r3
1000aab0:	4d14      	ldr	r5, [pc, #80]	; (1000ab04 <gpio1_combined_isr_handler+0x68>)
			GPIO1->INTSTATUSCLEAR.reg = (1 << index); /* / jeffy */
1000aab2:	2401      	movs	r4, #1
		index = 0;
1000aab4:	2100      	movs	r1, #0
1000aab6:	e008      	b.n	1000aaca <gpio1_combined_isr_handler+0x2e>
1000aab8:	000b      	movs	r3, r1
			GPIO1->INTSTATUSCLEAR.reg = (1 << index); /* / jeffy */
1000aaba:	0022      	movs	r2, r4
1000aabc:	409a      	lsls	r2, r3
1000aabe:	b293      	uxth	r3, r2
1000aac0:	8703      	strh	r3, [r0, #56]	; 0x38
			/* REG_GPIO1_INTSTATUSCLEAR = REG_GPIO1_INTENSET; */
		}

		intstatus = GPIO1->INTSTATUSCLEAR.reg;
1000aac2:	8f02      	ldrh	r2, [r0, #56]	; 0x38
		#ifdef CHIPVERSION_B0
		intstatus &= 0x1FF;
1000aac4:	05d2      	lsls	r2, r2, #23
1000aac6:	0dd2      	lsrs	r2, r2, #23
		#else
		intstatus &= 0x1F;
		#endif
	} while (intstatus != 0);
1000aac8:	d013      	beq.n	1000aaf2 <gpio1_combined_isr_handler+0x56>
		intstatus &= 0x1FF;
1000aaca:	05d2      	lsls	r2, r2, #23
1000aacc:	0dd2      	lsrs	r2, r2, #23
		if (intstatus != 0) {
1000aace:	d00b      	beq.n	1000aae8 <gpio1_combined_isr_handler+0x4c>
			port_gpio1 = (intstatus & ~(intstatus - 1));
1000aad0:	b2d3      	uxtb	r3, r2
1000aad2:	425a      	negs	r2, r3
1000aad4:	401a      	ands	r2, r3
			while (!(port_gpio1 == 1)) {
1000aad6:	2a01      	cmp	r2, #1
1000aad8:	d0ee      	beq.n	1000aab8 <gpio1_combined_isr_handler+0x1c>
1000aada:	000b      	movs	r3, r1
				port_gpio1 = port_gpio1 >> 1;
1000aadc:	0852      	lsrs	r2, r2, #1
				index++;
1000aade:	3301      	adds	r3, #1
1000aae0:	b2db      	uxtb	r3, r3
			while (!(port_gpio1 == 1)) {
1000aae2:	2a01      	cmp	r2, #1
1000aae4:	d1fa      	bne.n	1000aadc <gpio1_combined_isr_handler+0x40>
1000aae6:	e7e8      	b.n	1000aaba <gpio1_combined_isr_handler+0x1e>
			GPIO1->INTSTATUSCLEAR.reg |= (1 << 15); /* jeffy */
1000aae8:	8f03      	ldrh	r3, [r0, #56]	; 0x38
1000aaea:	432b      	orrs	r3, r5
1000aaec:	b29b      	uxth	r3, r3
1000aaee:	8703      	strh	r3, [r0, #56]	; 0x38
1000aaf0:	e7e7      	b.n	1000aac2 <gpio1_combined_isr_handler+0x26>

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[0] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
1000aaf2:	2180      	movs	r1, #128	; 0x80
1000aaf4:	0049      	lsls	r1, r1, #1
1000aaf6:	23c0      	movs	r3, #192	; 0xc0
1000aaf8:	005b      	lsls	r3, r3, #1
1000aafa:	4a03      	ldr	r2, [pc, #12]	; (1000ab08 <gpio1_combined_isr_handler+0x6c>)
1000aafc:	50d1      	str	r1, [r2, r3]

	NVIC_ClearPendingIRQ(8);
}
1000aafe:	bd30      	pop	{r4, r5, pc}
1000ab00:	40011000 	.word	0x40011000
1000ab04:	ffff8000 	.word	0xffff8000
1000ab08:	e000e100 	.word	0xe000e100

1000ab0c <gpio0_combined_isr_handler>:

void gpio0_combined_isr_handler(void)
{
1000ab0c:	b530      	push	{r4, r5, lr}
	uint8_t index = 0;
	/* portint_callback_t callback; */
	uint8_t port_gpio0 = LPGPIO_0;
	uint32_t intstatus = GPIO0->INTSTATUSCLEAR.reg; /* jeffy */
1000ab0e:	4b18      	ldr	r3, [pc, #96]	; (1000ab70 <gpio0_combined_isr_handler+0x64>)
1000ab10:	8f1a      	ldrh	r2, [r3, #56]	; 0x38
1000ab12:	b292      	uxth	r2, r2
	GPIO0->INTTYPESET.reg |= (1 << 15); /* jeffy */
1000ab14:	8d19      	ldrh	r1, [r3, #40]	; 0x28
1000ab16:	2080      	movs	r0, #128	; 0x80
1000ab18:	0200      	lsls	r0, r0, #8
1000ab1a:	4301      	orrs	r1, r0
1000ab1c:	8519      	strh	r1, [r3, #40]	; 0x28
			/* CMSDK_GPIO1->INTCLEAR = (1 << index); */
			/* /REG_GPIO1_INTSTATUSCLEAR = (1 << index); */
			GPIO0->INTSTATUSCLEAR.reg = (1 << index); /* / jeffy */
		} else {
			/* CMSDK_GPIO1->INTCLEAR = CMSDK_GPIO1->INTSTATUS; */
			GPIO0->INTSTATUSCLEAR.reg |= (1 << 15); /* jeffy */
1000ab1e:	0018      	movs	r0, r3
1000ab20:	4d14      	ldr	r5, [pc, #80]	; (1000ab74 <gpio0_combined_isr_handler+0x68>)
			GPIO0->INTSTATUSCLEAR.reg = (1 << index); /* / jeffy */
1000ab22:	2401      	movs	r4, #1
		index = 0;
1000ab24:	2100      	movs	r1, #0
1000ab26:	e008      	b.n	1000ab3a <gpio0_combined_isr_handler+0x2e>
1000ab28:	000b      	movs	r3, r1
			GPIO0->INTSTATUSCLEAR.reg = (1 << index); /* / jeffy */
1000ab2a:	0022      	movs	r2, r4
1000ab2c:	409a      	lsls	r2, r3
1000ab2e:	b293      	uxth	r3, r2
1000ab30:	8703      	strh	r3, [r0, #56]	; 0x38
			/* REG_GPIO1_INTSTATUSCLEAR = REG_GPIO1_INTENSET; */
		}

		intstatus = GPIO0->INTSTATUSCLEAR.reg;
1000ab32:	8f02      	ldrh	r2, [r0, #56]	; 0x38
		#ifdef CHIPVERSION_B0
		intstatus &= 0x1FF;
1000ab34:	05d2      	lsls	r2, r2, #23
1000ab36:	0dd2      	lsrs	r2, r2, #23
		#else
		intstatus &= 0x1F;
		#endif
	} while (intstatus != 0);
1000ab38:	d013      	beq.n	1000ab62 <gpio0_combined_isr_handler+0x56>
		intstatus &= 0x1FF;
1000ab3a:	05d2      	lsls	r2, r2, #23
1000ab3c:	0dd2      	lsrs	r2, r2, #23
		if (intstatus != 0) {
1000ab3e:	d00b      	beq.n	1000ab58 <gpio0_combined_isr_handler+0x4c>
			port_gpio0 = (intstatus & ~(intstatus - 1));
1000ab40:	b2d3      	uxtb	r3, r2
1000ab42:	425a      	negs	r2, r3
1000ab44:	401a      	ands	r2, r3
			while (!(port_gpio0 == 1)) {
1000ab46:	2a01      	cmp	r2, #1
1000ab48:	d0ee      	beq.n	1000ab28 <gpio0_combined_isr_handler+0x1c>
1000ab4a:	000b      	movs	r3, r1
				port_gpio0 = port_gpio0 >> 1;
1000ab4c:	0852      	lsrs	r2, r2, #1
				index++;
1000ab4e:	3301      	adds	r3, #1
1000ab50:	b2db      	uxtb	r3, r3
			while (!(port_gpio0 == 1)) {
1000ab52:	2a01      	cmp	r2, #1
1000ab54:	d1fa      	bne.n	1000ab4c <gpio0_combined_isr_handler+0x40>
1000ab56:	e7e8      	b.n	1000ab2a <gpio0_combined_isr_handler+0x1e>
			GPIO0->INTSTATUSCLEAR.reg |= (1 << 15); /* jeffy */
1000ab58:	8f03      	ldrh	r3, [r0, #56]	; 0x38
1000ab5a:	432b      	orrs	r3, r5
1000ab5c:	b29b      	uxth	r3, r3
1000ab5e:	8703      	strh	r3, [r0, #56]	; 0x38
1000ab60:	e7e7      	b.n	1000ab32 <gpio0_combined_isr_handler+0x26>
1000ab62:	2180      	movs	r1, #128	; 0x80
1000ab64:	23c0      	movs	r3, #192	; 0xc0
1000ab66:	005b      	lsls	r3, r3, #1
1000ab68:	4a03      	ldr	r2, [pc, #12]	; (1000ab78 <gpio0_combined_isr_handler+0x6c>)
1000ab6a:	50d1      	str	r1, [r2, r3]

	NVIC_ClearPendingIRQ(7);
}
1000ab6c:	bd30      	pop	{r4, r5, pc}
1000ab6e:	46c0      	nop			; (mov r8, r8)
1000ab70:	40010000 	.word	0x40010000
1000ab74:	ffff8000 	.word	0xffff8000
1000ab78:	e000e100 	.word	0xe000e100

1000ab7c <PORT1_COMB_Handler>:

#ifdef CHIPVERSION_B0
void PORT1_COMB_Handler(void)
{
1000ab7c:	b510      	push	{r4, lr}
	/* if(CMSDK_GPIO1->INTSTATUS & ((1<<15) | (1<<14) | (1<<13))) { */
	if (GPIO1->INTSTATUSCLEAR.reg & ((1 << 15) | (1 << 14) | (1 << 13))) {
1000ab7e:	4b0c      	ldr	r3, [pc, #48]	; (1000abb0 <PORT1_COMB_Handler+0x34>)
1000ab80:	8f1b      	ldrh	r3, [r3, #56]	; 0x38
1000ab82:	0b5b      	lsrs	r3, r3, #13
1000ab84:	d102      	bne.n	1000ab8c <PORT1_COMB_Handler+0x10>
		/* CMSDK_GPIO1->INTCLEAR |= CMSDK_GPIO1->INTSTATUS & ((1<<15) | (1<<14) | (1<<13)); */
		GPIO1->INTSTATUSCLEAR.reg |= GPIO1->INTSTATUSCLEAR.reg & ((1 << 15) | (1 << 14) | (1 << 13));
		/* NVIC_ClearPendingIRQ(PORT1_COMB_IRQn); */
		NVIC_ClearPendingIRQ(8);
	} else {
		gpio1_combined_isr_handler();
1000ab86:	4b0b      	ldr	r3, [pc, #44]	; (1000abb4 <PORT1_COMB_Handler+0x38>)
1000ab88:	4798      	blx	r3
	}
}
1000ab8a:	bd10      	pop	{r4, pc}
		handle_ext_wakeup_isr();
1000ab8c:	4b0a      	ldr	r3, [pc, #40]	; (1000abb8 <PORT1_COMB_Handler+0x3c>)
1000ab8e:	681b      	ldr	r3, [r3, #0]
1000ab90:	4798      	blx	r3
		GPIO1->INTSTATUSCLEAR.reg |= GPIO1->INTSTATUSCLEAR.reg & ((1 << 15) | (1 << 14) | (1 << 13));
1000ab92:	4a07      	ldr	r2, [pc, #28]	; (1000abb0 <PORT1_COMB_Handler+0x34>)
1000ab94:	8f13      	ldrh	r3, [r2, #56]	; 0x38
1000ab96:	8f11      	ldrh	r1, [r2, #56]	; 0x38
1000ab98:	0b5b      	lsrs	r3, r3, #13
1000ab9a:	035b      	lsls	r3, r3, #13
1000ab9c:	430b      	orrs	r3, r1
1000ab9e:	8713      	strh	r3, [r2, #56]	; 0x38
1000aba0:	2180      	movs	r1, #128	; 0x80
1000aba2:	0049      	lsls	r1, r1, #1
1000aba4:	23c0      	movs	r3, #192	; 0xc0
1000aba6:	005b      	lsls	r3, r3, #1
1000aba8:	4a04      	ldr	r2, [pc, #16]	; (1000abbc <PORT1_COMB_Handler+0x40>)
1000abaa:	50d1      	str	r1, [r2, r3]
1000abac:	e7ed      	b.n	1000ab8a <PORT1_COMB_Handler+0xe>
1000abae:	46c0      	nop			; (mov r8, r8)
1000abb0:	40011000 	.word	0x40011000
1000abb4:	1000aa9d 	.word	0x1000aa9d
1000abb8:	10012a50 	.word	0x10012a50
1000abbc:	e000e100 	.word	0xe000e100

1000abc0 <wakeup_int_unregister_callback>:
	{
		wakeup_source_callback[wakeup_source] = 0;
	}
	else 
	{
		status = PORT_STATUS_ERR_INVALID_ARG;
1000abc0:	2303      	movs	r3, #3
	if(	(wakeup_source == PORT_WAKEUP_SOURCE_AON_GPIO_0) || 
1000abc2:	2802      	cmp	r0, #2
1000abc4:	d901      	bls.n	1000abca <wakeup_int_unregister_callback+0xa>
	}
	return status;
}
1000abc6:	0018      	movs	r0, r3
1000abc8:	4770      	bx	lr
		wakeup_source_callback[wakeup_source] = 0;
1000abca:	0080      	lsls	r0, r0, #2
1000abcc:	2200      	movs	r2, #0
1000abce:	4b02      	ldr	r3, [pc, #8]	; (1000abd8 <wakeup_int_unregister_callback+0x18>)
1000abd0:	50c2      	str	r2, [r0, r3]
	enum port_status_code status = PORT_STATUS_OK;
1000abd2:	2300      	movs	r3, #0
1000abd4:	e7f7      	b.n	1000abc6 <wakeup_int_unregister_callback+0x6>
1000abd6:	46c0      	nop			; (mov r8, r8)
1000abd8:	10012a68 	.word	0x10012a68

1000abdc <wakeup_active_event_callback>:

void wakeup_active_event_callback(uint32_t wakeup_source)
{
1000abdc:	b510      	push	{r4, lr}
1000abde:	0004      	movs	r4, r0
	portint_callback_t callback;
	uint32_t *pu32WakeSource = (uint32_t *)wakeup_source;
	if((*pu32WakeSource & 0xFF) == 1)
1000abe0:	7803      	ldrb	r3, [r0, #0]
1000abe2:	2b01      	cmp	r3, #1
1000abe4:	d006      	beq.n	1000abf4 <wakeup_active_event_callback+0x18>
			callback = wakeup_source_callback[0];
			callback();
		}
		*pu32WakeSource &= ~(0xFF);
	}
	if(((*pu32WakeSource >> 8) & 0xFF) == 1)
1000abe6:	7863      	ldrb	r3, [r4, #1]
1000abe8:	2b01      	cmp	r3, #1
1000abea:	d00d      	beq.n	1000ac08 <wakeup_active_event_callback+0x2c>
			callback = wakeup_source_callback[1];
			callback();
		}
		*pu32WakeSource &= ~(0xFF << 8);
	}
	if(((*pu32WakeSource >> 16) & 0xFF) == 1)
1000abec:	78a3      	ldrb	r3, [r4, #2]
1000abee:	2b01      	cmp	r3, #1
1000abf0:	d014      	beq.n	1000ac1c <wakeup_active_event_callback+0x40>
			callback = wakeup_source_callback[2];
			callback();
		}
		*pu32WakeSource &= ~(0xFF << 16);
	}
}
1000abf2:	bd10      	pop	{r4, pc}
		if(wakeup_source_callback[0] != NULL) {
1000abf4:	4b0e      	ldr	r3, [pc, #56]	; (1000ac30 <wakeup_active_event_callback+0x54>)
1000abf6:	681b      	ldr	r3, [r3, #0]
1000abf8:	2b00      	cmp	r3, #0
1000abfa:	d000      	beq.n	1000abfe <wakeup_active_event_callback+0x22>
			callback();
1000abfc:	4798      	blx	r3
		*pu32WakeSource &= ~(0xFF);
1000abfe:	23ff      	movs	r3, #255	; 0xff
1000ac00:	6822      	ldr	r2, [r4, #0]
1000ac02:	439a      	bics	r2, r3
1000ac04:	6022      	str	r2, [r4, #0]
1000ac06:	e7ee      	b.n	1000abe6 <wakeup_active_event_callback+0xa>
		if(wakeup_source_callback[1] != NULL) {
1000ac08:	4b09      	ldr	r3, [pc, #36]	; (1000ac30 <wakeup_active_event_callback+0x54>)
1000ac0a:	685b      	ldr	r3, [r3, #4]
1000ac0c:	2b00      	cmp	r3, #0
1000ac0e:	d000      	beq.n	1000ac12 <wakeup_active_event_callback+0x36>
			callback();
1000ac10:	4798      	blx	r3
		*pu32WakeSource &= ~(0xFF << 8);
1000ac12:	4b08      	ldr	r3, [pc, #32]	; (1000ac34 <wakeup_active_event_callback+0x58>)
1000ac14:	6822      	ldr	r2, [r4, #0]
1000ac16:	4013      	ands	r3, r2
1000ac18:	6023      	str	r3, [r4, #0]
1000ac1a:	e7e7      	b.n	1000abec <wakeup_active_event_callback+0x10>
		if(wakeup_source_callback[2] != NULL) {
1000ac1c:	4b04      	ldr	r3, [pc, #16]	; (1000ac30 <wakeup_active_event_callback+0x54>)
1000ac1e:	689b      	ldr	r3, [r3, #8]
1000ac20:	2b00      	cmp	r3, #0
1000ac22:	d000      	beq.n	1000ac26 <wakeup_active_event_callback+0x4a>
			callback();
1000ac24:	4798      	blx	r3
		*pu32WakeSource &= ~(0xFF << 16);
1000ac26:	4b04      	ldr	r3, [pc, #16]	; (1000ac38 <wakeup_active_event_callback+0x5c>)
1000ac28:	6822      	ldr	r2, [r4, #0]
1000ac2a:	4013      	ands	r3, r2
1000ac2c:	6023      	str	r3, [r4, #0]
}
1000ac2e:	e7e0      	b.n	1000abf2 <wakeup_active_event_callback+0x16>
1000ac30:	10012a68 	.word	0x10012a68
1000ac34:	ffff00ff 	.word	0xffff00ff
1000ac38:	ff00ffff 	.word	0xff00ffff

1000ac3c <main>:
								
	return STATUS_SUCCEEDED;
}

int main(void)
{
1000ac3c:	b570      	push	{r4, r5, r6, lr}
1000ac3e:	b084      	sub	sp, #16
	platform_driver_init();
1000ac40:	4b97      	ldr	r3, [pc, #604]	; (1000aea0 <main+0x264>)
1000ac42:	4798      	blx	r3
	acquire_sleep_lock();
1000ac44:	4b97      	ldr	r3, [pc, #604]	; (1000aea4 <main+0x268>)
1000ac46:	4798      	blx	r3

	/* Initialize serial console */
	serial_console_init();
1000ac48:	4b97      	ldr	r3, [pc, #604]	; (1000aea8 <main+0x26c>)
1000ac4a:	4798      	blx	r3

	DBG_LOG("Initializing Broadcaster Application");
1000ac4c:	4e97      	ldr	r6, [pc, #604]	; (1000aeac <main+0x270>)
1000ac4e:	0030      	movs	r0, r6
1000ac50:	4d97      	ldr	r5, [pc, #604]	; (1000aeb0 <main+0x274>)
1000ac52:	47a8      	blx	r5
1000ac54:	4897      	ldr	r0, [pc, #604]	; (1000aeb4 <main+0x278>)
1000ac56:	4c98      	ldr	r4, [pc, #608]	; (1000aeb8 <main+0x27c>)
1000ac58:	47a0      	blx	r4

	/* initialize the ble chip  and Set the device mac address */
	ble_device_init(NULL);
1000ac5a:	2000      	movs	r0, #0
1000ac5c:	4b97      	ldr	r3, [pc, #604]	; (1000aebc <main+0x280>)
1000ac5e:	4798      	blx	r3

	/* Intialize LED */
	led_init();
1000ac60:	4b97      	ldr	r3, [pc, #604]	; (1000aec0 <main+0x284>)
1000ac62:	4798      	blx	r3
		adv_type = AT_BLE_ADV_TYPE_SCANNABLE_UNDIRECTED;
1000ac64:	2202      	movs	r2, #2
1000ac66:	4b97      	ldr	r3, [pc, #604]	; (1000aec4 <main+0x288>)
1000ac68:	601a      	str	r2, [r3, #0]
		DBG_LOG("Advertisement type set to scannable undirected");
1000ac6a:	0030      	movs	r0, r6
1000ac6c:	47a8      	blx	r5
1000ac6e:	4896      	ldr	r0, [pc, #600]	; (1000aec8 <main+0x28c>)
1000ac70:	47a0      	blx	r4
		data_type = ADVERTISEMENT_DATA;
1000ac72:	2200      	movs	r2, #0
1000ac74:	4b95      	ldr	r3, [pc, #596]	; (1000aecc <main+0x290>)
1000ac76:	701a      	strb	r2, [r3, #0]
		if ((adv_length + length) > (MAX_ADV_LEN - 2)) {
1000ac78:	4b95      	ldr	r3, [pc, #596]	; (1000aed0 <main+0x294>)
1000ac7a:	781c      	ldrb	r4, [r3, #0]
1000ac7c:	0023      	movs	r3, r4
1000ac7e:	330b      	adds	r3, #11
1000ac80:	2b1a      	cmp	r3, #26
1000ac82:	dd24      	ble.n	1000acce <main+0x92>
			DBG_LOG("adding complete local name failed");
1000ac84:	4889      	ldr	r0, [pc, #548]	; (1000aeac <main+0x270>)
1000ac86:	4b8a      	ldr	r3, [pc, #552]	; (1000aeb0 <main+0x274>)
1000ac88:	4798      	blx	r3
1000ac8a:	4892      	ldr	r0, [pc, #584]	; (1000aed4 <main+0x298>)
1000ac8c:	4b8a      	ldr	r3, [pc, #552]	; (1000aeb8 <main+0x27c>)
1000ac8e:	4798      	blx	r3
	if (data_type == ADVERTISEMENT_DATA) {
1000ac90:	4b8e      	ldr	r3, [pc, #568]	; (1000aecc <main+0x290>)
1000ac92:	781b      	ldrb	r3, [r3, #0]
1000ac94:	2b00      	cmp	r3, #0
1000ac96:	d144      	bne.n	1000ad22 <main+0xe6>
		if ((adv_length + length) > (MAX_ADV_LEN - 2)) {
1000ac98:	4b8d      	ldr	r3, [pc, #564]	; (1000aed0 <main+0x294>)
1000ac9a:	781c      	ldrb	r4, [r3, #0]
1000ac9c:	1ca3      	adds	r3, r4, #2
1000ac9e:	2b1a      	cmp	r3, #26
1000aca0:	dd2d      	ble.n	1000acfe <main+0xc2>
			DBG_LOG("adding appearance failed");
1000aca2:	4882      	ldr	r0, [pc, #520]	; (1000aeac <main+0x270>)
1000aca4:	4b82      	ldr	r3, [pc, #520]	; (1000aeb0 <main+0x274>)
1000aca6:	4798      	blx	r3
1000aca8:	488b      	ldr	r0, [pc, #556]	; (1000aed8 <main+0x29c>)
1000acaa:	4b83      	ldr	r3, [pc, #524]	; (1000aeb8 <main+0x27c>)
1000acac:	4798      	blx	r3
	if (data_type == ADVERTISEMENT_DATA) {
1000acae:	4b87      	ldr	r3, [pc, #540]	; (1000aecc <main+0x290>)
1000acb0:	781b      	ldrb	r3, [r3, #0]
1000acb2:	2b00      	cmp	r3, #0
1000acb4:	d164      	bne.n	1000ad80 <main+0x144>
		if ((adv_length + length) > (MAX_ADV_LEN - 2)) {
1000acb6:	4b86      	ldr	r3, [pc, #536]	; (1000aed0 <main+0x294>)
1000acb8:	781c      	ldrb	r4, [r3, #0]
1000acba:	1ca3      	adds	r3, r4, #2
1000acbc:	2b1a      	cmp	r3, #26
1000acbe:	dd4d      	ble.n	1000ad5c <main+0x120>
			DBG_LOG("adding complete list of service uuid16 failed");
1000acc0:	487a      	ldr	r0, [pc, #488]	; (1000aeac <main+0x270>)
1000acc2:	4b7b      	ldr	r3, [pc, #492]	; (1000aeb0 <main+0x274>)
1000acc4:	4798      	blx	r3
1000acc6:	4885      	ldr	r0, [pc, #532]	; (1000aedc <main+0x2a0>)
1000acc8:	4b7b      	ldr	r3, [pc, #492]	; (1000aeb8 <main+0x27c>)
1000acca:	4798      	blx	r3
1000accc:	e060      	b.n	1000ad90 <main+0x154>
			adv_data[adv_length++] = length + ADV_TYPE_LEN;
1000acce:	4a84      	ldr	r2, [pc, #528]	; (1000aee0 <main+0x2a4>)
1000acd0:	230c      	movs	r3, #12
1000acd2:	5513      	strb	r3, [r2, r4]
1000acd4:	1c63      	adds	r3, r4, #1
			adv_data[adv_length++] = ADV_DATA_TYPE_COMPLETE_LOCAL_NAME;
1000acd6:	b2db      	uxtb	r3, r3
1000acd8:	2109      	movs	r1, #9
1000acda:	54d1      	strb	r1, [r2, r3]
1000acdc:	1ca0      	adds	r0, r4, #2
			memcpy((adv_data + adv_length), local_name, length);
1000acde:	b2c0      	uxtb	r0, r0
1000ace0:	1880      	adds	r0, r0, r2
1000ace2:	220b      	movs	r2, #11
1000ace4:	497f      	ldr	r1, [pc, #508]	; (1000aee4 <main+0x2a8>)
1000ace6:	4b80      	ldr	r3, [pc, #512]	; (1000aee8 <main+0x2ac>)
1000ace8:	4798      	blx	r3
			adv_length += length;
1000acea:	340d      	adds	r4, #13
1000acec:	4b78      	ldr	r3, [pc, #480]	; (1000aed0 <main+0x294>)
1000acee:	701c      	strb	r4, [r3, #0]
		DBG_LOG("complete name set");
1000acf0:	486e      	ldr	r0, [pc, #440]	; (1000aeac <main+0x270>)
1000acf2:	4b6f      	ldr	r3, [pc, #444]	; (1000aeb0 <main+0x274>)
1000acf4:	4798      	blx	r3
1000acf6:	487d      	ldr	r0, [pc, #500]	; (1000aeec <main+0x2b0>)
1000acf8:	4b6f      	ldr	r3, [pc, #444]	; (1000aeb8 <main+0x27c>)
1000acfa:	4798      	blx	r3
1000acfc:	e7c8      	b.n	1000ac90 <main+0x54>
			adv_data[adv_length++] = length + ADV_TYPE_LEN;
1000acfe:	4a78      	ldr	r2, [pc, #480]	; (1000aee0 <main+0x2a4>)
1000ad00:	2303      	movs	r3, #3
1000ad02:	5513      	strb	r3, [r2, r4]
1000ad04:	1c63      	adds	r3, r4, #1
			adv_data[adv_length++] = ADV_DATA_TYPE_APPEARANCE;
1000ad06:	b2db      	uxtb	r3, r3
1000ad08:	2119      	movs	r1, #25
1000ad0a:	54d1      	strb	r1, [r2, r3]
1000ad0c:	1ca0      	adds	r0, r4, #2
			memcpy((adv_data + adv_length), appearance, length);
1000ad0e:	b2c0      	uxtb	r0, r0
1000ad10:	1880      	adds	r0, r0, r2
1000ad12:	2202      	movs	r2, #2
1000ad14:	4976      	ldr	r1, [pc, #472]	; (1000aef0 <main+0x2b4>)
1000ad16:	4b74      	ldr	r3, [pc, #464]	; (1000aee8 <main+0x2ac>)
1000ad18:	4798      	blx	r3
			adv_length += length;
1000ad1a:	3404      	adds	r4, #4
1000ad1c:	4b6c      	ldr	r3, [pc, #432]	; (1000aed0 <main+0x294>)
1000ad1e:	701c      	strb	r4, [r3, #0]
1000ad20:	e015      	b.n	1000ad4e <main+0x112>
		if ((scan_length + length) > (MAX_SCAN_LEN - 2)) {
1000ad22:	4b74      	ldr	r3, [pc, #464]	; (1000aef4 <main+0x2b8>)
1000ad24:	781c      	ldrb	r4, [r3, #0]
1000ad26:	1ca3      	adds	r3, r4, #2
1000ad28:	2b1a      	cmp	r3, #26
1000ad2a:	dcba      	bgt.n	1000aca2 <main+0x66>
			scan_rsp_data[scan_length++] = length + ADV_TYPE_LEN;
1000ad2c:	4a72      	ldr	r2, [pc, #456]	; (1000aef8 <main+0x2bc>)
1000ad2e:	2303      	movs	r3, #3
1000ad30:	5513      	strb	r3, [r2, r4]
1000ad32:	1c63      	adds	r3, r4, #1
			scan_rsp_data[scan_length++] = ADV_DATA_TYPE_APPEARANCE;
1000ad34:	b2db      	uxtb	r3, r3
1000ad36:	2119      	movs	r1, #25
1000ad38:	54d1      	strb	r1, [r2, r3]
1000ad3a:	1ca0      	adds	r0, r4, #2
			memcpy((scan_rsp_data + scan_length), appearance, length);
1000ad3c:	b2c0      	uxtb	r0, r0
1000ad3e:	1880      	adds	r0, r0, r2
1000ad40:	2202      	movs	r2, #2
1000ad42:	496b      	ldr	r1, [pc, #428]	; (1000aef0 <main+0x2b4>)
1000ad44:	4b68      	ldr	r3, [pc, #416]	; (1000aee8 <main+0x2ac>)
1000ad46:	4798      	blx	r3
			scan_length += length;
1000ad48:	3404      	adds	r4, #4
1000ad4a:	4b6a      	ldr	r3, [pc, #424]	; (1000aef4 <main+0x2b8>)
1000ad4c:	701c      	strb	r4, [r3, #0]
		DBG_LOG("appearance set");
1000ad4e:	4857      	ldr	r0, [pc, #348]	; (1000aeac <main+0x270>)
1000ad50:	4b57      	ldr	r3, [pc, #348]	; (1000aeb0 <main+0x274>)
1000ad52:	4798      	blx	r3
1000ad54:	4869      	ldr	r0, [pc, #420]	; (1000aefc <main+0x2c0>)
1000ad56:	4b58      	ldr	r3, [pc, #352]	; (1000aeb8 <main+0x27c>)
1000ad58:	4798      	blx	r3
1000ad5a:	e7a8      	b.n	1000acae <main+0x72>
			adv_data[adv_length++] = length + ADV_TYPE_LEN;
1000ad5c:	4a60      	ldr	r2, [pc, #384]	; (1000aee0 <main+0x2a4>)
1000ad5e:	2103      	movs	r1, #3
1000ad60:	5511      	strb	r1, [r2, r4]
1000ad62:	1c63      	adds	r3, r4, #1
			adv_data[adv_length++] = ADV_DATA_TYPE_COMPLETE_SERVICE_UUID16;
1000ad64:	b2db      	uxtb	r3, r3
1000ad66:	54d1      	strb	r1, [r2, r3]
1000ad68:	1ca0      	adds	r0, r4, #2
			memcpy((adv_data + adv_length), list_uuid16, length);
1000ad6a:	b2c0      	uxtb	r0, r0
1000ad6c:	1880      	adds	r0, r0, r2
1000ad6e:	2202      	movs	r2, #2
1000ad70:	495f      	ldr	r1, [pc, #380]	; (1000aef0 <main+0x2b4>)
1000ad72:	3104      	adds	r1, #4
1000ad74:	4b5c      	ldr	r3, [pc, #368]	; (1000aee8 <main+0x2ac>)
1000ad76:	4798      	blx	r3
			adv_length += length;
1000ad78:	3404      	adds	r4, #4
1000ad7a:	4b55      	ldr	r3, [pc, #340]	; (1000aed0 <main+0x294>)
1000ad7c:	701c      	strb	r4, [r3, #0]
1000ad7e:	e001      	b.n	1000ad84 <main+0x148>
	} else if (data_type == SCAN_RESP_DATA) {
1000ad80:	2b01      	cmp	r3, #1
1000ad82:	d03b      	beq.n	1000adfc <main+0x1c0>
		DBG_LOG("complete list of service uuid16 set");
1000ad84:	4849      	ldr	r0, [pc, #292]	; (1000aeac <main+0x270>)
1000ad86:	4b4a      	ldr	r3, [pc, #296]	; (1000aeb0 <main+0x274>)
1000ad88:	4798      	blx	r3
1000ad8a:	485d      	ldr	r0, [pc, #372]	; (1000af00 <main+0x2c4>)
1000ad8c:	4b4a      	ldr	r3, [pc, #296]	; (1000aeb8 <main+0x27c>)
1000ad8e:	4798      	blx	r3
			adv_type == ADV_TYPE_SCANNABLE_UNDIRECTED) {
1000ad90:	4b4c      	ldr	r3, [pc, #304]	; (1000aec4 <main+0x288>)
	} else if (type == SCAN_RESP_DATA &&
1000ad92:	681b      	ldr	r3, [r3, #0]
1000ad94:	2b02      	cmp	r3, #2
1000ad96:	d049      	beq.n	1000ae2c <main+0x1f0>
			DBG_LOG("Advertisement data type set failed(%d)", status);
1000ad98:	4844      	ldr	r0, [pc, #272]	; (1000aeac <main+0x270>)
1000ad9a:	4b45      	ldr	r3, [pc, #276]	; (1000aeb0 <main+0x274>)
1000ad9c:	4798      	blx	r3
1000ad9e:	2102      	movs	r1, #2
1000ada0:	4858      	ldr	r0, [pc, #352]	; (1000af04 <main+0x2c8>)
1000ada2:	4b45      	ldr	r3, [pc, #276]	; (1000aeb8 <main+0x27c>)
1000ada4:	4798      	blx	r3
	if (at_ble_adv_data_set(adv_data, adv_length, scan_rsp_data, scan_length) != AT_BLE_SUCCESS) {
1000ada6:	4b53      	ldr	r3, [pc, #332]	; (1000aef4 <main+0x2b8>)
1000ada8:	781b      	ldrb	r3, [r3, #0]
1000adaa:	4a49      	ldr	r2, [pc, #292]	; (1000aed0 <main+0x294>)
1000adac:	7811      	ldrb	r1, [r2, #0]
1000adae:	4a52      	ldr	r2, [pc, #328]	; (1000aef8 <main+0x2bc>)
1000adb0:	484b      	ldr	r0, [pc, #300]	; (1000aee0 <main+0x2a4>)
1000adb2:	4c55      	ldr	r4, [pc, #340]	; (1000af08 <main+0x2cc>)
1000adb4:	47a0      	blx	r4
1000adb6:	2800      	cmp	r0, #0
1000adb8:	d161      	bne.n	1000ae7e <main+0x242>
		DBG_LOG("BLE Broadcast data set success");
1000adba:	483c      	ldr	r0, [pc, #240]	; (1000aeac <main+0x270>)
1000adbc:	4b3c      	ldr	r3, [pc, #240]	; (1000aeb0 <main+0x274>)
1000adbe:	4798      	blx	r3
1000adc0:	4852      	ldr	r0, [pc, #328]	; (1000af0c <main+0x2d0>)
1000adc2:	4b3d      	ldr	r3, [pc, #244]	; (1000aeb8 <main+0x27c>)
1000adc4:	4798      	blx	r3
	if ((status     = at_ble_adv_start(adv_type,
1000adc6:	4b3f      	ldr	r3, [pc, #252]	; (1000aec4 <main+0x288>)
1000adc8:	6818      	ldr	r0, [r3, #0]
1000adca:	b2c0      	uxtb	r0, r0
1000adcc:	2200      	movs	r2, #0
1000adce:	9202      	str	r2, [sp, #8]
1000add0:	4b4f      	ldr	r3, [pc, #316]	; (1000af10 <main+0x2d4>)
1000add2:	9301      	str	r3, [sp, #4]
1000add4:	23c8      	movs	r3, #200	; 0xc8
1000add6:	00db      	lsls	r3, r3, #3
1000add8:	9300      	str	r3, [sp, #0]
1000adda:	0013      	movs	r3, r2
1000addc:	2103      	movs	r1, #3
1000adde:	4c4d      	ldr	r4, [pc, #308]	; (1000af14 <main+0x2d8>)
1000ade0:	47a0      	blx	r4
1000ade2:	1e04      	subs	r4, r0, #0
1000ade4:	d154      	bne.n	1000ae90 <main+0x254>
		DBG_LOG("Started Broadcasting");
1000ade6:	4831      	ldr	r0, [pc, #196]	; (1000aeac <main+0x270>)
1000ade8:	4b31      	ldr	r3, [pc, #196]	; (1000aeb0 <main+0x274>)
1000adea:	4798      	blx	r3
1000adec:	484a      	ldr	r0, [pc, #296]	; (1000af18 <main+0x2dc>)
1000adee:	4b32      	ldr	r3, [pc, #200]	; (1000aeb8 <main+0x27c>)
1000adf0:	4798      	blx	r3
	LED_On(LED0);
1000adf2:	2100      	movs	r1, #0
1000adf4:	2016      	movs	r0, #22
1000adf6:	4b49      	ldr	r3, [pc, #292]	; (1000af1c <main+0x2e0>)
1000adf8:	4798      	blx	r3
1000adfa:	e046      	b.n	1000ae8a <main+0x24e>
		if ((scan_length + length) > (MAX_SCAN_LEN - 2)) {
1000adfc:	4b3d      	ldr	r3, [pc, #244]	; (1000aef4 <main+0x2b8>)
1000adfe:	781c      	ldrb	r4, [r3, #0]
1000ae00:	1ca3      	adds	r3, r4, #2
1000ae02:	2b1a      	cmp	r3, #26
1000ae04:	dd00      	ble.n	1000ae08 <main+0x1cc>
1000ae06:	e75b      	b.n	1000acc0 <main+0x84>
			scan_rsp_data[scan_length++] = length + ADV_TYPE_LEN;
1000ae08:	4a3b      	ldr	r2, [pc, #236]	; (1000aef8 <main+0x2bc>)
1000ae0a:	2103      	movs	r1, #3
1000ae0c:	5511      	strb	r1, [r2, r4]
1000ae0e:	1c63      	adds	r3, r4, #1
			scan_rsp_data[scan_length++] = ADV_DATA_TYPE_COMPLETE_SERVICE_UUID16;
1000ae10:	b2db      	uxtb	r3, r3
1000ae12:	54d1      	strb	r1, [r2, r3]
1000ae14:	1ca0      	adds	r0, r4, #2
			memcpy((scan_rsp_data + scan_length), list_uuid16, length);
1000ae16:	b2c0      	uxtb	r0, r0
1000ae18:	1880      	adds	r0, r0, r2
1000ae1a:	2202      	movs	r2, #2
1000ae1c:	4934      	ldr	r1, [pc, #208]	; (1000aef0 <main+0x2b4>)
1000ae1e:	3104      	adds	r1, #4
1000ae20:	4b31      	ldr	r3, [pc, #196]	; (1000aee8 <main+0x2ac>)
1000ae22:	4798      	blx	r3
			scan_length += length;
1000ae24:	3404      	adds	r4, #4
1000ae26:	4b33      	ldr	r3, [pc, #204]	; (1000aef4 <main+0x2b8>)
1000ae28:	701c      	strb	r4, [r3, #0]
1000ae2a:	e7ab      	b.n	1000ad84 <main+0x148>
		data_type = SCAN_RESP_DATA;
1000ae2c:	2201      	movs	r2, #1
1000ae2e:	4b27      	ldr	r3, [pc, #156]	; (1000aecc <main+0x290>)
1000ae30:	701a      	strb	r2, [r3, #0]
		if ((scan_length + length) > (MAX_SCAN_LEN - 2)) {
1000ae32:	4b30      	ldr	r3, [pc, #192]	; (1000aef4 <main+0x2b8>)
1000ae34:	781c      	ldrb	r4, [r3, #0]
1000ae36:	0023      	movs	r3, r4
1000ae38:	3308      	adds	r3, #8
1000ae3a:	2b1a      	cmp	r3, #26
1000ae3c:	dd06      	ble.n	1000ae4c <main+0x210>
			DBG_LOG("adding manufacturer data failed");
1000ae3e:	481b      	ldr	r0, [pc, #108]	; (1000aeac <main+0x270>)
1000ae40:	4b1b      	ldr	r3, [pc, #108]	; (1000aeb0 <main+0x274>)
1000ae42:	4798      	blx	r3
1000ae44:	4836      	ldr	r0, [pc, #216]	; (1000af20 <main+0x2e4>)
1000ae46:	4b1c      	ldr	r3, [pc, #112]	; (1000aeb8 <main+0x27c>)
1000ae48:	4798      	blx	r3
1000ae4a:	e7ac      	b.n	1000ada6 <main+0x16a>
			scan_rsp_data[scan_length++] = length + ADV_TYPE_LEN;
1000ae4c:	4a2a      	ldr	r2, [pc, #168]	; (1000aef8 <main+0x2bc>)
1000ae4e:	2309      	movs	r3, #9
1000ae50:	5513      	strb	r3, [r2, r4]
1000ae52:	1c63      	adds	r3, r4, #1
			scan_rsp_data[scan_length++] = ADV_DATA_TYPE_MANUFACTURER_DATA;
1000ae54:	b2db      	uxtb	r3, r3
1000ae56:	21ff      	movs	r1, #255	; 0xff
1000ae58:	54d1      	strb	r1, [r2, r3]
1000ae5a:	1ca0      	adds	r0, r4, #2
			memcpy((scan_rsp_data + scan_length), data, length);
1000ae5c:	b2c0      	uxtb	r0, r0
1000ae5e:	1880      	adds	r0, r0, r2
1000ae60:	2208      	movs	r2, #8
1000ae62:	4923      	ldr	r1, [pc, #140]	; (1000aef0 <main+0x2b4>)
1000ae64:	1889      	adds	r1, r1, r2
1000ae66:	4b20      	ldr	r3, [pc, #128]	; (1000aee8 <main+0x2ac>)
1000ae68:	4798      	blx	r3
			scan_length += length;
1000ae6a:	340a      	adds	r4, #10
1000ae6c:	4b21      	ldr	r3, [pc, #132]	; (1000aef4 <main+0x2b8>)
1000ae6e:	701c      	strb	r4, [r3, #0]
		DBG_LOG("manufacturer data set");
1000ae70:	480e      	ldr	r0, [pc, #56]	; (1000aeac <main+0x270>)
1000ae72:	4b0f      	ldr	r3, [pc, #60]	; (1000aeb0 <main+0x274>)
1000ae74:	4798      	blx	r3
1000ae76:	482b      	ldr	r0, [pc, #172]	; (1000af24 <main+0x2e8>)
1000ae78:	4b0f      	ldr	r3, [pc, #60]	; (1000aeb8 <main+0x27c>)
1000ae7a:	4798      	blx	r3
1000ae7c:	e793      	b.n	1000ada6 <main+0x16a>
		DBG_LOG("BLE Broadcast data set failed");
1000ae7e:	480b      	ldr	r0, [pc, #44]	; (1000aeac <main+0x270>)
1000ae80:	4b0b      	ldr	r3, [pc, #44]	; (1000aeb0 <main+0x274>)
1000ae82:	4798      	blx	r3
1000ae84:	4828      	ldr	r0, [pc, #160]	; (1000af28 <main+0x2ec>)
1000ae86:	4b0c      	ldr	r3, [pc, #48]	; (1000aeb8 <main+0x27c>)
1000ae88:	4798      	blx	r3

	brd_adv_init();

	/* starting advertisement in broadcast mode */
	brd_start_broadcast();
}
1000ae8a:	2000      	movs	r0, #0
1000ae8c:	b004      	add	sp, #16
1000ae8e:	bd70      	pop	{r4, r5, r6, pc}
		DBG_LOG("BLE Broadcast start failed(%d)", status);
1000ae90:	4806      	ldr	r0, [pc, #24]	; (1000aeac <main+0x270>)
1000ae92:	4b07      	ldr	r3, [pc, #28]	; (1000aeb0 <main+0x274>)
1000ae94:	4798      	blx	r3
1000ae96:	0021      	movs	r1, r4
1000ae98:	4824      	ldr	r0, [pc, #144]	; (1000af2c <main+0x2f0>)
1000ae9a:	4b07      	ldr	r3, [pc, #28]	; (1000aeb8 <main+0x27c>)
1000ae9c:	4798      	blx	r3
1000ae9e:	e7f4      	b.n	1000ae8a <main+0x24e>
1000aea0:	1000a559 	.word	0x1000a559
1000aea4:	1000aa75 	.word	0x1000aa75
1000aea8:	1000a24d 	.word	0x1000a24d
1000aeac:	10010514 	.word	0x10010514
1000aeb0:	1000ec09 	.word	0x1000ec09
1000aeb4:	10010584 	.word	0x10010584
1000aeb8:	1000eaed 	.word	0x1000eaed
1000aebc:	10009ef1 	.word	0x10009ef1
1000aec0:	1000a1a1 	.word	0x1000a1a1
1000aec4:	10010890 	.word	0x10010890
1000aec8:	100105ac 	.word	0x100105ac
1000aecc:	10011e04 	.word	0x10011e04
1000aed0:	10012a74 	.word	0x10012a74
1000aed4:	10010690 	.word	0x10010690
1000aed8:	100106c4 	.word	0x100106c4
1000aedc:	100106e0 	.word	0x100106e0
1000aee0:	10012a98 	.word	0x10012a98
1000aee4:	100105dc 	.word	0x100105dc
1000aee8:	1000eacb 	.word	0x1000eacb
1000aeec:	100105ec 	.word	0x100105ec
1000aef0:	10010570 	.word	0x10010570
1000aef4:	10012a94 	.word	0x10012a94
1000aef8:	10012a78 	.word	0x10012a78
1000aefc:	100106b4 	.word	0x100106b4
1000af00:	10010710 	.word	0x10010710
1000af04:	10010734 	.word	0x10010734
1000af08:	1000baa9 	.word	0x1000baa9
1000af0c:	10010638 	.word	0x10010638
1000af10:	0000028f 	.word	0x0000028f
1000af14:	1000bb2d 	.word	0x1000bb2d
1000af18:	10010678 	.word	0x10010678
1000af1c:	100082a5 	.word	0x100082a5
1000af20:	1001075c 	.word	0x1001075c
1000af24:	10010600 	.word	0x10010600
1000af28:	10010618 	.word	0x10010618
1000af2c:	10010658 	.word	0x10010658

1000af30 <internal_event_post>:
1000af30:	b570      	push	{r4, r5, r6, lr}
1000af32:	4d12      	ldr	r5, [pc, #72]	; (1000af7c <internal_event_post+0x4c>)
1000af34:	682c      	ldr	r4, [r5, #0]
1000af36:	2c00      	cmp	r4, #0
1000af38:	d014      	beq.n	1000af64 <internal_event_post+0x34>
1000af3a:	6826      	ldr	r6, [r4, #0]
1000af3c:	60e2      	str	r2, [r4, #12]
1000af3e:	602e      	str	r6, [r5, #0]
1000af40:	2500      	movs	r5, #0
1000af42:	4a0f      	ldr	r2, [pc, #60]	; (1000af80 <internal_event_post+0x50>)
1000af44:	8123      	strh	r3, [r4, #8]
1000af46:	6813      	ldr	r3, [r2, #0]
1000af48:	6025      	str	r5, [r4, #0]
1000af4a:	80a0      	strh	r0, [r4, #4]
1000af4c:	80e1      	strh	r1, [r4, #6]
1000af4e:	42ab      	cmp	r3, r5
1000af50:	d101      	bne.n	1000af56 <internal_event_post+0x26>
1000af52:	6014      	str	r4, [r2, #0]
1000af54:	e011      	b.n	1000af7a <internal_event_post+0x4a>
1000af56:	681a      	ldr	r2, [r3, #0]
1000af58:	2a00      	cmp	r2, #0
1000af5a:	d001      	beq.n	1000af60 <internal_event_post+0x30>
1000af5c:	1c13      	adds	r3, r2, #0
1000af5e:	e7fa      	b.n	1000af56 <internal_event_post+0x26>
1000af60:	601c      	str	r4, [r3, #0]
1000af62:	e00a      	b.n	1000af7a <internal_event_post+0x4a>
1000af64:	b2c4      	uxtb	r4, r0
1000af66:	2c00      	cmp	r4, #0
1000af68:	d107      	bne.n	1000af7a <internal_event_post+0x4a>
1000af6a:	4c06      	ldr	r4, [pc, #24]	; (1000af84 <internal_event_post+0x54>)
1000af6c:	60e2      	str	r2, [r4, #12]
1000af6e:	2201      	movs	r2, #1
1000af70:	8123      	strh	r3, [r4, #8]
1000af72:	4b05      	ldr	r3, [pc, #20]	; (1000af88 <internal_event_post+0x58>)
1000af74:	80a0      	strh	r0, [r4, #4]
1000af76:	80e1      	strh	r1, [r4, #6]
1000af78:	701a      	strb	r2, [r3, #0]
1000af7a:	bd70      	pop	{r4, r5, r6, pc}
1000af7c:	10011e20 	.word	0x10011e20
1000af80:	10011e1c 	.word	0x10011e1c
1000af84:	10011e08 	.word	0x10011e08
1000af88:	10011e18 	.word	0x10011e18

1000af8c <internal_event_init>:
1000af8c:	b510      	push	{r4, lr}
1000af8e:	4b08      	ldr	r3, [pc, #32]	; (1000afb0 <internal_event_init+0x24>)
1000af90:	0900      	lsrs	r0, r0, #4
1000af92:	0100      	lsls	r0, r0, #4
1000af94:	681a      	ldr	r2, [r3, #0]
1000af96:	1808      	adds	r0, r1, r0
1000af98:	4281      	cmp	r1, r0
1000af9a:	d003      	beq.n	1000afa4 <internal_event_init+0x18>
1000af9c:	600a      	str	r2, [r1, #0]
1000af9e:	1c0a      	adds	r2, r1, #0
1000afa0:	3110      	adds	r1, #16
1000afa2:	e7f9      	b.n	1000af98 <internal_event_init+0xc>
1000afa4:	601a      	str	r2, [r3, #0]
1000afa6:	2200      	movs	r2, #0
1000afa8:	4b02      	ldr	r3, [pc, #8]	; (1000afb4 <internal_event_init+0x28>)
1000afaa:	601a      	str	r2, [r3, #0]
1000afac:	bd10      	pop	{r4, pc}
1000afae:	46c0      	nop			; (mov r8, r8)
1000afb0:	10011e20 	.word	0x10011e20
1000afb4:	10011e1c 	.word	0x10011e1c

1000afb8 <special_events_handler>:
1000afb8:	b538      	push	{r3, r4, r5, lr}
1000afba:	4c1b      	ldr	r4, [pc, #108]	; (1000b028 <special_events_handler+0x70>)
1000afbc:	1c03      	adds	r3, r0, #0
1000afbe:	8825      	ldrh	r5, [r4, #0]
1000afc0:	1c08      	adds	r0, r1, #0
1000afc2:	1c21      	adds	r1, r4, #0
1000afc4:	429d      	cmp	r5, r3
1000afc6:	d107      	bne.n	1000afd8 <special_events_handler+0x20>
1000afc8:	88a5      	ldrh	r5, [r4, #4]
1000afca:	4285      	cmp	r5, r0
1000afcc:	d104      	bne.n	1000afd8 <special_events_handler+0x20>
1000afce:	2301      	movs	r3, #1
1000afd0:	425b      	negs	r3, r3
1000afd2:	8023      	strh	r3, [r4, #0]
1000afd4:	60a2      	str	r2, [r4, #8]
1000afd6:	e009      	b.n	1000afec <special_events_handler+0x34>
1000afd8:	884c      	ldrh	r4, [r1, #2]
1000afda:	429c      	cmp	r4, r3
1000afdc:	d10a      	bne.n	1000aff4 <special_events_handler+0x3c>
1000afde:	888c      	ldrh	r4, [r1, #4]
1000afe0:	4284      	cmp	r4, r0
1000afe2:	d107      	bne.n	1000aff4 <special_events_handler+0x3c>
1000afe4:	2301      	movs	r3, #1
1000afe6:	425b      	negs	r3, r3
1000afe8:	804b      	strh	r3, [r1, #2]
1000afea:	608a      	str	r2, [r1, #8]
1000afec:	4b0f      	ldr	r3, [pc, #60]	; (1000b02c <special_events_handler+0x74>)
1000afee:	4798      	blx	r3
1000aff0:	2001      	movs	r0, #1
1000aff2:	e017      	b.n	1000b024 <special_events_handler+0x6c>
1000aff4:	490e      	ldr	r1, [pc, #56]	; (1000b030 <special_events_handler+0x78>)
1000aff6:	428b      	cmp	r3, r1
1000aff8:	d00e      	beq.n	1000b018 <special_events_handler+0x60>
1000affa:	490e      	ldr	r1, [pc, #56]	; (1000b034 <special_events_handler+0x7c>)
1000affc:	428b      	cmp	r3, r1
1000affe:	d007      	beq.n	1000b010 <special_events_handler+0x58>
1000b000:	490d      	ldr	r1, [pc, #52]	; (1000b038 <special_events_handler+0x80>)
1000b002:	2000      	movs	r0, #0
1000b004:	428b      	cmp	r3, r1
1000b006:	d10d      	bne.n	1000b024 <special_events_handler+0x6c>
1000b008:	1c10      	adds	r0, r2, #0
1000b00a:	4b0c      	ldr	r3, [pc, #48]	; (1000b03c <special_events_handler+0x84>)
1000b00c:	4798      	blx	r3
1000b00e:	e7ef      	b.n	1000aff0 <special_events_handler+0x38>
1000b010:	1c11      	adds	r1, r2, #0
1000b012:	4b0b      	ldr	r3, [pc, #44]	; (1000b040 <special_events_handler+0x88>)
1000b014:	2200      	movs	r2, #0
1000b016:	e002      	b.n	1000b01e <special_events_handler+0x66>
1000b018:	1c11      	adds	r1, r2, #0
1000b01a:	2200      	movs	r2, #0
1000b01c:	4b09      	ldr	r3, [pc, #36]	; (1000b044 <special_events_handler+0x8c>)
1000b01e:	4798      	blx	r3
1000b020:	4243      	negs	r3, r0
1000b022:	4158      	adcs	r0, r3
1000b024:	bd38      	pop	{r3, r4, r5, pc}
1000b026:	46c0      	nop			; (mov r8, r8)
1000b028:	10012ab4 	.word	0x10012ab4
1000b02c:	1000c33d 	.word	0x1000c33d
1000b030:	00000e13 	.word	0x00000e13
1000b034:	00000e15 	.word	0x00000e15
1000b038:	00000e01 	.word	0x00000e01
1000b03c:	1000c6ad 	.word	0x1000c6ad
1000b040:	1000c86d 	.word	0x1000c86d
1000b044:	1000c945 	.word	0x1000c945

1000b048 <at_ble_event_get>:
1000b048:	2300      	movs	r3, #0
1000b04a:	b5f0      	push	{r4, r5, r6, r7, lr}
1000b04c:	b087      	sub	sp, #28
1000b04e:	9204      	str	r2, [sp, #16]
1000b050:	7003      	strb	r3, [r0, #0]
1000b052:	9b04      	ldr	r3, [sp, #16]
1000b054:	9003      	str	r0, [sp, #12]
1000b056:	3b01      	subs	r3, #1
1000b058:	1c0d      	adds	r5, r1, #0
1000b05a:	9305      	str	r3, [sp, #20]
1000b05c:	3303      	adds	r3, #3
1000b05e:	d802      	bhi.n	1000b066 <at_ble_event_get+0x1e>
1000b060:	9804      	ldr	r0, [sp, #16]
1000b062:	4bae      	ldr	r3, [pc, #696]	; (1000b31c <at_ble_event_get+0x2d4>)
1000b064:	4798      	blx	r3
1000b066:	9b05      	ldr	r3, [sp, #20]
1000b068:	4cad      	ldr	r4, [pc, #692]	; (1000b320 <at_ble_event_get+0x2d8>)
1000b06a:	3303      	adds	r3, #3
1000b06c:	d902      	bls.n	1000b074 <at_ble_event_get+0x2c>
1000b06e:	2300      	movs	r3, #0
1000b070:	9302      	str	r3, [sp, #8]
1000b072:	e015      	b.n	1000b0a0 <at_ble_event_get+0x58>
1000b074:	2300      	movs	r3, #0
1000b076:	9302      	str	r3, [sp, #8]
1000b078:	6823      	ldr	r3, [r4, #0]
1000b07a:	2b00      	cmp	r3, #0
1000b07c:	d113      	bne.n	1000b0a6 <at_ble_event_get+0x5e>
1000b07e:	9b02      	ldr	r3, [sp, #8]
1000b080:	2bd0      	cmp	r3, #208	; 0xd0
1000b082:	d100      	bne.n	1000b086 <at_ble_event_get+0x3e>
1000b084:	e2da      	b.n	1000b63c <at_ble_event_get+0x5f4>
1000b086:	9804      	ldr	r0, [sp, #16]
1000b088:	4ba6      	ldr	r3, [pc, #664]	; (1000b324 <at_ble_event_get+0x2dc>)
1000b08a:	4798      	blx	r3
1000b08c:	9002      	str	r0, [sp, #8]
1000b08e:	2802      	cmp	r0, #2
1000b090:	d1f2      	bne.n	1000b078 <at_ble_event_get+0x30>
1000b092:	e03f      	b.n	1000b114 <at_ble_event_get+0xcc>
1000b094:	9804      	ldr	r0, [sp, #16]
1000b096:	4ba3      	ldr	r3, [pc, #652]	; (1000b324 <at_ble_event_get+0x2dc>)
1000b098:	4798      	blx	r3
1000b09a:	9002      	str	r0, [sp, #8]
1000b09c:	2802      	cmp	r0, #2
1000b09e:	d039      	beq.n	1000b114 <at_ble_event_get+0xcc>
1000b0a0:	6823      	ldr	r3, [r4, #0]
1000b0a2:	2b00      	cmp	r3, #0
1000b0a4:	d0f6      	beq.n	1000b094 <at_ble_event_get+0x4c>
1000b0a6:	9b02      	ldr	r3, [sp, #8]
1000b0a8:	2bd0      	cmp	r3, #208	; 0xd0
1000b0aa:	d100      	bne.n	1000b0ae <at_ble_event_get+0x66>
1000b0ac:	e2c6      	b.n	1000b63c <at_ble_event_get+0x5f4>
1000b0ae:	9b02      	ldr	r3, [sp, #8]
1000b0b0:	3b03      	subs	r3, #3
1000b0b2:	1e5a      	subs	r2, r3, #1
1000b0b4:	4193      	sbcs	r3, r2
1000b0b6:	9a02      	ldr	r2, [sp, #8]
1000b0b8:	425b      	negs	r3, r3
1000b0ba:	401a      	ands	r2, r3
1000b0bc:	6823      	ldr	r3, [r4, #0]
1000b0be:	9202      	str	r2, [sp, #8]
1000b0c0:	2b00      	cmp	r3, #0
1000b0c2:	d100      	bne.n	1000b0c6 <at_ble_event_get+0x7e>
1000b0c4:	e2c2      	b.n	1000b64c <at_ble_event_get+0x604>
1000b0c6:	681a      	ldr	r2, [r3, #0]
1000b0c8:	68de      	ldr	r6, [r3, #12]
1000b0ca:	6022      	str	r2, [r4, #0]
1000b0cc:	88da      	ldrh	r2, [r3, #6]
1000b0ce:	9201      	str	r2, [sp, #4]
1000b0d0:	4a95      	ldr	r2, [pc, #596]	; (1000b328 <at_ble_event_get+0x2e0>)
1000b0d2:	889c      	ldrh	r4, [r3, #4]
1000b0d4:	6811      	ldr	r1, [r2, #0]
1000b0d6:	6013      	str	r3, [r2, #0]
1000b0d8:	6019      	str	r1, [r3, #0]
1000b0da:	4b94      	ldr	r3, [pc, #592]	; (1000b32c <at_ble_event_get+0x2e4>)
1000b0dc:	781b      	ldrb	r3, [r3, #0]
1000b0de:	2b01      	cmp	r3, #1
1000b0e0:	d10f      	bne.n	1000b102 <at_ble_event_get+0xba>
1000b0e2:	4b93      	ldr	r3, [pc, #588]	; (1000b330 <at_ble_event_get+0x2e8>)
1000b0e4:	4a92      	ldr	r2, [pc, #584]	; (1000b330 <at_ble_event_get+0x2e8>)
1000b0e6:	8898      	ldrh	r0, [r3, #4]
1000b0e8:	88d9      	ldrh	r1, [r3, #6]
1000b0ea:	68d2      	ldr	r2, [r2, #12]
1000b0ec:	891b      	ldrh	r3, [r3, #8]
1000b0ee:	4f91      	ldr	r7, [pc, #580]	; (1000b334 <at_ble_event_get+0x2ec>)
1000b0f0:	47b8      	blx	r7
1000b0f2:	2210      	movs	r2, #16
1000b0f4:	4b90      	ldr	r3, [pc, #576]	; (1000b338 <at_ble_event_get+0x2f0>)
1000b0f6:	488e      	ldr	r0, [pc, #568]	; (1000b330 <at_ble_event_get+0x2e8>)
1000b0f8:	2100      	movs	r1, #0
1000b0fa:	4798      	blx	r3
1000b0fc:	2300      	movs	r3, #0
1000b0fe:	4a8b      	ldr	r2, [pc, #556]	; (1000b32c <at_ble_event_get+0x2e4>)
1000b100:	7013      	strb	r3, [r2, #0]
1000b102:	9b02      	ldr	r3, [sp, #8]
1000b104:	2b00      	cmp	r3, #0
1000b106:	d114      	bne.n	1000b132 <at_ble_event_get+0xea>
1000b108:	4b8c      	ldr	r3, [pc, #560]	; (1000b33c <at_ble_event_get+0x2f4>)
1000b10a:	429c      	cmp	r4, r3
1000b10c:	d009      	beq.n	1000b122 <at_ble_event_get+0xda>
1000b10e:	4b8c      	ldr	r3, [pc, #560]	; (1000b340 <at_ble_event_get+0x2f8>)
1000b110:	429c      	cmp	r4, r3
1000b112:	d127      	bne.n	1000b164 <at_ble_event_get+0x11c>
1000b114:	233a      	movs	r3, #58	; 0x3a
1000b116:	9a03      	ldr	r2, [sp, #12]
1000b118:	7013      	strb	r3, [r2, #0]
1000b11a:	2300      	movs	r3, #0
1000b11c:	9302      	str	r3, [sp, #8]
1000b11e:	1c1d      	adds	r5, r3, #0
1000b120:	e007      	b.n	1000b132 <at_ble_event_get+0xea>
1000b122:	9b01      	ldr	r3, [sp, #4]
1000b124:	42a3      	cmp	r3, r4
1000b126:	d000      	beq.n	1000b12a <at_ble_event_get+0xe2>
1000b128:	e28a      	b.n	1000b640 <at_ble_event_get+0x5f8>
1000b12a:	2338      	movs	r3, #56	; 0x38
1000b12c:	9a03      	ldr	r2, [sp, #12]
1000b12e:	7013      	strb	r3, [r2, #0]
1000b130:	602e      	str	r6, [r5, #0]
1000b132:	9b03      	ldr	r3, [sp, #12]
1000b134:	781b      	ldrb	r3, [r3, #0]
1000b136:	2b3b      	cmp	r3, #59	; 0x3b
1000b138:	d101      	bne.n	1000b13e <at_ble_event_get+0xf6>
1000b13a:	4b82      	ldr	r3, [pc, #520]	; (1000b344 <at_ble_event_get+0x2fc>)
1000b13c:	4798      	blx	r3
1000b13e:	9b03      	ldr	r3, [sp, #12]
1000b140:	781b      	ldrb	r3, [r3, #0]
1000b142:	2b3b      	cmp	r3, #59	; 0x3b
1000b144:	d003      	beq.n	1000b14e <at_ble_event_get+0x106>
1000b146:	9b05      	ldr	r3, [sp, #20]
1000b148:	3303      	adds	r3, #3
1000b14a:	d904      	bls.n	1000b156 <at_ble_event_get+0x10e>
1000b14c:	e283      	b.n	1000b656 <at_ble_event_get+0x60e>
1000b14e:	9b02      	ldr	r3, [sp, #8]
1000b150:	2b00      	cmp	r3, #0
1000b152:	d088      	beq.n	1000b066 <at_ble_event_get+0x1e>
1000b154:	e7f7      	b.n	1000b146 <at_ble_event_get+0xfe>
1000b156:	9b02      	ldr	r3, [sp, #8]
1000b158:	2bd0      	cmp	r3, #208	; 0xd0
1000b15a:	d100      	bne.n	1000b15e <at_ble_event_get+0x116>
1000b15c:	e27b      	b.n	1000b656 <at_ble_event_get+0x60e>
1000b15e:	4b7a      	ldr	r3, [pc, #488]	; (1000b348 <at_ble_event_get+0x300>)
1000b160:	4798      	blx	r3
1000b162:	e278      	b.n	1000b656 <at_ble_event_get+0x60e>
1000b164:	9b01      	ldr	r3, [sp, #4]
1000b166:	2bbb      	cmp	r3, #187	; 0xbb
1000b168:	d125      	bne.n	1000b1b6 <at_ble_event_get+0x16e>
1000b16a:	2cbb      	cmp	r4, #187	; 0xbb
1000b16c:	d123      	bne.n	1000b1b6 <at_ble_event_get+0x16e>
1000b16e:	466b      	mov	r3, sp
1000b170:	891b      	ldrh	r3, [r3, #8]
1000b172:	80ab      	strh	r3, [r5, #4]
1000b174:	78b3      	ldrb	r3, [r6, #2]
1000b176:	7872      	ldrb	r2, [r6, #1]
1000b178:	78f0      	ldrb	r0, [r6, #3]
1000b17a:	021b      	lsls	r3, r3, #8
1000b17c:	4313      	orrs	r3, r2
1000b17e:	7971      	ldrb	r1, [r6, #5]
1000b180:	7932      	ldrb	r2, [r6, #4]
1000b182:	70a8      	strb	r0, [r5, #2]
1000b184:	4871      	ldr	r0, [pc, #452]	; (1000b34c <at_ble_event_get+0x304>)
1000b186:	802b      	strh	r3, [r5, #0]
1000b188:	4283      	cmp	r3, r0
1000b18a:	d806      	bhi.n	1000b19a <at_ble_event_get+0x152>
1000b18c:	4a70      	ldr	r2, [pc, #448]	; (1000b350 <at_ble_event_get+0x308>)
1000b18e:	4293      	cmp	r3, r2
1000b190:	d20b      	bcs.n	1000b1aa <at_ble_event_get+0x162>
1000b192:	4a70      	ldr	r2, [pc, #448]	; (1000b354 <at_ble_event_get+0x30c>)
1000b194:	4293      	cmp	r3, r2
1000b196:	d008      	beq.n	1000b1aa <at_ble_event_get+0x162>
1000b198:	e009      	b.n	1000b1ae <at_ble_event_get+0x166>
1000b19a:	486f      	ldr	r0, [pc, #444]	; (1000b358 <at_ble_event_get+0x310>)
1000b19c:	4283      	cmp	r3, r0
1000b19e:	d106      	bne.n	1000b1ae <at_ble_event_get+0x166>
1000b1a0:	020b      	lsls	r3, r1, #8
1000b1a2:	4313      	orrs	r3, r2
1000b1a4:	80ab      	strh	r3, [r5, #4]
1000b1a6:	2337      	movs	r3, #55	; 0x37
1000b1a8:	e002      	b.n	1000b1b0 <at_ble_event_get+0x168>
1000b1aa:	2336      	movs	r3, #54	; 0x36
1000b1ac:	e000      	b.n	1000b1b0 <at_ble_event_get+0x168>
1000b1ae:	2300      	movs	r3, #0
1000b1b0:	9a03      	ldr	r2, [sp, #12]
1000b1b2:	7013      	strb	r3, [r2, #0]
1000b1b4:	e7bd      	b.n	1000b132 <at_ble_event_get+0xea>
1000b1b6:	4b69      	ldr	r3, [pc, #420]	; (1000b35c <at_ble_event_get+0x314>)
1000b1b8:	429c      	cmp	r4, r3
1000b1ba:	d100      	bne.n	1000b1be <at_ble_event_get+0x176>
1000b1bc:	e144      	b.n	1000b448 <at_ble_event_get+0x400>
1000b1be:	d865      	bhi.n	1000b28c <at_ble_event_get+0x244>
1000b1c0:	4b67      	ldr	r3, [pc, #412]	; (1000b360 <at_ble_event_get+0x318>)
1000b1c2:	429c      	cmp	r4, r3
1000b1c4:	d100      	bne.n	1000b1c8 <at_ble_event_get+0x180>
1000b1c6:	e1d5      	b.n	1000b574 <at_ble_event_get+0x52c>
1000b1c8:	d82f      	bhi.n	1000b22a <at_ble_event_get+0x1e2>
1000b1ca:	4b66      	ldr	r3, [pc, #408]	; (1000b364 <at_ble_event_get+0x31c>)
1000b1cc:	429c      	cmp	r4, r3
1000b1ce:	d100      	bne.n	1000b1d2 <at_ble_event_get+0x18a>
1000b1d0:	e1e0      	b.n	1000b594 <at_ble_event_get+0x54c>
1000b1d2:	d813      	bhi.n	1000b1fc <at_ble_event_get+0x1b4>
1000b1d4:	4b64      	ldr	r3, [pc, #400]	; (1000b368 <at_ble_event_get+0x320>)
1000b1d6:	429c      	cmp	r4, r3
1000b1d8:	d100      	bne.n	1000b1dc <at_ble_event_get+0x194>
1000b1da:	e1a3      	b.n	1000b524 <at_ble_event_get+0x4dc>
1000b1dc:	d804      	bhi.n	1000b1e8 <at_ble_event_get+0x1a0>
1000b1de:	2638      	movs	r6, #56	; 0x38
1000b1e0:	42b4      	cmp	r4, r6
1000b1e2:	d100      	bne.n	1000b1e6 <at_ble_event_get+0x19e>
1000b1e4:	e225      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b1e6:	e117      	b.n	1000b418 <at_ble_event_get+0x3d0>
1000b1e8:	4b60      	ldr	r3, [pc, #384]	; (1000b36c <at_ble_event_get+0x324>)
1000b1ea:	429c      	cmp	r4, r3
1000b1ec:	d100      	bne.n	1000b1f0 <at_ble_event_get+0x1a8>
1000b1ee:	e19f      	b.n	1000b530 <at_ble_event_get+0x4e8>
1000b1f0:	33fe      	adds	r3, #254	; 0xfe
1000b1f2:	33ff      	adds	r3, #255	; 0xff
1000b1f4:	429c      	cmp	r4, r3
1000b1f6:	d100      	bne.n	1000b1fa <at_ble_event_get+0x1b2>
1000b1f8:	e1d3      	b.n	1000b5a2 <at_ble_event_get+0x55a>
1000b1fa:	e10d      	b.n	1000b418 <at_ble_event_get+0x3d0>
1000b1fc:	4b5c      	ldr	r3, [pc, #368]	; (1000b370 <at_ble_event_get+0x328>)
1000b1fe:	429c      	cmp	r4, r3
1000b200:	d100      	bne.n	1000b204 <at_ble_event_get+0x1bc>
1000b202:	e1a9      	b.n	1000b558 <at_ble_event_get+0x510>
1000b204:	d808      	bhi.n	1000b218 <at_ble_event_get+0x1d0>
1000b206:	4b5b      	ldr	r3, [pc, #364]	; (1000b374 <at_ble_event_get+0x32c>)
1000b208:	429c      	cmp	r4, r3
1000b20a:	d100      	bne.n	1000b20e <at_ble_event_get+0x1c6>
1000b20c:	e196      	b.n	1000b53c <at_ble_event_get+0x4f4>
1000b20e:	4b5a      	ldr	r3, [pc, #360]	; (1000b378 <at_ble_event_get+0x330>)
1000b210:	429c      	cmp	r4, r3
1000b212:	d100      	bne.n	1000b216 <at_ble_event_get+0x1ce>
1000b214:	e199      	b.n	1000b54a <at_ble_event_get+0x502>
1000b216:	e0ff      	b.n	1000b418 <at_ble_event_get+0x3d0>
1000b218:	4b58      	ldr	r3, [pc, #352]	; (1000b37c <at_ble_event_get+0x334>)
1000b21a:	429c      	cmp	r4, r3
1000b21c:	d100      	bne.n	1000b220 <at_ble_event_get+0x1d8>
1000b21e:	e1a2      	b.n	1000b566 <at_ble_event_get+0x51e>
1000b220:	4b57      	ldr	r3, [pc, #348]	; (1000b380 <at_ble_event_get+0x338>)
1000b222:	429c      	cmp	r4, r3
1000b224:	d100      	bne.n	1000b228 <at_ble_event_get+0x1e0>
1000b226:	e1d4      	b.n	1000b5d2 <at_ble_event_get+0x58a>
1000b228:	e0f6      	b.n	1000b418 <at_ble_event_get+0x3d0>
1000b22a:	4b56      	ldr	r3, [pc, #344]	; (1000b384 <at_ble_event_get+0x33c>)
1000b22c:	429c      	cmp	r4, r3
1000b22e:	d100      	bne.n	1000b232 <at_ble_event_get+0x1ea>
1000b230:	e1c8      	b.n	1000b5c4 <at_ble_event_get+0x57c>
1000b232:	d812      	bhi.n	1000b25a <at_ble_event_get+0x212>
1000b234:	4b54      	ldr	r3, [pc, #336]	; (1000b388 <at_ble_event_get+0x340>)
1000b236:	429c      	cmp	r4, r3
1000b238:	d100      	bne.n	1000b23c <at_ble_event_get+0x1f4>
1000b23a:	e1d1      	b.n	1000b5e0 <at_ble_event_get+0x598>
1000b23c:	d804      	bhi.n	1000b248 <at_ble_event_get+0x200>
1000b23e:	4b53      	ldr	r3, [pc, #332]	; (1000b38c <at_ble_event_get+0x344>)
1000b240:	429c      	cmp	r4, r3
1000b242:	d100      	bne.n	1000b246 <at_ble_event_get+0x1fe>
1000b244:	e19b      	b.n	1000b57e <at_ble_event_get+0x536>
1000b246:	e0e7      	b.n	1000b418 <at_ble_event_get+0x3d0>
1000b248:	4b51      	ldr	r3, [pc, #324]	; (1000b390 <at_ble_event_get+0x348>)
1000b24a:	429c      	cmp	r4, r3
1000b24c:	d100      	bne.n	1000b250 <at_ble_event_get+0x208>
1000b24e:	e1ad      	b.n	1000b5ac <at_ble_event_get+0x564>
1000b250:	4b50      	ldr	r3, [pc, #320]	; (1000b394 <at_ble_event_get+0x34c>)
1000b252:	429c      	cmp	r4, r3
1000b254:	d100      	bne.n	1000b258 <at_ble_event_get+0x210>
1000b256:	e1b0      	b.n	1000b5ba <at_ble_event_get+0x572>
1000b258:	e0de      	b.n	1000b418 <at_ble_event_get+0x3d0>
1000b25a:	4b4f      	ldr	r3, [pc, #316]	; (1000b398 <at_ble_event_get+0x350>)
1000b25c:	429c      	cmp	r4, r3
1000b25e:	d100      	bne.n	1000b262 <at_ble_event_get+0x21a>
1000b260:	e0e0      	b.n	1000b424 <at_ble_event_get+0x3dc>
1000b262:	d809      	bhi.n	1000b278 <at_ble_event_get+0x230>
1000b264:	3b08      	subs	r3, #8
1000b266:	429c      	cmp	r4, r3
1000b268:	d100      	bne.n	1000b26c <at_ble_event_get+0x224>
1000b26a:	e0d7      	b.n	1000b41c <at_ble_event_get+0x3d4>
1000b26c:	4b4b      	ldr	r3, [pc, #300]	; (1000b39c <at_ble_event_get+0x354>)
1000b26e:	2639      	movs	r6, #57	; 0x39
1000b270:	429c      	cmp	r4, r3
1000b272:	d100      	bne.n	1000b276 <at_ble_event_get+0x22e>
1000b274:	e1dd      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b276:	e0cf      	b.n	1000b418 <at_ble_event_get+0x3d0>
1000b278:	23d1      	movs	r3, #209	; 0xd1
1000b27a:	011b      	lsls	r3, r3, #4
1000b27c:	429c      	cmp	r4, r3
1000b27e:	d100      	bne.n	1000b282 <at_ble_event_get+0x23a>
1000b280:	e0d6      	b.n	1000b430 <at_ble_event_get+0x3e8>
1000b282:	4b47      	ldr	r3, [pc, #284]	; (1000b3a0 <at_ble_event_get+0x358>)
1000b284:	429c      	cmp	r4, r3
1000b286:	d100      	bne.n	1000b28a <at_ble_event_get+0x242>
1000b288:	e0d8      	b.n	1000b43c <at_ble_event_get+0x3f4>
1000b28a:	e0c5      	b.n	1000b418 <at_ble_event_get+0x3d0>
1000b28c:	4b45      	ldr	r3, [pc, #276]	; (1000b3a4 <at_ble_event_get+0x35c>)
1000b28e:	429c      	cmp	r4, r3
1000b290:	d100      	bne.n	1000b294 <at_ble_event_get+0x24c>
1000b292:	e117      	b.n	1000b4c4 <at_ble_event_get+0x47c>
1000b294:	d82e      	bhi.n	1000b2f4 <at_ble_event_get+0x2ac>
1000b296:	4b44      	ldr	r3, [pc, #272]	; (1000b3a8 <at_ble_event_get+0x360>)
1000b298:	429c      	cmp	r4, r3
1000b29a:	d100      	bne.n	1000b29e <at_ble_event_get+0x256>
1000b29c:	e13d      	b.n	1000b51a <at_ble_event_get+0x4d2>
1000b29e:	d812      	bhi.n	1000b2c6 <at_ble_event_get+0x27e>
1000b2a0:	4b42      	ldr	r3, [pc, #264]	; (1000b3ac <at_ble_event_get+0x364>)
1000b2a2:	429c      	cmp	r4, r3
1000b2a4:	d100      	bne.n	1000b2a8 <at_ble_event_get+0x260>
1000b2a6:	e0e8      	b.n	1000b47a <at_ble_event_get+0x432>
1000b2a8:	d804      	bhi.n	1000b2b4 <at_ble_event_get+0x26c>
1000b2aa:	3b03      	subs	r3, #3
1000b2ac:	429c      	cmp	r4, r3
1000b2ae:	d100      	bne.n	1000b2b2 <at_ble_event_get+0x26a>
1000b2b0:	e0d0      	b.n	1000b454 <at_ble_event_get+0x40c>
1000b2b2:	e0b1      	b.n	1000b418 <at_ble_event_get+0x3d0>
1000b2b4:	4b3e      	ldr	r3, [pc, #248]	; (1000b3b0 <at_ble_event_get+0x368>)
1000b2b6:	429c      	cmp	r4, r3
1000b2b8:	d100      	bne.n	1000b2bc <at_ble_event_get+0x274>
1000b2ba:	e0d0      	b.n	1000b45e <at_ble_event_get+0x416>
1000b2bc:	4b3d      	ldr	r3, [pc, #244]	; (1000b3b4 <at_ble_event_get+0x36c>)
1000b2be:	429c      	cmp	r4, r3
1000b2c0:	d100      	bne.n	1000b2c4 <at_ble_event_get+0x27c>
1000b2c2:	e0f9      	b.n	1000b4b8 <at_ble_event_get+0x470>
1000b2c4:	e0a8      	b.n	1000b418 <at_ble_event_get+0x3d0>
1000b2c6:	4b3c      	ldr	r3, [pc, #240]	; (1000b3b8 <at_ble_event_get+0x370>)
1000b2c8:	429c      	cmp	r4, r3
1000b2ca:	d100      	bne.n	1000b2ce <at_ble_event_get+0x286>
1000b2cc:	e0db      	b.n	1000b486 <at_ble_event_get+0x43e>
1000b2ce:	d808      	bhi.n	1000b2e2 <at_ble_event_get+0x29a>
1000b2d0:	4b3a      	ldr	r3, [pc, #232]	; (1000b3bc <at_ble_event_get+0x374>)
1000b2d2:	429c      	cmp	r4, r3
1000b2d4:	d100      	bne.n	1000b2d8 <at_ble_event_get+0x290>
1000b2d6:	e11b      	b.n	1000b510 <at_ble_event_get+0x4c8>
1000b2d8:	4b39      	ldr	r3, [pc, #228]	; (1000b3c0 <at_ble_event_get+0x378>)
1000b2da:	429c      	cmp	r4, r3
1000b2dc:	d100      	bne.n	1000b2e0 <at_ble_event_get+0x298>
1000b2de:	e0d8      	b.n	1000b492 <at_ble_event_get+0x44a>
1000b2e0:	e09a      	b.n	1000b418 <at_ble_event_get+0x3d0>
1000b2e2:	4b38      	ldr	r3, [pc, #224]	; (1000b3c4 <at_ble_event_get+0x37c>)
1000b2e4:	429c      	cmp	r4, r3
1000b2e6:	d100      	bne.n	1000b2ea <at_ble_event_get+0x2a2>
1000b2e8:	e0d8      	b.n	1000b49c <at_ble_event_get+0x454>
1000b2ea:	4b37      	ldr	r3, [pc, #220]	; (1000b3c8 <at_ble_event_get+0x380>)
1000b2ec:	429c      	cmp	r4, r3
1000b2ee:	d100      	bne.n	1000b2f2 <at_ble_event_get+0x2aa>
1000b2f0:	e0db      	b.n	1000b4aa <at_ble_event_get+0x462>
1000b2f2:	e091      	b.n	1000b418 <at_ble_event_get+0x3d0>
1000b2f4:	4b35      	ldr	r3, [pc, #212]	; (1000b3cc <at_ble_event_get+0x384>)
1000b2f6:	429c      	cmp	r4, r3
1000b2f8:	d100      	bne.n	1000b2fc <at_ble_event_get+0x2b4>
1000b2fa:	e0f7      	b.n	1000b4ec <at_ble_event_get+0x4a4>
1000b2fc:	d876      	bhi.n	1000b3ec <at_ble_event_get+0x3a4>
1000b2fe:	4b34      	ldr	r3, [pc, #208]	; (1000b3d0 <at_ble_event_get+0x388>)
1000b300:	429c      	cmp	r4, r3
1000b302:	d100      	bne.n	1000b306 <at_ble_event_get+0x2be>
1000b304:	e0f8      	b.n	1000b4f8 <at_ble_event_get+0x4b0>
1000b306:	d869      	bhi.n	1000b3dc <at_ble_event_get+0x394>
1000b308:	4b32      	ldr	r3, [pc, #200]	; (1000b3d4 <at_ble_event_get+0x38c>)
1000b30a:	429c      	cmp	r4, r3
1000b30c:	d100      	bne.n	1000b310 <at_ble_event_get+0x2c8>
1000b30e:	e0e0      	b.n	1000b4d2 <at_ble_event_get+0x48a>
1000b310:	4b31      	ldr	r3, [pc, #196]	; (1000b3d8 <at_ble_event_get+0x390>)
1000b312:	429c      	cmp	r4, r3
1000b314:	d100      	bne.n	1000b318 <at_ble_event_get+0x2d0>
1000b316:	e0a9      	b.n	1000b46c <at_ble_event_get+0x424>
1000b318:	e07e      	b.n	1000b418 <at_ble_event_get+0x3d0>
1000b31a:	46c0      	nop			; (mov r8, r8)
1000b31c:	1000c375 	.word	0x1000c375
1000b320:	10011e1c 	.word	0x10011e1c
1000b324:	1000a80d 	.word	0x1000a80d
1000b328:	10011e20 	.word	0x10011e20
1000b32c:	10011e18 	.word	0x10011e18
1000b330:	10011e08 	.word	0x10011e08
1000b334:	1000af31 	.word	0x1000af31
1000b338:	1000eadd 	.word	0x1000eadd
1000b33c:	0000ffff 	.word	0x0000ffff
1000b340:	0000fffe 	.word	0x0000fffe
1000b344:	1000aa89 	.word	0x1000aa89
1000b348:	1000c377 	.word	0x1000c377
1000b34c:	0000201e 	.word	0x0000201e
1000b350:	0000201d 	.word	0x0000201d
1000b354:	00000c03 	.word	0x00000c03
1000b358:	0000201f 	.word	0x0000201f
1000b35c:	00000d1c 	.word	0x00000d1c
1000b360:	00000c0c 	.word	0x00000c0c
1000b364:	00000c02 	.word	0x00000c02
1000b368:	00000a02 	.word	0x00000a02
1000b36c:	00000a03 	.word	0x00000a03
1000b370:	00000c06 	.word	0x00000c06
1000b374:	00000c04 	.word	0x00000c04
1000b378:	00000c05 	.word	0x00000c05
1000b37c:	00000c07 	.word	0x00000c07
1000b380:	00000c09 	.word	0x00000c09
1000b384:	00000c17 	.word	0x00000c17
1000b388:	00000c12 	.word	0x00000c12
1000b38c:	00000c0d 	.word	0x00000c0d
1000b390:	00000c13 	.word	0x00000c13
1000b394:	00000c15 	.word	0x00000c15
1000b398:	00000d08 	.word	0x00000d08
1000b39c:	00000d01 	.word	0x00000d01
1000b3a0:	00000d15 	.word	0x00000d15
1000b3a4:	00000e1b 	.word	0x00000e1b
1000b3a8:	00000e0f 	.word	0x00000e0f
1000b3ac:	00000e03 	.word	0x00000e03
1000b3b0:	00000e06 	.word	0x00000e06
1000b3b4:	00000e0a 	.word	0x00000e0a
1000b3b8:	00000e15 	.word	0x00000e15
1000b3bc:	00000e11 	.word	0x00000e11
1000b3c0:	00000e13 	.word	0x00000e13
1000b3c4:	00000e17 	.word	0x00000e17
1000b3c8:	00000e19 	.word	0x00000e19
1000b3cc:	00000e27 	.word	0x00000e27
1000b3d0:	00000e21 	.word	0x00000e21
1000b3d4:	00000e1c 	.word	0x00000e1c
1000b3d8:	00000e1d 	.word	0x00000e1d
1000b3dc:	4b9f      	ldr	r3, [pc, #636]	; (1000b65c <at_ble_event_get+0x614>)
1000b3de:	429c      	cmp	r4, r3
1000b3e0:	d07e      	beq.n	1000b4e0 <at_ble_event_get+0x498>
1000b3e2:	4b9f      	ldr	r3, [pc, #636]	; (1000b660 <at_ble_event_get+0x618>)
1000b3e4:	429c      	cmp	r4, r3
1000b3e6:	d100      	bne.n	1000b3ea <at_ble_event_get+0x3a2>
1000b3e8:	e08c      	b.n	1000b504 <at_ble_event_get+0x4bc>
1000b3ea:	e015      	b.n	1000b418 <at_ble_event_get+0x3d0>
1000b3ec:	4b9d      	ldr	r3, [pc, #628]	; (1000b664 <at_ble_event_get+0x61c>)
1000b3ee:	429c      	cmp	r4, r3
1000b3f0:	d100      	bne.n	1000b3f4 <at_ble_event_get+0x3ac>
1000b3f2:	e10a      	b.n	1000b60a <at_ble_event_get+0x5c2>
1000b3f4:	d808      	bhi.n	1000b408 <at_ble_event_get+0x3c0>
1000b3f6:	4b9c      	ldr	r3, [pc, #624]	; (1000b668 <at_ble_event_get+0x620>)
1000b3f8:	429c      	cmp	r4, r3
1000b3fa:	d100      	bne.n	1000b3fe <at_ble_event_get+0x3b6>
1000b3fc:	e0f7      	b.n	1000b5ee <at_ble_event_get+0x5a6>
1000b3fe:	4b9b      	ldr	r3, [pc, #620]	; (1000b66c <at_ble_event_get+0x624>)
1000b400:	429c      	cmp	r4, r3
1000b402:	d100      	bne.n	1000b406 <at_ble_event_get+0x3be>
1000b404:	e0fa      	b.n	1000b5fc <at_ble_event_get+0x5b4>
1000b406:	e007      	b.n	1000b418 <at_ble_event_get+0x3d0>
1000b408:	4b99      	ldr	r3, [pc, #612]	; (1000b670 <at_ble_event_get+0x628>)
1000b40a:	429c      	cmp	r4, r3
1000b40c:	d100      	bne.n	1000b410 <at_ble_event_get+0x3c8>
1000b40e:	e103      	b.n	1000b618 <at_ble_event_get+0x5d0>
1000b410:	4b98      	ldr	r3, [pc, #608]	; (1000b674 <at_ble_event_get+0x62c>)
1000b412:	429c      	cmp	r4, r3
1000b414:	d100      	bne.n	1000b418 <at_ble_event_get+0x3d0>
1000b416:	e106      	b.n	1000b626 <at_ble_event_get+0x5de>
1000b418:	2600      	movs	r6, #0
1000b41a:	e10a      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b41c:	1c30      	adds	r0, r6, #0
1000b41e:	1c29      	adds	r1, r5, #0
1000b420:	4b95      	ldr	r3, [pc, #596]	; (1000b678 <at_ble_event_get+0x630>)
1000b422:	e014      	b.n	1000b44e <at_ble_event_get+0x406>
1000b424:	1c30      	adds	r0, r6, #0
1000b426:	1c29      	adds	r1, r5, #0
1000b428:	4b94      	ldr	r3, [pc, #592]	; (1000b67c <at_ble_event_get+0x634>)
1000b42a:	4798      	blx	r3
1000b42c:	2604      	movs	r6, #4
1000b42e:	e100      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b430:	1c30      	adds	r0, r6, #0
1000b432:	1c29      	adds	r1, r5, #0
1000b434:	4b92      	ldr	r3, [pc, #584]	; (1000b680 <at_ble_event_get+0x638>)
1000b436:	4798      	blx	r3
1000b438:	2601      	movs	r6, #1
1000b43a:	e0fa      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b43c:	1c30      	adds	r0, r6, #0
1000b43e:	1c29      	adds	r1, r5, #0
1000b440:	4b90      	ldr	r3, [pc, #576]	; (1000b684 <at_ble_event_get+0x63c>)
1000b442:	4798      	blx	r3
1000b444:	260f      	movs	r6, #15
1000b446:	e0f4      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b448:	1c30      	adds	r0, r6, #0
1000b44a:	1c29      	adds	r1, r5, #0
1000b44c:	4b8e      	ldr	r3, [pc, #568]	; (1000b688 <at_ble_event_get+0x640>)
1000b44e:	4798      	blx	r3
1000b450:	1c06      	adds	r6, r0, #0
1000b452:	e0ee      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b454:	9801      	ldr	r0, [sp, #4]
1000b456:	1c31      	adds	r1, r6, #0
1000b458:	1c2a      	adds	r2, r5, #0
1000b45a:	4b8c      	ldr	r3, [pc, #560]	; (1000b68c <at_ble_event_get+0x644>)
1000b45c:	e017      	b.n	1000b48e <at_ble_event_get+0x446>
1000b45e:	1c31      	adds	r1, r6, #0
1000b460:	9801      	ldr	r0, [sp, #4]
1000b462:	1c2a      	adds	r2, r5, #0
1000b464:	4b8a      	ldr	r3, [pc, #552]	; (1000b690 <at_ble_event_get+0x648>)
1000b466:	4798      	blx	r3
1000b468:	2611      	movs	r6, #17
1000b46a:	e0e2      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b46c:	1c31      	adds	r1, r6, #0
1000b46e:	9801      	ldr	r0, [sp, #4]
1000b470:	1c2a      	adds	r2, r5, #0
1000b472:	4b88      	ldr	r3, [pc, #544]	; (1000b694 <at_ble_event_get+0x64c>)
1000b474:	4798      	blx	r3
1000b476:	2612      	movs	r6, #18
1000b478:	e0db      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b47a:	1c30      	adds	r0, r6, #0
1000b47c:	1c29      	adds	r1, r5, #0
1000b47e:	4b86      	ldr	r3, [pc, #536]	; (1000b698 <at_ble_event_get+0x650>)
1000b480:	4798      	blx	r3
1000b482:	2606      	movs	r6, #6
1000b484:	e0d5      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b486:	1c31      	adds	r1, r6, #0
1000b488:	1c2a      	adds	r2, r5, #0
1000b48a:	9801      	ldr	r0, [sp, #4]
1000b48c:	4b83      	ldr	r3, [pc, #524]	; (1000b69c <at_ble_event_get+0x654>)
1000b48e:	4798      	blx	r3
1000b490:	e7de      	b.n	1000b450 <at_ble_event_get+0x408>
1000b492:	9801      	ldr	r0, [sp, #4]
1000b494:	1c31      	adds	r1, r6, #0
1000b496:	1c2a      	adds	r2, r5, #0
1000b498:	4b81      	ldr	r3, [pc, #516]	; (1000b6a0 <at_ble_event_get+0x658>)
1000b49a:	e7f8      	b.n	1000b48e <at_ble_event_get+0x446>
1000b49c:	1c31      	adds	r1, r6, #0
1000b49e:	9801      	ldr	r0, [sp, #4]
1000b4a0:	1c2a      	adds	r2, r5, #0
1000b4a2:	4b80      	ldr	r3, [pc, #512]	; (1000b6a4 <at_ble_event_get+0x65c>)
1000b4a4:	4798      	blx	r3
1000b4a6:	260d      	movs	r6, #13
1000b4a8:	e0c3      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b4aa:	1c31      	adds	r1, r6, #0
1000b4ac:	9801      	ldr	r0, [sp, #4]
1000b4ae:	1c2a      	adds	r2, r5, #0
1000b4b0:	4b7d      	ldr	r3, [pc, #500]	; (1000b6a8 <at_ble_event_get+0x660>)
1000b4b2:	4798      	blx	r3
1000b4b4:	260e      	movs	r6, #14
1000b4b6:	e0bc      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b4b8:	9801      	ldr	r0, [sp, #4]
1000b4ba:	1c31      	adds	r1, r6, #0
1000b4bc:	1c2a      	adds	r2, r5, #0
1000b4be:	4b7b      	ldr	r3, [pc, #492]	; (1000b6ac <at_ble_event_get+0x664>)
1000b4c0:	4798      	blx	r3
1000b4c2:	e084      	b.n	1000b5ce <at_ble_event_get+0x586>
1000b4c4:	1c31      	adds	r1, r6, #0
1000b4c6:	9801      	ldr	r0, [sp, #4]
1000b4c8:	1c2a      	adds	r2, r5, #0
1000b4ca:	4b79      	ldr	r3, [pc, #484]	; (1000b6b0 <at_ble_event_get+0x668>)
1000b4cc:	4798      	blx	r3
1000b4ce:	260b      	movs	r6, #11
1000b4d0:	e0af      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b4d2:	1c31      	adds	r1, r6, #0
1000b4d4:	9801      	ldr	r0, [sp, #4]
1000b4d6:	1c2a      	adds	r2, r5, #0
1000b4d8:	4b76      	ldr	r3, [pc, #472]	; (1000b6b4 <at_ble_event_get+0x66c>)
1000b4da:	4798      	blx	r3
1000b4dc:	2610      	movs	r6, #16
1000b4de:	e0a8      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b4e0:	1c30      	adds	r0, r6, #0
1000b4e2:	1c29      	adds	r1, r5, #0
1000b4e4:	4b74      	ldr	r3, [pc, #464]	; (1000b6b8 <at_ble_event_get+0x670>)
1000b4e6:	4798      	blx	r3
1000b4e8:	2628      	movs	r6, #40	; 0x28
1000b4ea:	e0a2      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b4ec:	1c30      	adds	r0, r6, #0
1000b4ee:	1c29      	adds	r1, r5, #0
1000b4f0:	4b72      	ldr	r3, [pc, #456]	; (1000b6bc <at_ble_event_get+0x674>)
1000b4f2:	4798      	blx	r3
1000b4f4:	2629      	movs	r6, #41	; 0x29
1000b4f6:	e09c      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b4f8:	1c30      	adds	r0, r6, #0
1000b4fa:	1c29      	adds	r1, r5, #0
1000b4fc:	4b70      	ldr	r3, [pc, #448]	; (1000b6c0 <at_ble_event_get+0x678>)
1000b4fe:	4798      	blx	r3
1000b500:	2627      	movs	r6, #39	; 0x27
1000b502:	e096      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b504:	1c30      	adds	r0, r6, #0
1000b506:	1c29      	adds	r1, r5, #0
1000b508:	4b6e      	ldr	r3, [pc, #440]	; (1000b6c4 <at_ble_event_get+0x67c>)
1000b50a:	4798      	blx	r3
1000b50c:	262a      	movs	r6, #42	; 0x2a
1000b50e:	e090      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b510:	9801      	ldr	r0, [sp, #4]
1000b512:	1c31      	adds	r1, r6, #0
1000b514:	1c2a      	adds	r2, r5, #0
1000b516:	4b6c      	ldr	r3, [pc, #432]	; (1000b6c8 <at_ble_event_get+0x680>)
1000b518:	e7b9      	b.n	1000b48e <at_ble_event_get+0x446>
1000b51a:	9801      	ldr	r0, [sp, #4]
1000b51c:	1c31      	adds	r1, r6, #0
1000b51e:	1c2a      	adds	r2, r5, #0
1000b520:	4b6a      	ldr	r3, [pc, #424]	; (1000b6cc <at_ble_event_get+0x684>)
1000b522:	e7b4      	b.n	1000b48e <at_ble_event_get+0x446>
1000b524:	1c30      	adds	r0, r6, #0
1000b526:	1c29      	adds	r1, r5, #0
1000b528:	4b69      	ldr	r3, [pc, #420]	; (1000b6d0 <at_ble_event_get+0x688>)
1000b52a:	4798      	blx	r3
1000b52c:	262b      	movs	r6, #43	; 0x2b
1000b52e:	e080      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b530:	1c30      	adds	r0, r6, #0
1000b532:	1c29      	adds	r1, r5, #0
1000b534:	4b67      	ldr	r3, [pc, #412]	; (1000b6d4 <at_ble_event_get+0x68c>)
1000b536:	4798      	blx	r3
1000b538:	262c      	movs	r6, #44	; 0x2c
1000b53a:	e07a      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b53c:	1c31      	adds	r1, r6, #0
1000b53e:	9801      	ldr	r0, [sp, #4]
1000b540:	1c2a      	adds	r2, r5, #0
1000b542:	4b65      	ldr	r3, [pc, #404]	; (1000b6d8 <at_ble_event_get+0x690>)
1000b544:	4798      	blx	r3
1000b546:	2613      	movs	r6, #19
1000b548:	e073      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b54a:	1c31      	adds	r1, r6, #0
1000b54c:	9801      	ldr	r0, [sp, #4]
1000b54e:	1c2a      	adds	r2, r5, #0
1000b550:	4b62      	ldr	r3, [pc, #392]	; (1000b6dc <at_ble_event_get+0x694>)
1000b552:	4798      	blx	r3
1000b554:	2614      	movs	r6, #20
1000b556:	e06c      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b558:	1c31      	adds	r1, r6, #0
1000b55a:	9801      	ldr	r0, [sp, #4]
1000b55c:	1c2a      	adds	r2, r5, #0
1000b55e:	4b60      	ldr	r3, [pc, #384]	; (1000b6e0 <at_ble_event_get+0x698>)
1000b560:	4798      	blx	r3
1000b562:	2615      	movs	r6, #21
1000b564:	e065      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b566:	1c31      	adds	r1, r6, #0
1000b568:	9801      	ldr	r0, [sp, #4]
1000b56a:	1c2a      	adds	r2, r5, #0
1000b56c:	4b5d      	ldr	r3, [pc, #372]	; (1000b6e4 <at_ble_event_get+0x69c>)
1000b56e:	4798      	blx	r3
1000b570:	2616      	movs	r6, #22
1000b572:	e05e      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b574:	9801      	ldr	r0, [sp, #4]
1000b576:	1c31      	adds	r1, r6, #0
1000b578:	1c2a      	adds	r2, r5, #0
1000b57a:	4b5b      	ldr	r3, [pc, #364]	; (1000b6e8 <at_ble_event_get+0x6a0>)
1000b57c:	e787      	b.n	1000b48e <at_ble_event_get+0x446>
1000b57e:	1c31      	adds	r1, r6, #0
1000b580:	9801      	ldr	r0, [sp, #4]
1000b582:	1c2a      	adds	r2, r5, #0
1000b584:	4b58      	ldr	r3, [pc, #352]	; (1000b6e8 <at_ble_event_get+0x6a0>)
1000b586:	4798      	blx	r3
1000b588:	88a9      	ldrh	r1, [r5, #4]
1000b58a:	1c06      	adds	r6, r0, #0
1000b58c:	4b57      	ldr	r3, [pc, #348]	; (1000b6ec <at_ble_event_get+0x6a4>)
1000b58e:	8828      	ldrh	r0, [r5, #0]
1000b590:	4798      	blx	r3
1000b592:	e04e      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b594:	1c31      	adds	r1, r6, #0
1000b596:	9801      	ldr	r0, [sp, #4]
1000b598:	1c2a      	adds	r2, r5, #0
1000b59a:	4b55      	ldr	r3, [pc, #340]	; (1000b6f0 <at_ble_event_get+0x6a8>)
1000b59c:	4798      	blx	r3
1000b59e:	2623      	movs	r6, #35	; 0x23
1000b5a0:	e047      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b5a2:	9801      	ldr	r0, [sp, #4]
1000b5a4:	1c31      	adds	r1, r6, #0
1000b5a6:	1c2a      	adds	r2, r5, #0
1000b5a8:	4b52      	ldr	r3, [pc, #328]	; (1000b6f4 <at_ble_event_get+0x6ac>)
1000b5aa:	e770      	b.n	1000b48e <at_ble_event_get+0x446>
1000b5ac:	9b01      	ldr	r3, [sp, #4]
1000b5ae:	1c30      	adds	r0, r6, #0
1000b5b0:	0a1f      	lsrs	r7, r3, #8
1000b5b2:	802f      	strh	r7, [r5, #0]
1000b5b4:	1c29      	adds	r1, r5, #0
1000b5b6:	4b50      	ldr	r3, [pc, #320]	; (1000b6f8 <at_ble_event_get+0x6b0>)
1000b5b8:	e749      	b.n	1000b44e <at_ble_event_get+0x406>
1000b5ba:	9801      	ldr	r0, [sp, #4]
1000b5bc:	1c31      	adds	r1, r6, #0
1000b5be:	1c2a      	adds	r2, r5, #0
1000b5c0:	4b4e      	ldr	r3, [pc, #312]	; (1000b6fc <at_ble_event_get+0x6b4>)
1000b5c2:	e764      	b.n	1000b48e <at_ble_event_get+0x446>
1000b5c4:	1c30      	adds	r0, r6, #0
1000b5c6:	1c29      	adds	r1, r5, #0
1000b5c8:	9a01      	ldr	r2, [sp, #4]
1000b5ca:	4b4d      	ldr	r3, [pc, #308]	; (1000b700 <at_ble_event_get+0x6b8>)
1000b5cc:	4798      	blx	r3
1000b5ce:	263b      	movs	r6, #59	; 0x3b
1000b5d0:	e02f      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b5d2:	1c31      	adds	r1, r6, #0
1000b5d4:	9801      	ldr	r0, [sp, #4]
1000b5d6:	1c2a      	adds	r2, r5, #0
1000b5d8:	4b4a      	ldr	r3, [pc, #296]	; (1000b704 <at_ble_event_get+0x6bc>)
1000b5da:	4798      	blx	r3
1000b5dc:	2618      	movs	r6, #24
1000b5de:	e028      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b5e0:	1c31      	adds	r1, r6, #0
1000b5e2:	9801      	ldr	r0, [sp, #4]
1000b5e4:	1c2a      	adds	r2, r5, #0
1000b5e6:	4b48      	ldr	r3, [pc, #288]	; (1000b708 <at_ble_event_get+0x6c0>)
1000b5e8:	4798      	blx	r3
1000b5ea:	2620      	movs	r6, #32
1000b5ec:	e021      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b5ee:	1c31      	adds	r1, r6, #0
1000b5f0:	9801      	ldr	r0, [sp, #4]
1000b5f2:	1c2a      	adds	r2, r5, #0
1000b5f4:	4b45      	ldr	r3, [pc, #276]	; (1000b70c <at_ble_event_get+0x6c4>)
1000b5f6:	4798      	blx	r3
1000b5f8:	2633      	movs	r6, #51	; 0x33
1000b5fa:	e01a      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b5fc:	1c31      	adds	r1, r6, #0
1000b5fe:	9801      	ldr	r0, [sp, #4]
1000b600:	1c2a      	adds	r2, r5, #0
1000b602:	4b43      	ldr	r3, [pc, #268]	; (1000b710 <at_ble_event_get+0x6c8>)
1000b604:	4798      	blx	r3
1000b606:	2630      	movs	r6, #48	; 0x30
1000b608:	e013      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b60a:	1c31      	adds	r1, r6, #0
1000b60c:	9801      	ldr	r0, [sp, #4]
1000b60e:	1c2a      	adds	r2, r5, #0
1000b610:	4b40      	ldr	r3, [pc, #256]	; (1000b714 <at_ble_event_get+0x6cc>)
1000b612:	4798      	blx	r3
1000b614:	2634      	movs	r6, #52	; 0x34
1000b616:	e00c      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b618:	1c31      	adds	r1, r6, #0
1000b61a:	9801      	ldr	r0, [sp, #4]
1000b61c:	1c2a      	adds	r2, r5, #0
1000b61e:	4b3e      	ldr	r3, [pc, #248]	; (1000b718 <at_ble_event_get+0x6d0>)
1000b620:	4798      	blx	r3
1000b622:	2635      	movs	r6, #53	; 0x35
1000b624:	e005      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b626:	1c31      	adds	r1, r6, #0
1000b628:	9801      	ldr	r0, [sp, #4]
1000b62a:	1c2a      	adds	r2, r5, #0
1000b62c:	4b3b      	ldr	r3, [pc, #236]	; (1000b71c <at_ble_event_get+0x6d4>)
1000b62e:	4798      	blx	r3
1000b630:	2632      	movs	r6, #50	; 0x32
1000b632:	9b03      	ldr	r3, [sp, #12]
1000b634:	701e      	strb	r6, [r3, #0]
1000b636:	2300      	movs	r3, #0
1000b638:	9302      	str	r3, [sp, #8]
1000b63a:	e57a      	b.n	1000b132 <at_ble_event_get+0xea>
1000b63c:	23d0      	movs	r3, #208	; 0xd0
1000b63e:	e7fb      	b.n	1000b638 <at_ble_event_get+0x5f0>
1000b640:	9b01      	ldr	r3, [sp, #4]
1000b642:	9e02      	ldr	r6, [sp, #8]
1000b644:	2bbb      	cmp	r3, #187	; 0xbb
1000b646:	d000      	beq.n	1000b64a <at_ble_event_get+0x602>
1000b648:	e6e6      	b.n	1000b418 <at_ble_event_get+0x3d0>
1000b64a:	e7f2      	b.n	1000b632 <at_ble_event_get+0x5ea>
1000b64c:	9b02      	ldr	r3, [sp, #8]
1000b64e:	2b00      	cmp	r3, #0
1000b650:	d000      	beq.n	1000b654 <at_ble_event_get+0x60c>
1000b652:	e56e      	b.n	1000b132 <at_ble_event_get+0xea>
1000b654:	e6e0      	b.n	1000b418 <at_ble_event_get+0x3d0>
1000b656:	9802      	ldr	r0, [sp, #8]
1000b658:	b007      	add	sp, #28
1000b65a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000b65c:	00000e22 	.word	0x00000e22
1000b660:	00000e25 	.word	0x00000e25
1000b664:	00001b05 	.word	0x00001b05
1000b668:	00001b01 	.word	0x00001b01
1000b66c:	00001b03 	.word	0x00001b03
1000b670:	00001b06 	.word	0x00001b06
1000b674:	00001b08 	.word	0x00001b08
1000b678:	1000d161 	.word	0x1000d161
1000b67c:	1000d145 	.word	0x1000d145
1000b680:	1000d3e1 	.word	0x1000d3e1
1000b684:	1000d4d1 	.word	0x1000d4d1
1000b688:	1000d4f5 	.word	0x1000d4f5
1000b68c:	1000c519 	.word	0x1000c519
1000b690:	1000cd59 	.word	0x1000cd59
1000b694:	1000cdd5 	.word	0x1000cdd5
1000b698:	1000c7d1 	.word	0x1000c7d1
1000b69c:	1000c86d 	.word	0x1000c86d
1000b6a0:	1000c945 	.word	0x1000c945
1000b6a4:	1000cb8d 	.word	0x1000cb8d
1000b6a8:	1000cc2d 	.word	0x1000cc2d
1000b6ac:	1000cce5 	.word	0x1000cce5
1000b6b0:	1000cd0d 	.word	0x1000cd0d
1000b6b4:	1000cd23 	.word	0x1000cd23
1000b6b8:	1000cded 	.word	0x1000cded
1000b6bc:	1000ce1b 	.word	0x1000ce1b
1000b6c0:	1000ce31 	.word	0x1000ce31
1000b6c4:	1000ce5b 	.word	0x1000ce5b
1000b6c8:	1000cc89 	.word	0x1000cc89
1000b6cc:	1000ccb3 	.word	0x1000ccb3
1000b6d0:	1000bf99 	.word	0x1000bf99
1000b6d4:	1000bfc5 	.word	0x1000bfc5
1000b6d8:	1000d69d 	.word	0x1000d69d
1000b6dc:	1000d6d9 	.word	0x1000d6d9
1000b6e0:	1000d721 	.word	0x1000d721
1000b6e4:	1000d765 	.word	0x1000d765
1000b6e8:	1000d799 	.word	0x1000d799
1000b6ec:	1000d65d 	.word	0x1000d65d
1000b6f0:	1000d865 	.word	0x1000d865
1000b6f4:	1000d7ed 	.word	0x1000d7ed
1000b6f8:	1000bef1 	.word	0x1000bef1
1000b6fc:	1000bf5d 	.word	0x1000bf5d
1000b700:	1000bf21 	.word	0x1000bf21
1000b704:	1000d875 	.word	0x1000d875
1000b708:	1000d8b5 	.word	0x1000d8b5
1000b70c:	1000da01 	.word	0x1000da01
1000b710:	1000da0b 	.word	0x1000da0b
1000b714:	1000da11 	.word	0x1000da11
1000b718:	1000da17 	.word	0x1000da17
1000b71c:	1000da23 	.word	0x1000da23

1000b720 <internal_event_flush>:
1000b720:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000b722:	490e      	ldr	r1, [pc, #56]	; (1000b75c <internal_event_flush+0x3c>)
1000b724:	2400      	movs	r4, #0
1000b726:	680b      	ldr	r3, [r1, #0]
1000b728:	1c0f      	adds	r7, r1, #0
1000b72a:	1c1e      	adds	r6, r3, #0
1000b72c:	4a0c      	ldr	r2, [pc, #48]	; (1000b760 <internal_event_flush+0x40>)
1000b72e:	6815      	ldr	r5, [r2, #0]
1000b730:	9201      	str	r2, [sp, #4]
1000b732:	2b00      	cmp	r3, #0
1000b734:	d00e      	beq.n	1000b754 <internal_event_flush+0x34>
1000b736:	889a      	ldrh	r2, [r3, #4]
1000b738:	6819      	ldr	r1, [r3, #0]
1000b73a:	4282      	cmp	r2, r0
1000b73c:	d107      	bne.n	1000b74e <internal_event_flush+0x2e>
1000b73e:	2c00      	cmp	r4, #0
1000b740:	d001      	beq.n	1000b746 <internal_event_flush+0x26>
1000b742:	6021      	str	r1, [r4, #0]
1000b744:	e000      	b.n	1000b748 <internal_event_flush+0x28>
1000b746:	1c0e      	adds	r6, r1, #0
1000b748:	601d      	str	r5, [r3, #0]
1000b74a:	1c1d      	adds	r5, r3, #0
1000b74c:	1c23      	adds	r3, r4, #0
1000b74e:	1c1c      	adds	r4, r3, #0
1000b750:	1c0b      	adds	r3, r1, #0
1000b752:	e7ee      	b.n	1000b732 <internal_event_flush+0x12>
1000b754:	9b01      	ldr	r3, [sp, #4]
1000b756:	603e      	str	r6, [r7, #0]
1000b758:	601d      	str	r5, [r3, #0]
1000b75a:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
1000b75c:	10011e1c 	.word	0x10011e1c
1000b760:	10011e20 	.word	0x10011e20

1000b764 <internal_conn_flush>:
1000b764:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000b766:	4a12      	ldr	r2, [pc, #72]	; (1000b7b0 <internal_conn_flush+0x4c>)
1000b768:	9000      	str	r0, [sp, #0]
1000b76a:	6813      	ldr	r3, [r2, #0]
1000b76c:	4811      	ldr	r0, [pc, #68]	; (1000b7b4 <internal_conn_flush+0x50>)
1000b76e:	1c1f      	adds	r7, r3, #0
1000b770:	2100      	movs	r1, #0
1000b772:	4684      	mov	ip, r0
1000b774:	6804      	ldr	r4, [r0, #0]
1000b776:	9201      	str	r2, [sp, #4]
1000b778:	2b00      	cmp	r3, #0
1000b77a:	d014      	beq.n	1000b7a6 <internal_conn_flush+0x42>
1000b77c:	88d8      	ldrh	r0, [r3, #6]
1000b77e:	9a00      	ldr	r2, [sp, #0]
1000b780:	681d      	ldr	r5, [r3, #0]
1000b782:	0a06      	lsrs	r6, r0, #8
1000b784:	4296      	cmp	r6, r2
1000b786:	d10b      	bne.n	1000b7a0 <internal_conn_flush+0x3c>
1000b788:	26fd      	movs	r6, #253	; 0xfd
1000b78a:	4006      	ands	r6, r0
1000b78c:	2e0c      	cmp	r6, #12
1000b78e:	d107      	bne.n	1000b7a0 <internal_conn_flush+0x3c>
1000b790:	2900      	cmp	r1, #0
1000b792:	d001      	beq.n	1000b798 <internal_conn_flush+0x34>
1000b794:	600d      	str	r5, [r1, #0]
1000b796:	e000      	b.n	1000b79a <internal_conn_flush+0x36>
1000b798:	1c2f      	adds	r7, r5, #0
1000b79a:	601c      	str	r4, [r3, #0]
1000b79c:	1c1c      	adds	r4, r3, #0
1000b79e:	1c0b      	adds	r3, r1, #0
1000b7a0:	1c19      	adds	r1, r3, #0
1000b7a2:	1c2b      	adds	r3, r5, #0
1000b7a4:	e7e8      	b.n	1000b778 <internal_conn_flush+0x14>
1000b7a6:	9b01      	ldr	r3, [sp, #4]
1000b7a8:	601f      	str	r7, [r3, #0]
1000b7aa:	4663      	mov	r3, ip
1000b7ac:	601c      	str	r4, [r3, #0]
1000b7ae:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
1000b7b0:	10011e1c 	.word	0x10011e1c
1000b7b4:	10011e20 	.word	0x10011e20

1000b7b8 <at_ble_device_name_set>:
1000b7b8:	b530      	push	{r4, r5, lr}
1000b7ba:	23cf      	movs	r3, #207	; 0xcf
1000b7bc:	2800      	cmp	r0, #0
1000b7be:	d010      	beq.n	1000b7e2 <at_ble_device_name_set+0x2a>
1000b7c0:	1e4a      	subs	r2, r1, #1
1000b7c2:	2a1f      	cmp	r2, #31
1000b7c4:	d80d      	bhi.n	1000b7e2 <at_ble_device_name_set+0x2a>
1000b7c6:	4a08      	ldr	r2, [pc, #32]	; (1000b7e8 <at_ble_device_name_set+0x30>)
1000b7c8:	1c13      	adds	r3, r2, #0
1000b7ca:	33aa      	adds	r3, #170	; 0xaa
1000b7cc:	8019      	strh	r1, [r3, #0]
1000b7ce:	2300      	movs	r3, #0
1000b7d0:	1c1c      	adds	r4, r3, #0
1000b7d2:	5cc5      	ldrb	r5, [r0, r3]
1000b7d4:	34ac      	adds	r4, #172	; 0xac
1000b7d6:	3301      	adds	r3, #1
1000b7d8:	5515      	strb	r5, [r2, r4]
1000b7da:	b2dc      	uxtb	r4, r3
1000b7dc:	428c      	cmp	r4, r1
1000b7de:	d3f7      	bcc.n	1000b7d0 <at_ble_device_name_set+0x18>
1000b7e0:	2300      	movs	r3, #0
1000b7e2:	1c18      	adds	r0, r3, #0
1000b7e4:	bd30      	pop	{r4, r5, pc}
1000b7e6:	46c0      	nop			; (mov r8, r8)
1000b7e8:	10012b52 	.word	0x10012b52

1000b7ec <at_ble_addr_get>:
1000b7ec:	b510      	push	{r4, lr}
1000b7ee:	1c04      	adds	r4, r0, #0
1000b7f0:	20cf      	movs	r0, #207	; 0xcf
1000b7f2:	2c00      	cmp	r4, #0
1000b7f4:	d006      	beq.n	1000b804 <at_ble_addr_get+0x18>
1000b7f6:	4b04      	ldr	r3, [pc, #16]	; (1000b808 <at_ble_addr_get+0x1c>)
1000b7f8:	38ce      	subs	r0, #206	; 0xce
1000b7fa:	1c21      	adds	r1, r4, #0
1000b7fc:	4798      	blx	r3
1000b7fe:	4b03      	ldr	r3, [pc, #12]	; (1000b80c <at_ble_addr_get+0x20>)
1000b800:	791b      	ldrb	r3, [r3, #4]
1000b802:	7023      	strb	r3, [r4, #0]
1000b804:	bd10      	pop	{r4, pc}
1000b806:	46c0      	nop			; (mov r8, r8)
1000b808:	1000cff5 	.word	0x1000cff5
1000b80c:	10012b52 	.word	0x10012b52

1000b810 <at_ble_set_dev_config>:
1000b810:	b5f0      	push	{r4, r5, r6, r7, lr}
1000b812:	7906      	ldrb	r6, [r0, #4]
1000b814:	b089      	sub	sp, #36	; 0x24
1000b816:	25cf      	movs	r5, #207	; 0xcf
1000b818:	2e03      	cmp	r6, #3
1000b81a:	d838      	bhi.n	1000b88e <at_ble_set_dev_config+0x7e>
1000b81c:	7803      	ldrb	r3, [r0, #0]
1000b81e:	3511      	adds	r5, #17
1000b820:	2b0f      	cmp	r3, #15
1000b822:	d834      	bhi.n	1000b88e <at_ble_set_dev_config+0x7e>
1000b824:	2380      	movs	r3, #128	; 0x80
1000b826:	8c87      	ldrh	r7, [r0, #36]	; 0x24
1000b828:	3d11      	subs	r5, #17
1000b82a:	009b      	lsls	r3, r3, #2
1000b82c:	429f      	cmp	r7, r3
1000b82e:	d82e      	bhi.n	1000b88e <at_ble_set_dev_config+0x7e>
1000b830:	7fc5      	ldrb	r5, [r0, #31]
1000b832:	7f83      	ldrb	r3, [r0, #30]
1000b834:	01ad      	lsls	r5, r5, #6
1000b836:	015b      	lsls	r3, r3, #5
1000b838:	431d      	orrs	r5, r3
1000b83a:	7ec3      	ldrb	r3, [r0, #27]
1000b83c:	431d      	orrs	r5, r3
1000b83e:	7f43      	ldrb	r3, [r0, #29]
1000b840:	011b      	lsls	r3, r3, #4
1000b842:	431d      	orrs	r5, r3
1000b844:	7f03      	ldrb	r3, [r0, #28]
1000b846:	009b      	lsls	r3, r3, #2
1000b848:	431d      	orrs	r5, r3
1000b84a:	4b12      	ldr	r3, [pc, #72]	; (1000b894 <at_ble_set_dev_config+0x84>)
1000b84c:	b2ed      	uxtb	r5, r5
1000b84e:	711e      	strb	r6, [r3, #4]
1000b850:	7903      	ldrb	r3, [r0, #4]
1000b852:	3b02      	subs	r3, #2
1000b854:	2b01      	cmp	r3, #1
1000b856:	d801      	bhi.n	1000b85c <at_ble_set_dev_config+0x4c>
1000b858:	2302      	movs	r3, #2
1000b85a:	7103      	strb	r3, [r0, #4]
1000b85c:	1c04      	adds	r4, r0, #0
1000b85e:	1c23      	adds	r3, r4, #0
1000b860:	330b      	adds	r3, #11
1000b862:	8861      	ldrh	r1, [r4, #2]
1000b864:	9307      	str	r3, [sp, #28]
1000b866:	7923      	ldrb	r3, [r4, #4]
1000b868:	7800      	ldrb	r0, [r0, #0]
1000b86a:	9300      	str	r3, [sp, #0]
1000b86c:	9501      	str	r5, [sp, #4]
1000b86e:	8c25      	ldrh	r5, [r4, #32]
1000b870:	1d62      	adds	r2, r4, #5
1000b872:	9502      	str	r5, [sp, #8]
1000b874:	8c65      	ldrh	r5, [r4, #34]	; 0x22
1000b876:	9b07      	ldr	r3, [sp, #28]
1000b878:	9503      	str	r5, [sp, #12]
1000b87a:	9704      	str	r7, [sp, #16]
1000b87c:	4d06      	ldr	r5, [pc, #24]	; (1000b898 <at_ble_set_dev_config+0x88>)
1000b87e:	47a8      	blx	r5
1000b880:	7126      	strb	r6, [r4, #4]
1000b882:	1c05      	adds	r5, r0, #0
1000b884:	1c21      	adds	r1, r4, #0
1000b886:	4803      	ldr	r0, [pc, #12]	; (1000b894 <at_ble_set_dev_config+0x84>)
1000b888:	2226      	movs	r2, #38	; 0x26
1000b88a:	4b04      	ldr	r3, [pc, #16]	; (1000b89c <at_ble_set_dev_config+0x8c>)
1000b88c:	4798      	blx	r3
1000b88e:	1c28      	adds	r0, r5, #0
1000b890:	b009      	add	sp, #36	; 0x24
1000b892:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000b894:	10012b52 	.word	0x10012b52
1000b898:	1000ceed 	.word	0x1000ceed
1000b89c:	1000eacb 	.word	0x1000eacb

1000b8a0 <at_ble_init>:
1000b8a0:	b5f0      	push	{r4, r5, r6, r7, lr}
1000b8a2:	b087      	sub	sp, #28
1000b8a4:	af03      	add	r7, sp, #12
1000b8a6:	4954      	ldr	r1, [pc, #336]	; (1000b9f8 <at_ble_init+0x158>)
1000b8a8:	220b      	movs	r2, #11
1000b8aa:	4b54      	ldr	r3, [pc, #336]	; (1000b9fc <at_ble_init+0x15c>)
1000b8ac:	1c04      	adds	r4, r0, #0
1000b8ae:	1c38      	adds	r0, r7, #0
1000b8b0:	4798      	blx	r3
1000b8b2:	2205      	movs	r2, #5
1000b8b4:	4b52      	ldr	r3, [pc, #328]	; (1000ba00 <at_ble_init+0x160>)
1000b8b6:	2640      	movs	r6, #64	; 0x40
1000b8b8:	801a      	strh	r2, [r3, #0]
1000b8ba:	2300      	movs	r3, #0
1000b8bc:	4a51      	ldr	r2, [pc, #324]	; (1000ba04 <at_ble_init+0x164>)
1000b8be:	6013      	str	r3, [r2, #0]
1000b8c0:	4a51      	ldr	r2, [pc, #324]	; (1000ba08 <at_ble_init+0x168>)
1000b8c2:	7013      	strb	r3, [r2, #0]
1000b8c4:	4a51      	ldr	r2, [pc, #324]	; (1000ba0c <at_ble_init+0x16c>)
1000b8c6:	7013      	strb	r3, [r2, #0]
1000b8c8:	4b51      	ldr	r3, [pc, #324]	; (1000ba10 <at_ble_init+0x170>)
1000b8ca:	4798      	blx	r3
1000b8cc:	4b51      	ldr	r3, [pc, #324]	; (1000ba14 <at_ble_init+0x174>)
1000b8ce:	4798      	blx	r3
1000b8d0:	4b51      	ldr	r3, [pc, #324]	; (1000ba18 <at_ble_init+0x178>)
1000b8d2:	4798      	blx	r3
1000b8d4:	4b51      	ldr	r3, [pc, #324]	; (1000ba1c <at_ble_init+0x17c>)
1000b8d6:	4798      	blx	r3
1000b8d8:	2c00      	cmp	r4, #0
1000b8da:	d100      	bne.n	1000b8de <at_ble_init+0x3e>
1000b8dc:	e089      	b.n	1000b9f2 <at_ble_init+0x152>
1000b8de:	68a3      	ldr	r3, [r4, #8]
1000b8e0:	2b00      	cmp	r3, #0
1000b8e2:	d100      	bne.n	1000b8e6 <at_ble_init+0x46>
1000b8e4:	e085      	b.n	1000b9f2 <at_ble_init+0x152>
1000b8e6:	6923      	ldr	r3, [r4, #16]
1000b8e8:	2b00      	cmp	r3, #0
1000b8ea:	d100      	bne.n	1000b8ee <at_ble_init+0x4e>
1000b8ec:	e081      	b.n	1000b9f2 <at_ble_init+0x152>
1000b8ee:	6820      	ldr	r0, [r4, #0]
1000b8f0:	2800      	cmp	r0, #0
1000b8f2:	d102      	bne.n	1000b8fa <at_ble_init+0x5a>
1000b8f4:	6863      	ldr	r3, [r4, #4]
1000b8f6:	2b00      	cmp	r3, #0
1000b8f8:	d17b      	bne.n	1000b9f2 <at_ble_init+0x152>
1000b8fa:	4b49      	ldr	r3, [pc, #292]	; (1000ba20 <at_ble_init+0x180>)
1000b8fc:	6861      	ldr	r1, [r4, #4]
1000b8fe:	4798      	blx	r3
1000b900:	4b48      	ldr	r3, [pc, #288]	; (1000ba24 <at_ble_init+0x184>)
1000b902:	4798      	blx	r3
1000b904:	2801      	cmp	r0, #1
1000b906:	d901      	bls.n	1000b90c <at_ble_init+0x6c>
1000b908:	26e2      	movs	r6, #226	; 0xe2
1000b90a:	e072      	b.n	1000b9f2 <at_ble_init+0x152>
1000b90c:	4846      	ldr	r0, [pc, #280]	; (1000ba28 <at_ble_init+0x188>)
1000b90e:	4b47      	ldr	r3, [pc, #284]	; (1000ba2c <at_ble_init+0x18c>)
1000b910:	4798      	blx	r3
1000b912:	2800      	cmp	r0, #0
1000b914:	d1f8      	bne.n	1000b908 <at_ble_init+0x68>
1000b916:	1c20      	adds	r0, r4, #0
1000b918:	4b45      	ldr	r3, [pc, #276]	; (1000ba30 <at_ble_init+0x190>)
1000b91a:	4798      	blx	r3
1000b91c:	68e0      	ldr	r0, [r4, #12]
1000b91e:	68a1      	ldr	r1, [r4, #8]
1000b920:	4b44      	ldr	r3, [pc, #272]	; (1000ba34 <at_ble_init+0x194>)
1000b922:	4798      	blx	r3
1000b924:	466b      	mov	r3, sp
1000b926:	2201      	movs	r2, #1
1000b928:	1cdc      	adds	r4, r3, #3
1000b92a:	1c20      	adds	r0, r4, #0
1000b92c:	a901      	add	r1, sp, #4
1000b92e:	4252      	negs	r2, r2
1000b930:	4b41      	ldr	r3, [pc, #260]	; (1000ba38 <at_ble_init+0x198>)
1000b932:	4798      	blx	r3
1000b934:	2800      	cmp	r0, #0
1000b936:	d102      	bne.n	1000b93e <at_ble_init+0x9e>
1000b938:	7823      	ldrb	r3, [r4, #0]
1000b93a:	2b39      	cmp	r3, #57	; 0x39
1000b93c:	d1f2      	bne.n	1000b924 <at_ble_init+0x84>
1000b93e:	4b3f      	ldr	r3, [pc, #252]	; (1000ba3c <at_ble_init+0x19c>)
1000b940:	4798      	blx	r3
1000b942:	1e06      	subs	r6, r0, #0
1000b944:	d155      	bne.n	1000b9f2 <at_ble_init+0x152>
1000b946:	1c03      	adds	r3, r0, #0
1000b948:	2101      	movs	r1, #1
1000b94a:	4a3d      	ldr	r2, [pc, #244]	; (1000ba40 <at_ble_init+0x1a0>)
1000b94c:	4249      	negs	r1, r1
1000b94e:	189a      	adds	r2, r3, r2
1000b950:	3312      	adds	r3, #18
1000b952:	8151      	strh	r1, [r2, #10]
1000b954:	2b90      	cmp	r3, #144	; 0x90
1000b956:	d1f7      	bne.n	1000b948 <at_ble_init+0xa8>
1000b958:	4c3a      	ldr	r4, [pc, #232]	; (1000ba44 <at_ble_init+0x1a4>)
1000b95a:	3b81      	subs	r3, #129	; 0x81
1000b95c:	7023      	strb	r3, [r4, #0]
1000b95e:	4b3a      	ldr	r3, [pc, #232]	; (1000ba48 <at_ble_init+0x1a8>)
1000b960:	4a3a      	ldr	r2, [pc, #232]	; (1000ba4c <at_ble_init+0x1ac>)
1000b962:	8063      	strh	r3, [r4, #2]
1000b964:	2300      	movs	r3, #0
1000b966:	7123      	strb	r3, [r4, #4]
1000b968:	3301      	adds	r3, #1
1000b96a:	1e58      	subs	r0, r3, #1
1000b96c:	0119      	lsls	r1, r3, #4
1000b96e:	4301      	orrs	r1, r0
1000b970:	3302      	adds	r3, #2
1000b972:	7011      	strb	r1, [r2, #0]
1000b974:	3201      	adds	r2, #1
1000b976:	2b21      	cmp	r3, #33	; 0x21
1000b978:	d1f7      	bne.n	1000b96a <at_ble_init+0xca>
1000b97a:	33e0      	adds	r3, #224	; 0xe0
1000b97c:	33ff      	adds	r3, #255	; 0xff
1000b97e:	84a3      	strh	r3, [r4, #36]	; 0x24
1000b980:	1c23      	adds	r3, r4, #0
1000b982:	2500      	movs	r5, #0
1000b984:	3373      	adds	r3, #115	; 0x73
1000b986:	701d      	strb	r5, [r3, #0]
1000b988:	1c23      	adds	r3, r4, #0
1000b98a:	3372      	adds	r3, #114	; 0x72
1000b98c:	701d      	strb	r5, [r3, #0]
1000b98e:	1c23      	adds	r3, r4, #0
1000b990:	3376      	adds	r3, #118	; 0x76
1000b992:	701d      	strb	r5, [r3, #0]
1000b994:	1c23      	adds	r3, r4, #0
1000b996:	33cc      	adds	r3, #204	; 0xcc
1000b998:	801d      	strh	r5, [r3, #0]
1000b99a:	1c22      	adds	r2, r4, #0
1000b99c:	23a0      	movs	r3, #160	; 0xa0
1000b99e:	32d0      	adds	r2, #208	; 0xd0
1000b9a0:	005b      	lsls	r3, r3, #1
1000b9a2:	8013      	strh	r3, [r2, #0]
1000b9a4:	1c22      	adds	r2, r4, #0
1000b9a6:	32ce      	adds	r2, #206	; 0xce
1000b9a8:	8013      	strh	r3, [r2, #0]
1000b9aa:	1c23      	adds	r3, r4, #0
1000b9ac:	33d2      	adds	r3, #210	; 0xd2
1000b9ae:	801d      	strh	r5, [r3, #0]
1000b9b0:	22fa      	movs	r2, #250	; 0xfa
1000b9b2:	1c23      	adds	r3, r4, #0
1000b9b4:	0052      	lsls	r2, r2, #1
1000b9b6:	33d4      	adds	r3, #212	; 0xd4
1000b9b8:	801a      	strh	r2, [r3, #0]
1000b9ba:	1c23      	adds	r3, r4, #0
1000b9bc:	33d6      	adds	r3, #214	; 0xd6
1000b9be:	701d      	strb	r5, [r3, #0]
1000b9c0:	1c20      	adds	r0, r4, #0
1000b9c2:	4b23      	ldr	r3, [pc, #140]	; (1000ba50 <at_ble_init+0x1b0>)
1000b9c4:	76e5      	strb	r5, [r4, #27]
1000b9c6:	7725      	strb	r5, [r4, #28]
1000b9c8:	7765      	strb	r5, [r4, #29]
1000b9ca:	77a5      	strb	r5, [r4, #30]
1000b9cc:	77e5      	strb	r5, [r4, #31]
1000b9ce:	8425      	strh	r5, [r4, #32]
1000b9d0:	8465      	strh	r5, [r4, #34]	; 0x22
1000b9d2:	4798      	blx	r3
1000b9d4:	1c23      	adds	r3, r4, #0
1000b9d6:	2207      	movs	r2, #7
1000b9d8:	3374      	adds	r3, #116	; 0x74
1000b9da:	701a      	strb	r2, [r3, #0]
1000b9dc:	1c23      	adds	r3, r4, #0
1000b9de:	3204      	adds	r2, #4
1000b9e0:	33aa      	adds	r3, #170	; 0xaa
1000b9e2:	801a      	strh	r2, [r3, #0]
1000b9e4:	1c2b      	adds	r3, r5, #0
1000b9e6:	5d7a      	ldrb	r2, [r7, r5]
1000b9e8:	33ac      	adds	r3, #172	; 0xac
1000b9ea:	3501      	adds	r5, #1
1000b9ec:	54e2      	strb	r2, [r4, r3]
1000b9ee:	2d0b      	cmp	r5, #11
1000b9f0:	d1f8      	bne.n	1000b9e4 <at_ble_init+0x144>
1000b9f2:	1c30      	adds	r0, r6, #0
1000b9f4:	b007      	add	sp, #28
1000b9f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000b9f8:	1001077c 	.word	0x1001077c
1000b9fc:	1000eacb 	.word	0x1000eacb
1000ba00:	10012ac0 	.word	0x10012ac0
1000ba04:	10011ecc 	.word	0x10011ecc
1000ba08:	10011e2c 	.word	0x10011e2c
1000ba0c:	10010894 	.word	0x10010894
1000ba10:	1000d8c5 	.word	0x1000d8c5
1000ba14:	1000bcf1 	.word	0x1000bcf1
1000ba18:	1000bd6d 	.word	0x1000bd6d
1000ba1c:	1000bf8d 	.word	0x1000bf8d
1000ba20:	1000bda9 	.word	0x1000bda9
1000ba24:	1000a559 	.word	0x1000a559
1000ba28:	1000c24d 	.word	0x1000c24d
1000ba2c:	1000a79d 	.word	0x1000a79d
1000ba30:	1000c2f5 	.word	0x1000c2f5
1000ba34:	1000af8d 	.word	0x1000af8d
1000ba38:	1000b049 	.word	0x1000b049
1000ba3c:	1000ce7d 	.word	0x1000ce7d
1000ba40:	10012ac2 	.word	0x10012ac2
1000ba44:	10012b52 	.word	0x10012b52
1000ba48:	00003a98 	.word	0x00003a98
1000ba4c:	10012b5d 	.word	0x10012b5d
1000ba50:	1000b811 	.word	0x1000b811

1000ba54 <at_ble_addr_set>:
1000ba54:	b538      	push	{r3, r4, r5, lr}
1000ba56:	1c45      	adds	r5, r0, #1
1000ba58:	1c03      	adds	r3, r0, #0
1000ba5a:	20cf      	movs	r0, #207	; 0xcf
1000ba5c:	2d00      	cmp	r5, #0
1000ba5e:	d018      	beq.n	1000ba92 <at_ble_addr_set+0x3e>
1000ba60:	781a      	ldrb	r2, [r3, #0]
1000ba62:	2a03      	cmp	r2, #3
1000ba64:	d815      	bhi.n	1000ba92 <at_ble_addr_set+0x3e>
1000ba66:	2a01      	cmp	r2, #1
1000ba68:	d102      	bne.n	1000ba70 <at_ble_addr_set+0x1c>
1000ba6a:	785a      	ldrb	r2, [r3, #1]
1000ba6c:	2a00      	cmp	r2, #0
1000ba6e:	d010      	beq.n	1000ba92 <at_ble_addr_set+0x3e>
1000ba70:	1c1c      	adds	r4, r3, #0
1000ba72:	1c29      	adds	r1, r5, #0
1000ba74:	2206      	movs	r2, #6
1000ba76:	4b07      	ldr	r3, [pc, #28]	; (1000ba94 <at_ble_addr_set+0x40>)
1000ba78:	4807      	ldr	r0, [pc, #28]	; (1000ba98 <at_ble_addr_set+0x44>)
1000ba7a:	4798      	blx	r3
1000ba7c:	7823      	ldrb	r3, [r4, #0]
1000ba7e:	4807      	ldr	r0, [pc, #28]	; (1000ba9c <at_ble_addr_set+0x48>)
1000ba80:	7103      	strb	r3, [r0, #4]
1000ba82:	4b07      	ldr	r3, [pc, #28]	; (1000baa0 <at_ble_addr_set+0x4c>)
1000ba84:	4798      	blx	r3
1000ba86:	7823      	ldrb	r3, [r4, #0]
1000ba88:	2b00      	cmp	r3, #0
1000ba8a:	d102      	bne.n	1000ba92 <at_ble_addr_set+0x3e>
1000ba8c:	1c28      	adds	r0, r5, #0
1000ba8e:	4b05      	ldr	r3, [pc, #20]	; (1000baa4 <at_ble_addr_set+0x50>)
1000ba90:	4798      	blx	r3
1000ba92:	bd38      	pop	{r3, r4, r5, pc}
1000ba94:	1000eacb 	.word	0x1000eacb
1000ba98:	10012b57 	.word	0x10012b57
1000ba9c:	10012b52 	.word	0x10012b52
1000baa0:	1000b811 	.word	0x1000b811
1000baa4:	1000c379 	.word	0x1000c379

1000baa8 <at_ble_adv_data_set>:
1000baa8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000baaa:	4684      	mov	ip, r0
1000baac:	1c0f      	adds	r7, r1, #0
1000baae:	1c16      	adds	r6, r2, #0
1000bab0:	1c1c      	adds	r4, r3, #0
1000bab2:	2800      	cmp	r0, #0
1000bab4:	d102      	bne.n	1000babc <at_ble_adv_data_set+0x14>
1000bab6:	20e2      	movs	r0, #226	; 0xe2
1000bab8:	2a00      	cmp	r2, #0
1000baba:	d02b      	beq.n	1000bb14 <at_ble_adv_data_set+0x6c>
1000babc:	20cf      	movs	r0, #207	; 0xcf
1000babe:	2f1f      	cmp	r7, #31
1000bac0:	d828      	bhi.n	1000bb14 <at_ble_adv_data_set+0x6c>
1000bac2:	2c1f      	cmp	r4, #31
1000bac4:	d826      	bhi.n	1000bb14 <at_ble_adv_data_set+0x6c>
1000bac6:	4663      	mov	r3, ip
1000bac8:	2b00      	cmp	r3, #0
1000baca:	d00e      	beq.n	1000baea <at_ble_adv_data_set+0x42>
1000bacc:	4812      	ldr	r0, [pc, #72]	; (1000bb18 <at_ble_adv_data_set+0x70>)
1000bace:	4d13      	ldr	r5, [pc, #76]	; (1000bb1c <at_ble_adv_data_set+0x74>)
1000bad0:	2f00      	cmp	r7, #0
1000bad2:	d104      	bne.n	1000bade <at_ble_adv_data_set+0x36>
1000bad4:	1c39      	adds	r1, r7, #0
1000bad6:	221f      	movs	r2, #31
1000bad8:	4b11      	ldr	r3, [pc, #68]	; (1000bb20 <at_ble_adv_data_set+0x78>)
1000bada:	4798      	blx	r3
1000badc:	e003      	b.n	1000bae6 <at_ble_adv_data_set+0x3e>
1000bade:	4661      	mov	r1, ip
1000bae0:	1c3a      	adds	r2, r7, #0
1000bae2:	4b10      	ldr	r3, [pc, #64]	; (1000bb24 <at_ble_adv_data_set+0x7c>)
1000bae4:	4798      	blx	r3
1000bae6:	3572      	adds	r5, #114	; 0x72
1000bae8:	702f      	strb	r7, [r5, #0]
1000baea:	1e30      	subs	r0, r6, #0
1000baec:	d012      	beq.n	1000bb14 <at_ble_adv_data_set+0x6c>
1000baee:	4d0b      	ldr	r5, [pc, #44]	; (1000bb1c <at_ble_adv_data_set+0x74>)
1000baf0:	480d      	ldr	r0, [pc, #52]	; (1000bb28 <at_ble_adv_data_set+0x80>)
1000baf2:	2c00      	cmp	r4, #0
1000baf4:	d107      	bne.n	1000bb06 <at_ble_adv_data_set+0x5e>
1000baf6:	1c21      	adds	r1, r4, #0
1000baf8:	221f      	movs	r2, #31
1000bafa:	4b09      	ldr	r3, [pc, #36]	; (1000bb20 <at_ble_adv_data_set+0x78>)
1000bafc:	3573      	adds	r5, #115	; 0x73
1000bafe:	4798      	blx	r3
1000bb00:	702c      	strb	r4, [r5, #0]
1000bb02:	1c20      	adds	r0, r4, #0
1000bb04:	e006      	b.n	1000bb14 <at_ble_adv_data_set+0x6c>
1000bb06:	1c31      	adds	r1, r6, #0
1000bb08:	1c22      	adds	r2, r4, #0
1000bb0a:	4b06      	ldr	r3, [pc, #24]	; (1000bb24 <at_ble_adv_data_set+0x7c>)
1000bb0c:	4798      	blx	r3
1000bb0e:	2000      	movs	r0, #0
1000bb10:	3573      	adds	r5, #115	; 0x73
1000bb12:	702c      	strb	r4, [r5, #0]
1000bb14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000bb16:	46c0      	nop			; (mov r8, r8)
1000bb18:	10012b86 	.word	0x10012b86
1000bb1c:	10012b52 	.word	0x10012b52
1000bb20:	1000eadd 	.word	0x1000eadd
1000bb24:	1000eacb 	.word	0x1000eacb
1000bb28:	10012ba5 	.word	0x10012ba5

1000bb2c <at_ble_adv_start>:
1000bb2c:	b5f0      	push	{r4, r5, r6, r7, lr}
1000bb2e:	b091      	sub	sp, #68	; 0x44
1000bb30:	1c1f      	adds	r7, r3, #0
1000bb32:	ab16      	add	r3, sp, #88	; 0x58
1000bb34:	881d      	ldrh	r5, [r3, #0]
1000bb36:	ab17      	add	r3, sp, #92	; 0x5c
1000bb38:	881b      	ldrh	r3, [r3, #0]
1000bb3a:	910d      	str	r1, [sp, #52]	; 0x34
1000bb3c:	930e      	str	r3, [sp, #56]	; 0x38
1000bb3e:	ab18      	add	r3, sp, #96	; 0x60
1000bb40:	781b      	ldrb	r3, [r3, #0]
1000bb42:	1c04      	adds	r4, r0, #0
1000bb44:	930f      	str	r3, [sp, #60]	; 0x3c
1000bb46:	4b42      	ldr	r3, [pc, #264]	; (1000bc50 <at_ble_adv_start+0x124>)
1000bb48:	1c16      	adds	r6, r2, #0
1000bb4a:	3373      	adds	r3, #115	; 0x73
1000bb4c:	781b      	ldrb	r3, [r3, #0]
1000bb4e:	20cf      	movs	r0, #207	; 0xcf
1000bb50:	930c      	str	r3, [sp, #48]	; 0x30
1000bb52:	2c01      	cmp	r4, #1
1000bb54:	d103      	bne.n	1000bb5e <at_ble_adv_start+0x32>
1000bb56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1000bb58:	2b00      	cmp	r3, #0
1000bb5a:	d176      	bne.n	1000bc4a <at_ble_adv_start+0x11e>
1000bb5c:	e024      	b.n	1000bba8 <at_ble_adv_start+0x7c>
1000bb5e:	2c04      	cmp	r4, #4
1000bb60:	d873      	bhi.n	1000bc4a <at_ble_adv_start+0x11e>
1000bb62:	2380      	movs	r3, #128	; 0x80
1000bb64:	01db      	lsls	r3, r3, #7
1000bb66:	429d      	cmp	r5, r3
1000bb68:	d86f      	bhi.n	1000bc4a <at_ble_adv_start+0x11e>
1000bb6a:	2c00      	cmp	r4, #0
1000bb6c:	d102      	bne.n	1000bb74 <at_ble_adv_start+0x48>
1000bb6e:	2d1f      	cmp	r5, #31
1000bb70:	d96b      	bls.n	1000bc4a <at_ble_adv_start+0x11e>
1000bb72:	e003      	b.n	1000bb7c <at_ble_adv_start+0x50>
1000bb74:	2d9f      	cmp	r5, #159	; 0x9f
1000bb76:	d801      	bhi.n	1000bb7c <at_ble_adv_start+0x50>
1000bb78:	2c01      	cmp	r4, #1
1000bb7a:	d166      	bne.n	1000bc4a <at_ble_adv_start+0x11e>
1000bb7c:	2f00      	cmp	r7, #0
1000bb7e:	d009      	beq.n	1000bb94 <at_ble_adv_start+0x68>
1000bb80:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000bb82:	20cf      	movs	r0, #207	; 0xcf
1000bb84:	3b01      	subs	r3, #1
1000bb86:	2b01      	cmp	r3, #1
1000bb88:	d95f      	bls.n	1000bc4a <at_ble_adv_start+0x11e>
1000bb8a:	2c01      	cmp	r4, #1
1000bb8c:	d102      	bne.n	1000bb94 <at_ble_adv_start+0x68>
1000bb8e:	2d00      	cmp	r5, #0
1000bb90:	d100      	bne.n	1000bb94 <at_ble_adv_start+0x68>
1000bb92:	3520      	adds	r5, #32
1000bb94:	4b2f      	ldr	r3, [pc, #188]	; (1000bc54 <at_ble_adv_start+0x128>)
1000bb96:	4798      	blx	r3
1000bb98:	1c01      	adds	r1, r0, #0
1000bb9a:	2e00      	cmp	r6, #0
1000bb9c:	d043      	beq.n	1000bc26 <at_ble_adv_start+0xfa>
1000bb9e:	7833      	ldrb	r3, [r6, #0]
1000bba0:	1e60      	subs	r0, r4, #1
1000bba2:	2b00      	cmp	r3, #0
1000bba4:	d109      	bne.n	1000bbba <at_ble_adv_start+0x8e>
1000bba6:	e03b      	b.n	1000bc20 <at_ble_adv_start+0xf4>
1000bba8:	2380      	movs	r3, #128	; 0x80
1000bbaa:	01db      	lsls	r3, r3, #7
1000bbac:	429d      	cmp	r5, r3
1000bbae:	d84c      	bhi.n	1000bc4a <at_ble_adv_start+0x11e>
1000bbb0:	2e00      	cmp	r6, #0
1000bbb2:	d04a      	beq.n	1000bc4a <at_ble_adv_start+0x11e>
1000bbb4:	2f00      	cmp	r7, #0
1000bbb6:	d1e3      	bne.n	1000bb80 <at_ble_adv_start+0x54>
1000bbb8:	e02b      	b.n	1000bc12 <at_ble_adv_start+0xe6>
1000bbba:	2301      	movs	r3, #1
1000bbbc:	2803      	cmp	r0, #3
1000bbbe:	d93a      	bls.n	1000bc36 <at_ble_adv_start+0x10a>
1000bbc0:	200d      	movs	r0, #13
1000bbc2:	1c72      	adds	r2, r6, #1
1000bbc4:	e002      	b.n	1000bbcc <at_ble_adv_start+0xa0>
1000bbc6:	200e      	movs	r0, #14
1000bbc8:	1e32      	subs	r2, r6, #0
1000bbca:	d1fa      	bne.n	1000bbc2 <at_ble_adv_start+0x96>
1000bbcc:	4c20      	ldr	r4, [pc, #128]	; (1000bc50 <at_ble_adv_start+0x124>)
1000bbce:	3474      	adds	r4, #116	; 0x74
1000bbd0:	7826      	ldrb	r6, [r4, #0]
1000bbd2:	2407      	movs	r4, #7
1000bbd4:	2e00      	cmp	r6, #0
1000bbd6:	d000      	beq.n	1000bbda <at_ble_adv_start+0xae>
1000bbd8:	1c34      	adds	r4, r6, #0
1000bbda:	9200      	str	r2, [sp, #0]
1000bbdc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
1000bbde:	9403      	str	r4, [sp, #12]
1000bbe0:	9204      	str	r2, [sp, #16]
1000bbe2:	4a1b      	ldr	r2, [pc, #108]	; (1000bc50 <at_ble_adv_start+0x124>)
1000bbe4:	9501      	str	r5, [sp, #4]
1000bbe6:	9502      	str	r5, [sp, #8]
1000bbe8:	9705      	str	r7, [sp, #20]
1000bbea:	3272      	adds	r2, #114	; 0x72
1000bbec:	7812      	ldrb	r2, [r2, #0]
1000bbee:	9c0e      	ldr	r4, [sp, #56]	; 0x38
1000bbf0:	9206      	str	r2, [sp, #24]
1000bbf2:	4a19      	ldr	r2, [pc, #100]	; (1000bc58 <at_ble_adv_start+0x12c>)
1000bbf4:	9207      	str	r2, [sp, #28]
1000bbf6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1000bbf8:	9208      	str	r2, [sp, #32]
1000bbfa:	4a18      	ldr	r2, [pc, #96]	; (1000bc5c <at_ble_adv_start+0x130>)
1000bbfc:	9209      	str	r2, [sp, #36]	; 0x24
1000bbfe:	2264      	movs	r2, #100	; 0x64
1000bc00:	4362      	muls	r2, r4
1000bc02:	b292      	uxth	r2, r2
1000bc04:	920a      	str	r2, [sp, #40]	; 0x28
1000bc06:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
1000bc08:	4c15      	ldr	r4, [pc, #84]	; (1000bc60 <at_ble_adv_start+0x134>)
1000bc0a:	920b      	str	r2, [sp, #44]	; 0x2c
1000bc0c:	4a15      	ldr	r2, [pc, #84]	; (1000bc64 <at_ble_adv_start+0x138>)
1000bc0e:	47a0      	blx	r4
1000bc10:	e01b      	b.n	1000bc4a <at_ble_adv_start+0x11e>
1000bc12:	2d00      	cmp	r5, #0
1000bc14:	d1be      	bne.n	1000bb94 <at_ble_adv_start+0x68>
1000bc16:	4b0f      	ldr	r3, [pc, #60]	; (1000bc54 <at_ble_adv_start+0x128>)
1000bc18:	4798      	blx	r3
1000bc1a:	2520      	movs	r5, #32
1000bc1c:	1c01      	adds	r1, r0, #0
1000bc1e:	e7be      	b.n	1000bb9e <at_ble_adv_start+0x72>
1000bc20:	2803      	cmp	r0, #3
1000bc22:	d8cd      	bhi.n	1000bbc0 <at_ble_adv_start+0x94>
1000bc24:	e006      	b.n	1000bc34 <at_ble_adv_start+0x108>
1000bc26:	1e60      	subs	r0, r4, #1
1000bc28:	2803      	cmp	r0, #3
1000bc2a:	d903      	bls.n	1000bc34 <at_ble_adv_start+0x108>
1000bc2c:	1c33      	adds	r3, r6, #0
1000bc2e:	200d      	movs	r0, #13
1000bc30:	1c32      	adds	r2, r6, #0
1000bc32:	e7cb      	b.n	1000bbcc <at_ble_adv_start+0xa0>
1000bc34:	2300      	movs	r3, #0
1000bc36:	f001 fef9 	bl	1000da2c <__gnu_thumb1_case_sqi>
1000bc3a:	06c6      	.short	0x06c6
1000bc3c:	0204      	.short	0x0204
1000bc3e:	200f      	movs	r0, #15
1000bc40:	e7c2      	b.n	1000bbc8 <at_ble_adv_start+0x9c>
1000bc42:	2200      	movs	r2, #0
1000bc44:	920c      	str	r2, [sp, #48]	; 0x30
1000bc46:	200c      	movs	r0, #12
1000bc48:	e7be      	b.n	1000bbc8 <at_ble_adv_start+0x9c>
1000bc4a:	b011      	add	sp, #68	; 0x44
1000bc4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000bc4e:	46c0      	nop			; (mov r8, r8)
1000bc50:	10012b52 	.word	0x10012b52
1000bc54:	1000d3c9 	.word	0x1000d3c9
1000bc58:	10012b86 	.word	0x10012b86
1000bc5c:	10012ba5 	.word	0x10012ba5
1000bc60:	1000d2a9 	.word	0x1000d2a9
1000bc64:	00003a98 	.word	0x00003a98

1000bc68 <at_ble_scan_stop>:
1000bc68:	b510      	push	{r4, lr}
1000bc6a:	4b05      	ldr	r3, [pc, #20]	; (1000bc80 <at_ble_scan_stop+0x18>)
1000bc6c:	4798      	blx	r3
1000bc6e:	1e04      	subs	r4, r0, #0
1000bc70:	d103      	bne.n	1000bc7a <at_ble_scan_stop+0x12>
1000bc72:	20d1      	movs	r0, #209	; 0xd1
1000bc74:	4b03      	ldr	r3, [pc, #12]	; (1000bc84 <at_ble_scan_stop+0x1c>)
1000bc76:	0100      	lsls	r0, r0, #4
1000bc78:	4798      	blx	r3
1000bc7a:	1c20      	adds	r0, r4, #0
1000bc7c:	bd10      	pop	{r4, pc}
1000bc7e:	46c0      	nop			; (mov r8, r8)
1000bc80:	1000d0d5 	.word	0x1000d0d5
1000bc84:	1000b721 	.word	0x1000b721

1000bc88 <at_ble_disconnect>:
1000bc88:	b538      	push	{r3, r4, r5, lr}
1000bc8a:	1c04      	adds	r4, r0, #0
1000bc8c:	4b04      	ldr	r3, [pc, #16]	; (1000bca0 <at_ble_disconnect+0x18>)
1000bc8e:	1c08      	adds	r0, r1, #0
1000bc90:	1c21      	adds	r1, r4, #0
1000bc92:	4798      	blx	r3
1000bc94:	1c05      	adds	r5, r0, #0
1000bc96:	4b03      	ldr	r3, [pc, #12]	; (1000bca4 <at_ble_disconnect+0x1c>)
1000bc98:	1c20      	adds	r0, r4, #0
1000bc9a:	4798      	blx	r3
1000bc9c:	1c28      	adds	r0, r5, #0
1000bc9e:	bd38      	pop	{r3, r4, r5, pc}
1000bca0:	1000c78d 	.word	0x1000c78d
1000bca4:	1000b765 	.word	0x1000b765

1000bca8 <at_ble_conn_update_reply>:
1000bca8:	b510      	push	{r4, lr}
1000bcaa:	4c01      	ldr	r4, [pc, #4]	; (1000bcb0 <at_ble_conn_update_reply+0x8>)
1000bcac:	47a0      	blx	r4
1000bcae:	bd10      	pop	{r4, pc}
1000bcb0:	1000cc3d 	.word	0x1000cc3d

1000bcb4 <at_ble_random_address_resolve>:
1000bcb4:	b510      	push	{r4, lr}
1000bcb6:	23cf      	movs	r3, #207	; 0xcf
1000bcb8:	2800      	cmp	r0, #0
1000bcba:	d00a      	beq.n	1000bcd2 <at_ble_random_address_resolve+0x1e>
1000bcbc:	2900      	cmp	r1, #0
1000bcbe:	d008      	beq.n	1000bcd2 <at_ble_random_address_resolve+0x1e>
1000bcc0:	2a00      	cmp	r2, #0
1000bcc2:	d006      	beq.n	1000bcd2 <at_ble_random_address_resolve+0x1e>
1000bcc4:	780c      	ldrb	r4, [r1, #0]
1000bcc6:	2c02      	cmp	r4, #2
1000bcc8:	d103      	bne.n	1000bcd2 <at_ble_random_address_resolve+0x1e>
1000bcca:	4b03      	ldr	r3, [pc, #12]	; (1000bcd8 <at_ble_random_address_resolve+0x24>)
1000bccc:	3101      	adds	r1, #1
1000bcce:	4798      	blx	r3
1000bcd0:	2300      	movs	r3, #0
1000bcd2:	1c18      	adds	r0, r3, #0
1000bcd4:	bd10      	pop	{r4, pc}
1000bcd6:	46c0      	nop			; (mov r8, r8)
1000bcd8:	1000d469 	.word	0x1000d469

1000bcdc <at_ble_uuid_len2type>:
1000bcdc:	1e83      	subs	r3, r0, #2
1000bcde:	b2db      	uxtb	r3, r3
1000bce0:	2003      	movs	r0, #3
1000bce2:	2b0e      	cmp	r3, #14
1000bce4:	d801      	bhi.n	1000bcea <at_ble_uuid_len2type+0xe>
1000bce6:	4a01      	ldr	r2, [pc, #4]	; (1000bcec <at_ble_uuid_len2type+0x10>)
1000bce8:	5cd0      	ldrb	r0, [r2, r3]
1000bcea:	4770      	bx	lr
1000bcec:	10010787 	.word	0x10010787

1000bcf0 <init_gatt_client_module>:
1000bcf0:	2200      	movs	r2, #0
1000bcf2:	4b01      	ldr	r3, [pc, #4]	; (1000bcf8 <init_gatt_client_module+0x8>)
1000bcf4:	801a      	strh	r2, [r3, #0]
1000bcf6:	4770      	bx	lr
1000bcf8:	10011e24 	.word	0x10011e24

1000bcfc <db_searchATT>:
1000bcfc:	b570      	push	{r4, r5, r6, lr}
1000bcfe:	1c05      	adds	r5, r0, #0
1000bd00:	2400      	movs	r4, #0
1000bd02:	4b0c      	ldr	r3, [pc, #48]	; (1000bd34 <db_searchATT+0x38>)
1000bd04:	6819      	ldr	r1, [r3, #0]
1000bd06:	4b0c      	ldr	r3, [pc, #48]	; (1000bd38 <db_searchATT+0x3c>)
1000bd08:	681e      	ldr	r6, [r3, #0]
1000bd0a:	428c      	cmp	r4, r1
1000bd0c:	dc10      	bgt.n	1000bd30 <db_searchATT+0x34>
1000bd0e:	200c      	movs	r0, #12
1000bd10:	1863      	adds	r3, r4, r1
1000bd12:	0fda      	lsrs	r2, r3, #31
1000bd14:	18d3      	adds	r3, r2, r3
1000bd16:	1c02      	adds	r2, r0, #0
1000bd18:	105b      	asrs	r3, r3, #1
1000bd1a:	435a      	muls	r2, r3
1000bd1c:	18b0      	adds	r0, r6, r2
1000bd1e:	8802      	ldrh	r2, [r0, #0]
1000bd20:	42aa      	cmp	r2, r5
1000bd22:	d201      	bcs.n	1000bd28 <db_searchATT+0x2c>
1000bd24:	1e59      	subs	r1, r3, #1
1000bd26:	e7f0      	b.n	1000bd0a <db_searchATT+0xe>
1000bd28:	42aa      	cmp	r2, r5
1000bd2a:	d902      	bls.n	1000bd32 <db_searchATT+0x36>
1000bd2c:	1c5c      	adds	r4, r3, #1
1000bd2e:	e7ec      	b.n	1000bd0a <db_searchATT+0xe>
1000bd30:	2000      	movs	r0, #0
1000bd32:	bd70      	pop	{r4, r5, r6, pc}
1000bd34:	10011e38 	.word	0x10011e38
1000bd38:	10011e30 	.word	0x10011e30

1000bd3c <at_ble_read_authorize_reply.part.1>:
1000bd3c:	b537      	push	{r0, r1, r2, r4, r5, lr}
1000bd3e:	4b09      	ldr	r3, [pc, #36]	; (1000bd64 <at_ble_read_authorize_reply.part.1+0x28>)
1000bd40:	1c05      	adds	r5, r0, #0
1000bd42:	1c08      	adds	r0, r1, #0
1000bd44:	1c0c      	adds	r4, r1, #0
1000bd46:	4798      	blx	r3
1000bd48:	2800      	cmp	r0, #0
1000bd4a:	d009      	beq.n	1000bd60 <at_ble_read_authorize_reply.part.1+0x24>
1000bd4c:	6882      	ldr	r2, [r0, #8]
1000bd4e:	2a00      	cmp	r2, #0
1000bd50:	d006      	beq.n	1000bd60 <at_ble_read_authorize_reply.part.1+0x24>
1000bd52:	8883      	ldrh	r3, [r0, #4]
1000bd54:	1c29      	adds	r1, r5, #0
1000bd56:	9200      	str	r2, [sp, #0]
1000bd58:	1c20      	adds	r0, r4, #0
1000bd5a:	2200      	movs	r2, #0
1000bd5c:	4c02      	ldr	r4, [pc, #8]	; (1000bd68 <at_ble_read_authorize_reply.part.1+0x2c>)
1000bd5e:	47a0      	blx	r4
1000bd60:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
1000bd62:	46c0      	nop			; (mov r8, r8)
1000bd64:	1000bcfd 	.word	0x1000bcfd
1000bd68:	1000d565 	.word	0x1000d565

1000bd6c <initi_gatt_server_module>:
1000bd6c:	2300      	movs	r3, #0
1000bd6e:	4a07      	ldr	r2, [pc, #28]	; (1000bd8c <initi_gatt_server_module+0x20>)
1000bd70:	7013      	strb	r3, [r2, #0]
1000bd72:	4a07      	ldr	r2, [pc, #28]	; (1000bd90 <initi_gatt_server_module+0x24>)
1000bd74:	6013      	str	r3, [r2, #0]
1000bd76:	4a07      	ldr	r2, [pc, #28]	; (1000bd94 <initi_gatt_server_module+0x28>)
1000bd78:	6013      	str	r3, [r2, #0]
1000bd7a:	4a07      	ldr	r2, [pc, #28]	; (1000bd98 <initi_gatt_server_module+0x2c>)
1000bd7c:	6013      	str	r3, [r2, #0]
1000bd7e:	4a07      	ldr	r2, [pc, #28]	; (1000bd9c <initi_gatt_server_module+0x30>)
1000bd80:	6013      	str	r3, [r2, #0]
1000bd82:	4a07      	ldr	r2, [pc, #28]	; (1000bda0 <initi_gatt_server_module+0x34>)
1000bd84:	6013      	str	r3, [r2, #0]
1000bd86:	4a07      	ldr	r2, [pc, #28]	; (1000bda4 <initi_gatt_server_module+0x38>)
1000bd88:	6013      	str	r3, [r2, #0]
1000bd8a:	4770      	bx	lr
1000bd8c:	10011e2c 	.word	0x10011e2c
1000bd90:	10011e3c 	.word	0x10011e3c
1000bd94:	10011e38 	.word	0x10011e38
1000bd98:	10011e28 	.word	0x10011e28
1000bd9c:	10011e34 	.word	0x10011e34
1000bda0:	10011e30 	.word	0x10011e30
1000bda4:	10011e40 	.word	0x10011e40

1000bda8 <db_init>:
1000bda8:	4b0a      	ldr	r3, [pc, #40]	; (1000bdd4 <db_init+0x2c>)
1000bdaa:	4a0b      	ldr	r2, [pc, #44]	; (1000bdd8 <db_init+0x30>)
1000bdac:	6018      	str	r0, [r3, #0]
1000bdae:	084b      	lsrs	r3, r1, #1
1000bdb0:	6013      	str	r3, [r2, #0]
1000bdb2:	4a0a      	ldr	r2, [pc, #40]	; (1000bddc <db_init+0x34>)
1000bdb4:	18c3      	adds	r3, r0, r3
1000bdb6:	6013      	str	r3, [r2, #0]
1000bdb8:	4a09      	ldr	r2, [pc, #36]	; (1000bde0 <db_init+0x38>)
1000bdba:	1841      	adds	r1, r0, r1
1000bdbc:	6013      	str	r3, [r2, #0]
1000bdbe:	2303      	movs	r3, #3
1000bdc0:	2200      	movs	r2, #0
1000bdc2:	3103      	adds	r1, #3
1000bdc4:	4399      	bics	r1, r3
1000bdc6:	4b07      	ldr	r3, [pc, #28]	; (1000bde4 <db_init+0x3c>)
1000bdc8:	3904      	subs	r1, #4
1000bdca:	6019      	str	r1, [r3, #0]
1000bdcc:	4b06      	ldr	r3, [pc, #24]	; (1000bde8 <db_init+0x40>)
1000bdce:	601a      	str	r2, [r3, #0]
1000bdd0:	4770      	bx	lr
1000bdd2:	46c0      	nop			; (mov r8, r8)
1000bdd4:	10011e40 	.word	0x10011e40
1000bdd8:	10011e3c 	.word	0x10011e3c
1000bddc:	10011e28 	.word	0x10011e28
1000bde0:	10011e34 	.word	0x10011e34
1000bde4:	10011e30 	.word	0x10011e30
1000bde8:	10011e38 	.word	0x10011e38

1000bdec <at_ble_characteristic_value_set>:
1000bdec:	b570      	push	{r4, r5, r6, lr}
1000bdee:	4b0b      	ldr	r3, [pc, #44]	; (1000be1c <at_ble_characteristic_value_set+0x30>)
1000bdf0:	1c06      	adds	r6, r0, #0
1000bdf2:	1c0c      	adds	r4, r1, #0
1000bdf4:	1c15      	adds	r5, r2, #0
1000bdf6:	4798      	blx	r3
1000bdf8:	2800      	cmp	r0, #0
1000bdfa:	d008      	beq.n	1000be0e <at_ble_characteristic_value_set+0x22>
1000bdfc:	6880      	ldr	r0, [r0, #8]
1000bdfe:	2800      	cmp	r0, #0
1000be00:	d005      	beq.n	1000be0e <at_ble_characteristic_value_set+0x22>
1000be02:	1c21      	adds	r1, r4, #0
1000be04:	1c2a      	adds	r2, r5, #0
1000be06:	4b06      	ldr	r3, [pc, #24]	; (1000be20 <at_ble_characteristic_value_set+0x34>)
1000be08:	4798      	blx	r3
1000be0a:	2000      	movs	r0, #0
1000be0c:	e004      	b.n	1000be18 <at_ble_characteristic_value_set+0x2c>
1000be0e:	1c30      	adds	r0, r6, #0
1000be10:	1c29      	adds	r1, r5, #0
1000be12:	1c22      	adds	r2, r4, #0
1000be14:	4b03      	ldr	r3, [pc, #12]	; (1000be24 <at_ble_characteristic_value_set+0x38>)
1000be16:	4798      	blx	r3
1000be18:	bd70      	pop	{r4, r5, r6, pc}
1000be1a:	46c0      	nop			; (mov r8, r8)
1000be1c:	1000bcfd 	.word	0x1000bcfd
1000be20:	1000eacb 	.word	0x1000eacb
1000be24:	1000d8d9 	.word	0x1000d8d9

1000be28 <at_ble_characteristic_value_get>:
1000be28:	b570      	push	{r4, r5, r6, lr}
1000be2a:	4b0c      	ldr	r3, [pc, #48]	; (1000be5c <at_ble_characteristic_value_get+0x34>)
1000be2c:	1c06      	adds	r6, r0, #0
1000be2e:	1c0c      	adds	r4, r1, #0
1000be30:	1c15      	adds	r5, r2, #0
1000be32:	4798      	blx	r3
1000be34:	2800      	cmp	r0, #0
1000be36:	d00b      	beq.n	1000be50 <at_ble_characteristic_value_get+0x28>
1000be38:	6883      	ldr	r3, [r0, #8]
1000be3a:	2b00      	cmp	r3, #0
1000be3c:	d008      	beq.n	1000be50 <at_ble_characteristic_value_get+0x28>
1000be3e:	8883      	ldrh	r3, [r0, #4]
1000be40:	802b      	strh	r3, [r5, #0]
1000be42:	8882      	ldrh	r2, [r0, #4]
1000be44:	6881      	ldr	r1, [r0, #8]
1000be46:	4b06      	ldr	r3, [pc, #24]	; (1000be60 <at_ble_characteristic_value_get+0x38>)
1000be48:	1c20      	adds	r0, r4, #0
1000be4a:	4798      	blx	r3
1000be4c:	2000      	movs	r0, #0
1000be4e:	e004      	b.n	1000be5a <at_ble_characteristic_value_get+0x32>
1000be50:	1c30      	adds	r0, r6, #0
1000be52:	1c29      	adds	r1, r5, #0
1000be54:	1c22      	adds	r2, r4, #0
1000be56:	4b03      	ldr	r3, [pc, #12]	; (1000be64 <at_ble_characteristic_value_get+0x3c>)
1000be58:	4798      	blx	r3
1000be5a:	bd70      	pop	{r4, r5, r6, pc}
1000be5c:	1000bcfd 	.word	0x1000bcfd
1000be60:	1000eacb 	.word	0x1000eacb
1000be64:	1000d965 	.word	0x1000d965

1000be68 <at_ble_write_authorize_reply>:
1000be68:	b5f0      	push	{r4, r5, r6, r7, lr}
1000be6a:	b085      	sub	sp, #20
1000be6c:	1c04      	adds	r4, r0, #0
1000be6e:	9101      	str	r1, [sp, #4]
1000be70:	2900      	cmp	r1, #0
1000be72:	d128      	bne.n	1000bec6 <at_ble_write_authorize_reply+0x5e>
1000be74:	8843      	ldrh	r3, [r0, #2]
1000be76:	1c27      	adds	r7, r4, #0
1000be78:	9300      	str	r3, [sp, #0]
1000be7a:	1c18      	adds	r0, r3, #0
1000be7c:	4b16      	ldr	r3, [pc, #88]	; (1000bed8 <at_ble_write_authorize_reply+0x70>)
1000be7e:	4798      	blx	r3
1000be80:	3708      	adds	r7, #8
1000be82:	2800      	cmp	r0, #0
1000be84:	d009      	beq.n	1000be9a <at_ble_write_authorize_reply+0x32>
1000be86:	6880      	ldr	r0, [r0, #8]
1000be88:	2800      	cmp	r0, #0
1000be8a:	d006      	beq.n	1000be9a <at_ble_write_authorize_reply+0x32>
1000be8c:	88a3      	ldrh	r3, [r4, #4]
1000be8e:	88e2      	ldrh	r2, [r4, #6]
1000be90:	18c0      	adds	r0, r0, r3
1000be92:	1c39      	adds	r1, r7, #0
1000be94:	4b11      	ldr	r3, [pc, #68]	; (1000bedc <at_ble_write_authorize_reply+0x74>)
1000be96:	4798      	blx	r3
1000be98:	e015      	b.n	1000bec6 <at_ble_write_authorize_reply+0x5e>
1000be9a:	ab02      	add	r3, sp, #8
1000be9c:	1d9e      	adds	r6, r3, #6
1000be9e:	2300      	movs	r3, #0
1000bea0:	4d0f      	ldr	r5, [pc, #60]	; (1000bee0 <at_ble_write_authorize_reply+0x78>)
1000bea2:	8033      	strh	r3, [r6, #0]
1000bea4:	6829      	ldr	r1, [r5, #0]
1000bea6:	1c32      	adds	r2, r6, #0
1000bea8:	4b0e      	ldr	r3, [pc, #56]	; (1000bee4 <at_ble_write_authorize_reply+0x7c>)
1000beaa:	9800      	ldr	r0, [sp, #0]
1000beac:	4798      	blx	r3
1000beae:	682b      	ldr	r3, [r5, #0]
1000beb0:	88a0      	ldrh	r0, [r4, #4]
1000beb2:	88e2      	ldrh	r2, [r4, #6]
1000beb4:	1818      	adds	r0, r3, r0
1000beb6:	1c39      	adds	r1, r7, #0
1000beb8:	4b08      	ldr	r3, [pc, #32]	; (1000bedc <at_ble_write_authorize_reply+0x74>)
1000beba:	4798      	blx	r3
1000bebc:	8860      	ldrh	r0, [r4, #2]
1000bebe:	8832      	ldrh	r2, [r6, #0]
1000bec0:	6829      	ldr	r1, [r5, #0]
1000bec2:	4b09      	ldr	r3, [pc, #36]	; (1000bee8 <at_ble_write_authorize_reply+0x80>)
1000bec4:	4798      	blx	r3
1000bec6:	8860      	ldrh	r0, [r4, #2]
1000bec8:	8821      	ldrh	r1, [r4, #0]
1000beca:	9a01      	ldr	r2, [sp, #4]
1000becc:	4b07      	ldr	r3, [pc, #28]	; (1000beec <at_ble_write_authorize_reply+0x84>)
1000bece:	4798      	blx	r3
1000bed0:	2000      	movs	r0, #0
1000bed2:	b005      	add	sp, #20
1000bed4:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000bed6:	46c0      	nop			; (mov r8, r8)
1000bed8:	1000bcfd 	.word	0x1000bcfd
1000bedc:	1000eacb 	.word	0x1000eacb
1000bee0:	10010898 	.word	0x10010898
1000bee4:	1000be29 	.word	0x1000be29
1000bee8:	1000bded 	.word	0x1000bded
1000beec:	1000d5d1 	.word	0x1000d5d1

1000bef0 <gatts_handle_read_req>:
1000bef0:	b538      	push	{r3, r4, r5, lr}
1000bef2:	1c0c      	adds	r4, r1, #0
1000bef4:	4b07      	ldr	r3, [pc, #28]	; (1000bf14 <gatts_handle_read_req+0x24>)
1000bef6:	4798      	blx	r3
1000bef8:	8865      	ldrh	r5, [r4, #2]
1000befa:	4b07      	ldr	r3, [pc, #28]	; (1000bf18 <gatts_handle_read_req+0x28>)
1000befc:	1c28      	adds	r0, r5, #0
1000befe:	4798      	blx	r3
1000bf00:	7883      	ldrb	r3, [r0, #2]
1000bf02:	2026      	movs	r0, #38	; 0x26
1000bf04:	07db      	lsls	r3, r3, #31
1000bf06:	d404      	bmi.n	1000bf12 <gatts_handle_read_req+0x22>
1000bf08:	8820      	ldrh	r0, [r4, #0]
1000bf0a:	1c29      	adds	r1, r5, #0
1000bf0c:	4b03      	ldr	r3, [pc, #12]	; (1000bf1c <gatts_handle_read_req+0x2c>)
1000bf0e:	4798      	blx	r3
1000bf10:	203b      	movs	r0, #59	; 0x3b
1000bf12:	bd38      	pop	{r3, r4, r5, pc}
1000bf14:	1000d515 	.word	0x1000d515
1000bf18:	1000bcfd 	.word	0x1000bcfd
1000bf1c:	1000bd3d 	.word	0x1000bd3d

1000bf20 <gatts_handle_att_info_req>:
1000bf20:	b538      	push	{r3, r4, r5, lr}
1000bf22:	1c0d      	adds	r5, r1, #0
1000bf24:	4b0a      	ldr	r3, [pc, #40]	; (1000bf50 <gatts_handle_att_info_req+0x30>)
1000bf26:	1c14      	adds	r4, r2, #0
1000bf28:	4798      	blx	r3
1000bf2a:	882d      	ldrh	r5, [r5, #0]
1000bf2c:	4b09      	ldr	r3, [pc, #36]	; (1000bf54 <gatts_handle_att_info_req+0x34>)
1000bf2e:	1c28      	adds	r0, r5, #0
1000bf30:	4798      	blx	r3
1000bf32:	0a22      	lsrs	r2, r4, #8
1000bf34:	1c03      	adds	r3, r0, #0
1000bf36:	4c08      	ldr	r4, [pc, #32]	; (1000bf58 <gatts_handle_att_info_req+0x38>)
1000bf38:	b291      	uxth	r1, r2
1000bf3a:	2800      	cmp	r0, #0
1000bf3c:	d003      	beq.n	1000bf46 <gatts_handle_att_info_req+0x26>
1000bf3e:	8882      	ldrh	r2, [r0, #4]
1000bf40:	2300      	movs	r3, #0
1000bf42:	1c28      	adds	r0, r5, #0
1000bf44:	e001      	b.n	1000bf4a <gatts_handle_att_info_req+0x2a>
1000bf46:	1c28      	adds	r0, r5, #0
1000bf48:	2201      	movs	r2, #1
1000bf4a:	47a0      	blx	r4
1000bf4c:	203b      	movs	r0, #59	; 0x3b
1000bf4e:	bd38      	pop	{r3, r4, r5, pc}
1000bf50:	1000d559 	.word	0x1000d559
1000bf54:	1000bcfd 	.word	0x1000bcfd
1000bf58:	1000d615 	.word	0x1000d615

1000bf5c <gatts_handle_write_req>:
1000bf5c:	b510      	push	{r4, lr}
1000bf5e:	1c14      	adds	r4, r2, #0
1000bf60:	4b07      	ldr	r3, [pc, #28]	; (1000bf80 <gatts_handle_write_req+0x24>)
1000bf62:	4798      	blx	r3
1000bf64:	4b07      	ldr	r3, [pc, #28]	; (1000bf84 <gatts_handle_write_req+0x28>)
1000bf66:	8860      	ldrh	r0, [r4, #2]
1000bf68:	4798      	blx	r3
1000bf6a:	2302      	movs	r3, #2
1000bf6c:	7881      	ldrb	r1, [r0, #2]
1000bf6e:	2022      	movs	r0, #34	; 0x22
1000bf70:	4019      	ands	r1, r3
1000bf72:	d103      	bne.n	1000bf7c <gatts_handle_write_req+0x20>
1000bf74:	1c20      	adds	r0, r4, #0
1000bf76:	4b04      	ldr	r3, [pc, #16]	; (1000bf88 <gatts_handle_write_req+0x2c>)
1000bf78:	4798      	blx	r3
1000bf7a:	201f      	movs	r0, #31
1000bf7c:	bd10      	pop	{r4, pc}
1000bf7e:	46c0      	nop			; (mov r8, r8)
1000bf80:	1000d521 	.word	0x1000d521
1000bf84:	1000bcfd 	.word	0x1000bcfd
1000bf88:	1000be69 	.word	0x1000be69

1000bf8c <init_l2cc_task_module>:
1000bf8c:	220a      	movs	r2, #10
1000bf8e:	4b01      	ldr	r3, [pc, #4]	; (1000bf94 <init_l2cc_task_module+0x8>)
1000bf90:	701a      	strb	r2, [r3, #0]
1000bf92:	4770      	bx	lr
1000bf94:	10010894 	.word	0x10010894

1000bf98 <l2cc_data_send_rsp_handler>:
1000bf98:	b510      	push	{r4, lr}
1000bf9a:	7802      	ldrb	r2, [r0, #0]
1000bf9c:	700a      	strb	r2, [r1, #0]
1000bf9e:	7883      	ldrb	r3, [r0, #2]
1000bfa0:	7844      	ldrb	r4, [r0, #1]
1000bfa2:	021b      	lsls	r3, r3, #8
1000bfa4:	4323      	orrs	r3, r4
1000bfa6:	804b      	strh	r3, [r1, #2]
1000bfa8:	7903      	ldrb	r3, [r0, #4]
1000bfaa:	78c0      	ldrb	r0, [r0, #3]
1000bfac:	021b      	lsls	r3, r3, #8
1000bfae:	4303      	orrs	r3, r0
1000bfb0:	808b      	strh	r3, [r1, #4]
1000bfb2:	2a00      	cmp	r2, #0
1000bfb4:	d103      	bne.n	1000bfbe <l2cc_data_send_rsp_handler+0x26>
1000bfb6:	4a02      	ldr	r2, [pc, #8]	; (1000bfc0 <l2cc_data_send_rsp_handler+0x28>)
1000bfb8:	7813      	ldrb	r3, [r2, #0]
1000bfba:	3301      	adds	r3, #1
1000bfbc:	7013      	strb	r3, [r2, #0]
1000bfbe:	bd10      	pop	{r4, pc}
1000bfc0:	10010894 	.word	0x10010894

1000bfc4 <l2cc_data_received_handler>:
1000bfc4:	b508      	push	{r3, lr}
1000bfc6:	1c03      	adds	r3, r0, #0
1000bfc8:	7842      	ldrb	r2, [r0, #1]
1000bfca:	7800      	ldrb	r0, [r0, #0]
1000bfcc:	0212      	lsls	r2, r2, #8
1000bfce:	4302      	orrs	r2, r0
1000bfd0:	800a      	strh	r2, [r1, #0]
1000bfd2:	78da      	ldrb	r2, [r3, #3]
1000bfd4:	7898      	ldrb	r0, [r3, #2]
1000bfd6:	0212      	lsls	r2, r2, #8
1000bfd8:	4302      	orrs	r2, r0
1000bfda:	804a      	strh	r2, [r1, #2]
1000bfdc:	795a      	ldrb	r2, [r3, #5]
1000bfde:	7918      	ldrb	r0, [r3, #4]
1000bfe0:	0212      	lsls	r2, r2, #8
1000bfe2:	4302      	orrs	r2, r0
1000bfe4:	808a      	strh	r2, [r1, #4]
1000bfe6:	1d88      	adds	r0, r1, #6
1000bfe8:	1d99      	adds	r1, r3, #6
1000bfea:	4b01      	ldr	r3, [pc, #4]	; (1000bff0 <l2cc_data_received_handler+0x2c>)
1000bfec:	4798      	blx	r3
1000bfee:	bd08      	pop	{r3, pc}
1000bff0:	1000eacb 	.word	0x1000eacb

1000bff4 <at_ble_authenticate>:
1000bff4:	b5f0      	push	{r4, r5, r6, r7, lr}
1000bff6:	1c0c      	adds	r4, r1, #0
1000bff8:	211f      	movs	r1, #31
1000bffa:	b08b      	sub	sp, #44	; 0x2c
1000bffc:	9307      	str	r3, [sp, #28]
1000bffe:	ab02      	add	r3, sp, #8
1000c000:	18c9      	adds	r1, r1, r3
1000c002:	230f      	movs	r3, #15
1000c004:	700b      	strb	r3, [r1, #0]
1000c006:	4b40      	ldr	r3, [pc, #256]	; (1000c108 <at_ble_authenticate+0x114>)
1000c008:	1c05      	adds	r5, r0, #0
1000c00a:	1c16      	adds	r6, r2, #0
1000c00c:	4798      	blx	r3
1000c00e:	1c07      	adds	r7, r0, #0
1000c010:	2001      	movs	r0, #1
1000c012:	2f07      	cmp	r7, #7
1000c014:	d875      	bhi.n	1000c102 <at_ble_authenticate+0x10e>
1000c016:	2c00      	cmp	r4, #0
1000c018:	d113      	bne.n	1000c042 <at_ble_authenticate+0x4e>
1000c01a:	2312      	movs	r3, #18
1000c01c:	435f      	muls	r7, r3
1000c01e:	4b3b      	ldr	r3, [pc, #236]	; (1000c10c <at_ble_authenticate+0x118>)
1000c020:	5cfb      	ldrb	r3, [r7, r3]
1000c022:	4283      	cmp	r3, r0
1000c024:	d001      	beq.n	1000c02a <at_ble_authenticate+0x36>
1000c026:	20cf      	movs	r0, #207	; 0xcf
1000c028:	e06b      	b.n	1000c102 <at_ble_authenticate+0x10e>
1000c02a:	9504      	str	r5, [sp, #16]
1000c02c:	9400      	str	r4, [sp, #0]
1000c02e:	9401      	str	r4, [sp, #4]
1000c030:	9402      	str	r4, [sp, #8]
1000c032:	9403      	str	r4, [sp, #12]
1000c034:	1c20      	adds	r0, r4, #0
1000c036:	1c21      	adds	r1, r4, #0
1000c038:	1c22      	adds	r2, r4, #0
1000c03a:	1c23      	adds	r3, r4, #0
1000c03c:	4d34      	ldr	r5, [pc, #208]	; (1000c110 <at_ble_authenticate+0x11c>)
1000c03e:	47a8      	blx	r5
1000c040:	e05e      	b.n	1000c100 <at_ble_authenticate+0x10c>
1000c042:	7922      	ldrb	r2, [r4, #4]
1000c044:	2a06      	cmp	r2, #6
1000c046:	d9ee      	bls.n	1000c026 <at_ble_authenticate+0x32>
1000c048:	7963      	ldrb	r3, [r4, #5]
1000c04a:	2b10      	cmp	r3, #16
1000c04c:	d8eb      	bhi.n	1000c026 <at_ble_authenticate+0x32>
1000c04e:	429a      	cmp	r2, r3
1000c050:	d8e9      	bhi.n	1000c026 <at_ble_authenticate+0x32>
1000c052:	7a23      	ldrb	r3, [r4, #8]
1000c054:	2b04      	cmp	r3, #4
1000c056:	d8e6      	bhi.n	1000c026 <at_ble_authenticate+0x32>
1000c058:	79a3      	ldrb	r3, [r4, #6]
1000c05a:	2b07      	cmp	r3, #7
1000c05c:	d8e3      	bhi.n	1000c026 <at_ble_authenticate+0x32>
1000c05e:	79e3      	ldrb	r3, [r4, #7]
1000c060:	2b07      	cmp	r3, #7
1000c062:	d8e0      	bhi.n	1000c026 <at_ble_authenticate+0x32>
1000c064:	78a3      	ldrb	r3, [r4, #2]
1000c066:	2b00      	cmp	r3, #0
1000c068:	d006      	beq.n	1000c078 <at_ble_authenticate+0x84>
1000c06a:	2e00      	cmp	r6, #0
1000c06c:	d0db      	beq.n	1000c026 <at_ble_authenticate+0x32>
1000c06e:	4829      	ldr	r0, [pc, #164]	; (1000c114 <at_ble_authenticate+0x120>)
1000c070:	1c31      	adds	r1, r6, #0
1000c072:	221c      	movs	r2, #28
1000c074:	4b28      	ldr	r3, [pc, #160]	; (1000c118 <at_ble_authenticate+0x124>)
1000c076:	4798      	blx	r3
1000c078:	9b07      	ldr	r3, [sp, #28]
1000c07a:	2b00      	cmp	r3, #0
1000c07c:	d005      	beq.n	1000c08a <at_ble_authenticate+0x96>
1000c07e:	4827      	ldr	r0, [pc, #156]	; (1000c11c <at_ble_authenticate+0x128>)
1000c080:	1c19      	adds	r1, r3, #0
1000c082:	309a      	adds	r0, #154	; 0x9a
1000c084:	2210      	movs	r2, #16
1000c086:	4b24      	ldr	r3, [pc, #144]	; (1000c118 <at_ble_authenticate+0x124>)
1000c088:	4798      	blx	r3
1000c08a:	7863      	ldrb	r3, [r4, #1]
1000c08c:	78a2      	ldrb	r2, [r4, #2]
1000c08e:	009b      	lsls	r3, r3, #2
1000c090:	4313      	orrs	r3, r2
1000c092:	2212      	movs	r2, #18
1000c094:	4357      	muls	r7, r2
1000c096:	4a1d      	ldr	r2, [pc, #116]	; (1000c10c <at_ble_authenticate+0x118>)
1000c098:	b2db      	uxtb	r3, r3
1000c09a:	5cba      	ldrb	r2, [r7, r2]
1000c09c:	2a00      	cmp	r2, #0
1000c09e:	d116      	bne.n	1000c0ce <at_ble_authenticate+0xda>
1000c0a0:	79a0      	ldrb	r0, [r4, #6]
1000c0a2:	0742      	lsls	r2, r0, #29
1000c0a4:	d502      	bpl.n	1000c0ac <at_ble_authenticate+0xb8>
1000c0a6:	9a07      	ldr	r2, [sp, #28]
1000c0a8:	2a00      	cmp	r2, #0
1000c0aa:	d0bc      	beq.n	1000c026 <at_ble_authenticate+0x32>
1000c0ac:	07c2      	lsls	r2, r0, #31
1000c0ae:	d501      	bpl.n	1000c0b4 <at_ble_authenticate+0xc0>
1000c0b0:	2e00      	cmp	r6, #0
1000c0b2:	d0b8      	beq.n	1000c026 <at_ble_authenticate+0x32>
1000c0b4:	7966      	ldrb	r6, [r4, #5]
1000c0b6:	7821      	ldrb	r1, [r4, #0]
1000c0b8:	78e2      	ldrb	r2, [r4, #3]
1000c0ba:	9600      	str	r6, [sp, #0]
1000c0bc:	9001      	str	r0, [sp, #4]
1000c0be:	79e0      	ldrb	r0, [r4, #7]
1000c0c0:	9002      	str	r0, [sp, #8]
1000c0c2:	7a20      	ldrb	r0, [r4, #8]
1000c0c4:	4c16      	ldr	r4, [pc, #88]	; (1000c120 <at_ble_authenticate+0x12c>)
1000c0c6:	9003      	str	r0, [sp, #12]
1000c0c8:	1c28      	adds	r0, r5, #0
1000c0ca:	47a0      	blx	r4
1000c0cc:	e018      	b.n	1000c100 <at_ble_authenticate+0x10c>
1000c0ce:	2a01      	cmp	r2, #1
1000c0d0:	d1a9      	bne.n	1000c026 <at_ble_authenticate+0x32>
1000c0d2:	79e0      	ldrb	r0, [r4, #7]
1000c0d4:	0742      	lsls	r2, r0, #29
1000c0d6:	d502      	bpl.n	1000c0de <at_ble_authenticate+0xea>
1000c0d8:	9a07      	ldr	r2, [sp, #28]
1000c0da:	2a00      	cmp	r2, #0
1000c0dc:	d0a3      	beq.n	1000c026 <at_ble_authenticate+0x32>
1000c0de:	07c2      	lsls	r2, r0, #31
1000c0e0:	d501      	bpl.n	1000c0e6 <at_ble_authenticate+0xf2>
1000c0e2:	2e00      	cmp	r6, #0
1000c0e4:	d09f      	beq.n	1000c026 <at_ble_authenticate+0x32>
1000c0e6:	7966      	ldrb	r6, [r4, #5]
1000c0e8:	7821      	ldrb	r1, [r4, #0]
1000c0ea:	78e2      	ldrb	r2, [r4, #3]
1000c0ec:	9600      	str	r6, [sp, #0]
1000c0ee:	79a6      	ldrb	r6, [r4, #6]
1000c0f0:	9002      	str	r0, [sp, #8]
1000c0f2:	9601      	str	r6, [sp, #4]
1000c0f4:	7a20      	ldrb	r0, [r4, #8]
1000c0f6:	9504      	str	r5, [sp, #16]
1000c0f8:	9003      	str	r0, [sp, #12]
1000c0fa:	4c05      	ldr	r4, [pc, #20]	; (1000c110 <at_ble_authenticate+0x11c>)
1000c0fc:	2001      	movs	r0, #1
1000c0fe:	47a0      	blx	r4
1000c100:	2000      	movs	r0, #0
1000c102:	b00b      	add	sp, #44	; 0x2c
1000c104:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000c106:	46c0      	nop			; (mov r8, r8)
1000c108:	1000c4b5 	.word	0x1000c4b5
1000c10c:	10012ac2 	.word	0x10012ac2
1000c110:	1000ca25 	.word	0x1000ca25
1000c114:	10012bd0 	.word	0x10012bd0
1000c118:	1000eacb 	.word	0x1000eacb
1000c11c:	10012b52 	.word	0x10012b52
1000c120:	1000c805 	.word	0x1000c805

1000c124 <at_ble_pair_key_reply>:
1000c124:	b5f0      	push	{r4, r5, r6, r7, lr}
1000c126:	b085      	sub	sp, #20
1000c128:	1c05      	adds	r5, r0, #0
1000c12a:	1c0c      	adds	r4, r1, #0
1000c12c:	1c16      	adds	r6, r2, #0
1000c12e:	2100      	movs	r1, #0
1000c130:	4668      	mov	r0, sp
1000c132:	2210      	movs	r2, #16
1000c134:	4b18      	ldr	r3, [pc, #96]	; (1000c198 <at_ble_pair_key_reply+0x74>)
1000c136:	4798      	blx	r3
1000c138:	2101      	movs	r1, #1
1000c13a:	2e00      	cmp	r6, #0
1000c13c:	d101      	bne.n	1000c142 <at_ble_pair_key_reply+0x1e>
1000c13e:	1c31      	adds	r1, r6, #0
1000c140:	466e      	mov	r6, sp
1000c142:	2c00      	cmp	r4, #0
1000c144:	d116      	bne.n	1000c174 <at_ble_pair_key_reply+0x50>
1000c146:	2701      	movs	r7, #1
1000c148:	1c23      	adds	r3, r4, #0
1000c14a:	1d70      	adds	r0, r6, #5
1000c14c:	3e01      	subs	r6, #1
1000c14e:	7802      	ldrb	r2, [r0, #0]
1000c150:	3801      	subs	r0, #1
1000c152:	3a30      	subs	r2, #48	; 0x30
1000c154:	437a      	muls	r2, r7
1000c156:	189b      	adds	r3, r3, r2
1000c158:	220a      	movs	r2, #10
1000c15a:	4357      	muls	r7, r2
1000c15c:	42b0      	cmp	r0, r6
1000c15e:	d1f6      	bne.n	1000c14e <at_ble_pair_key_reply+0x2a>
1000c160:	466a      	mov	r2, sp
1000c162:	4668      	mov	r0, sp
1000c164:	7013      	strb	r3, [r2, #0]
1000c166:	0a1a      	lsrs	r2, r3, #8
1000c168:	7042      	strb	r2, [r0, #1]
1000c16a:	0c1a      	lsrs	r2, r3, #16
1000c16c:	0e1b      	lsrs	r3, r3, #24
1000c16e:	7082      	strb	r2, [r0, #2]
1000c170:	70c3      	strb	r3, [r0, #3]
1000c172:	e009      	b.n	1000c188 <at_ble_pair_key_reply+0x64>
1000c174:	20cf      	movs	r0, #207	; 0xcf
1000c176:	2c01      	cmp	r4, #1
1000c178:	d10c      	bne.n	1000c194 <at_ble_pair_key_reply+0x70>
1000c17a:	2300      	movs	r3, #0
1000c17c:	4668      	mov	r0, sp
1000c17e:	5cf2      	ldrb	r2, [r6, r3]
1000c180:	54c2      	strb	r2, [r0, r3]
1000c182:	3301      	adds	r3, #1
1000c184:	2b10      	cmp	r3, #16
1000c186:	d1f9      	bne.n	1000c17c <at_ble_pair_key_reply+0x58>
1000c188:	2004      	movs	r0, #4
1000c18a:	466a      	mov	r2, sp
1000c18c:	1c2b      	adds	r3, r5, #0
1000c18e:	4c03      	ldr	r4, [pc, #12]	; (1000c19c <at_ble_pair_key_reply+0x78>)
1000c190:	47a0      	blx	r4
1000c192:	2000      	movs	r0, #0
1000c194:	b005      	add	sp, #20
1000c196:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000c198:	1000eadd 	.word	0x1000eadd
1000c19c:	1000caa1 	.word	0x1000caa1

1000c1a0 <at_ble_encryption_start>:
1000c1a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000c1a2:	23cf      	movs	r3, #207	; 0xcf
1000c1a4:	2900      	cmp	r1, #0
1000c1a6:	d02b      	beq.n	1000c200 <at_ble_encryption_start+0x60>
1000c1a8:	2a05      	cmp	r2, #5
1000c1aa:	d829      	bhi.n	1000c200 <at_ble_encryption_start+0x60>
1000c1ac:	2701      	movs	r7, #1
1000c1ae:	1c3d      	adds	r5, r7, #0
1000c1b0:	2433      	movs	r4, #51	; 0x33
1000c1b2:	4095      	lsls	r5, r2
1000c1b4:	4225      	tst	r5, r4
1000c1b6:	d023      	beq.n	1000c200 <at_ble_encryption_start+0x60>
1000c1b8:	7e8c      	ldrb	r4, [r1, #26]
1000c1ba:	3c07      	subs	r4, #7
1000c1bc:	2c09      	cmp	r4, #9
1000c1be:	d81f      	bhi.n	1000c200 <at_ble_encryption_start+0x60>
1000c1c0:	4b10      	ldr	r3, [pc, #64]	; (1000c204 <at_ble_encryption_start+0x64>)
1000c1c2:	1c0c      	adds	r4, r1, #0
1000c1c4:	2100      	movs	r1, #0
1000c1c6:	1c15      	adds	r5, r2, #0
1000c1c8:	1c06      	adds	r6, r0, #0
1000c1ca:	4798      	blx	r3
1000c1cc:	1c3b      	adds	r3, r7, #0
1000c1ce:	2807      	cmp	r0, #7
1000c1d0:	d816      	bhi.n	1000c200 <at_ble_encryption_start+0x60>
1000c1d2:	2312      	movs	r3, #18
1000c1d4:	4358      	muls	r0, r3
1000c1d6:	4b0c      	ldr	r3, [pc, #48]	; (1000c208 <at_ble_encryption_start+0x68>)
1000c1d8:	5cc7      	ldrb	r7, [r0, r3]
1000c1da:	23e0      	movs	r3, #224	; 0xe0
1000c1dc:	2f00      	cmp	r7, #0
1000c1de:	d10f      	bne.n	1000c200 <at_ble_encryption_start+0x60>
1000c1e0:	1c21      	adds	r1, r4, #0
1000c1e2:	221c      	movs	r2, #28
1000c1e4:	4b09      	ldr	r3, [pc, #36]	; (1000c20c <at_ble_encryption_start+0x6c>)
1000c1e6:	480a      	ldr	r0, [pc, #40]	; (1000c210 <at_ble_encryption_start+0x70>)
1000c1e8:	4798      	blx	r3
1000c1ea:	1c23      	adds	r3, r4, #0
1000c1ec:	7ea1      	ldrb	r1, [r4, #26]
1000c1ee:	8a22      	ldrh	r2, [r4, #16]
1000c1f0:	3312      	adds	r3, #18
1000c1f2:	9100      	str	r1, [sp, #0]
1000c1f4:	9501      	str	r5, [sp, #4]
1000c1f6:	1c21      	adds	r1, r4, #0
1000c1f8:	1c30      	adds	r0, r6, #0
1000c1fa:	4c06      	ldr	r4, [pc, #24]	; (1000c214 <at_ble_encryption_start+0x74>)
1000c1fc:	47a0      	blx	r4
1000c1fe:	1c3b      	adds	r3, r7, #0
1000c200:	1c18      	adds	r0, r3, #0
1000c202:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1000c204:	1000c4b5 	.word	0x1000c4b5
1000c208:	10012ac2 	.word	0x10012ac2
1000c20c:	1000eacb 	.word	0x1000eacb
1000c210:	10012bd0 	.word	0x10012bd0
1000c214:	1000caf1 	.word	0x1000caf1

1000c218 <at_ble_encryption_request_reply>:
1000c218:	b573      	push	{r0, r1, r4, r5, r6, lr}
1000c21a:	24cf      	movs	r4, #207	; 0xcf
1000c21c:	2b00      	cmp	r3, #0
1000c21e:	d011      	beq.n	1000c244 <at_ble_encryption_request_reply+0x2c>
1000c220:	2a00      	cmp	r2, #0
1000c222:	d00a      	beq.n	1000c23a <at_ble_encryption_request_reply+0x22>
1000c224:	2905      	cmp	r1, #5
1000c226:	d80d      	bhi.n	1000c244 <at_ble_encryption_request_reply+0x2c>
1000c228:	2501      	movs	r5, #1
1000c22a:	2633      	movs	r6, #51	; 0x33
1000c22c:	408d      	lsls	r5, r1
1000c22e:	4235      	tst	r5, r6
1000c230:	d008      	beq.n	1000c244 <at_ble_encryption_request_reply+0x2c>
1000c232:	7e9d      	ldrb	r5, [r3, #26]
1000c234:	3d07      	subs	r5, #7
1000c236:	2d09      	cmp	r5, #9
1000c238:	d804      	bhi.n	1000c244 <at_ble_encryption_request_reply+0x2c>
1000c23a:	7e9c      	ldrb	r4, [r3, #26]
1000c23c:	9400      	str	r4, [sp, #0]
1000c23e:	4c02      	ldr	r4, [pc, #8]	; (1000c248 <at_ble_encryption_request_reply+0x30>)
1000c240:	47a0      	blx	r4
1000c242:	2400      	movs	r4, #0
1000c244:	1c20      	adds	r0, r4, #0
1000c246:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
1000c248:	1000cbad 	.word	0x1000cbad

1000c24c <rx_callback>:
1000c24c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000c24e:	8883      	ldrh	r3, [r0, #4]
1000c250:	1c01      	adds	r1, r0, #0
1000c252:	9301      	str	r3, [sp, #4]
1000c254:	88c5      	ldrh	r5, [r0, #6]
1000c256:	8806      	ldrh	r6, [r0, #0]
1000c258:	2d00      	cmp	r5, #0
1000c25a:	d10f      	bne.n	1000c27c <rx_callback+0x30>
1000c25c:	1c19      	adds	r1, r3, #0
1000c25e:	1c30      	adds	r0, r6, #0
1000c260:	4b19      	ldr	r3, [pc, #100]	; (1000c2c8 <rx_callback+0x7c>)
1000c262:	1c2a      	adds	r2, r5, #0
1000c264:	4798      	blx	r3
1000c266:	1e03      	subs	r3, r0, #0
1000c268:	d105      	bne.n	1000c276 <rx_callback+0x2a>
1000c26a:	1c30      	adds	r0, r6, #0
1000c26c:	9901      	ldr	r1, [sp, #4]
1000c26e:	1c1a      	adds	r2, r3, #0
1000c270:	4c16      	ldr	r4, [pc, #88]	; (1000c2cc <rx_callback+0x80>)
1000c272:	47a0      	blx	r4
1000c274:	e027      	b.n	1000c2c6 <rx_callback+0x7a>
1000c276:	4b16      	ldr	r3, [pc, #88]	; (1000c2d0 <rx_callback+0x84>)
1000c278:	4798      	blx	r3
1000c27a:	e024      	b.n	1000c2c6 <rx_callback+0x7a>
1000c27c:	4c15      	ldr	r4, [pc, #84]	; (1000c2d4 <rx_callback+0x88>)
1000c27e:	4a16      	ldr	r2, [pc, #88]	; (1000c2d8 <rx_callback+0x8c>)
1000c280:	6823      	ldr	r3, [r4, #0]
1000c282:	6812      	ldr	r2, [r2, #0]
1000c284:	18eb      	adds	r3, r5, r3
1000c286:	4293      	cmp	r3, r2
1000c288:	d901      	bls.n	1000c28e <rx_callback+0x42>
1000c28a:	2300      	movs	r3, #0
1000c28c:	6023      	str	r3, [r4, #0]
1000c28e:	4f13      	ldr	r7, [pc, #76]	; (1000c2dc <rx_callback+0x90>)
1000c290:	6822      	ldr	r2, [r4, #0]
1000c292:	683b      	ldr	r3, [r7, #0]
1000c294:	3108      	adds	r1, #8
1000c296:	1898      	adds	r0, r3, r2
1000c298:	1c2a      	adds	r2, r5, #0
1000c29a:	4b11      	ldr	r3, [pc, #68]	; (1000c2e0 <rx_callback+0x94>)
1000c29c:	4798      	blx	r3
1000c29e:	683b      	ldr	r3, [r7, #0]
1000c2a0:	6822      	ldr	r2, [r4, #0]
1000c2a2:	1c30      	adds	r0, r6, #0
1000c2a4:	189a      	adds	r2, r3, r2
1000c2a6:	9901      	ldr	r1, [sp, #4]
1000c2a8:	4b07      	ldr	r3, [pc, #28]	; (1000c2c8 <rx_callback+0x7c>)
1000c2aa:	4798      	blx	r3
1000c2ac:	2800      	cmp	r0, #0
1000c2ae:	d1e2      	bne.n	1000c276 <rx_callback+0x2a>
1000c2b0:	6823      	ldr	r3, [r4, #0]
1000c2b2:	683a      	ldr	r2, [r7, #0]
1000c2b4:	1c30      	adds	r0, r6, #0
1000c2b6:	18d2      	adds	r2, r2, r3
1000c2b8:	9901      	ldr	r1, [sp, #4]
1000c2ba:	1c2b      	adds	r3, r5, #0
1000c2bc:	4e03      	ldr	r6, [pc, #12]	; (1000c2cc <rx_callback+0x80>)
1000c2be:	47b0      	blx	r6
1000c2c0:	6823      	ldr	r3, [r4, #0]
1000c2c2:	18ed      	adds	r5, r5, r3
1000c2c4:	6025      	str	r5, [r4, #0]
1000c2c6:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
1000c2c8:	1000afb9 	.word	0x1000afb9
1000c2cc:	1000af31 	.word	0x1000af31
1000c2d0:	1000aa89 	.word	0x1000aa89
1000c2d4:	10012c2c 	.word	0x10012c2c
1000c2d8:	10011e48 	.word	0x10011e48
1000c2dc:	10011e44 	.word	0x10011e44
1000c2e0:	1000eacb 	.word	0x1000eacb

1000c2e4 <interface_send>:
1000c2e4:	b508      	push	{r3, lr}
1000c2e6:	4b02      	ldr	r3, [pc, #8]	; (1000c2f0 <interface_send+0xc>)
1000c2e8:	4798      	blx	r3
1000c2ea:	2000      	movs	r0, #0
1000c2ec:	bd08      	pop	{r3, pc}
1000c2ee:	46c0      	nop			; (mov r8, r8)
1000c2f0:	1000a7bd 	.word	0x1000a7bd

1000c2f4 <interface_init>:
1000c2f4:	2280      	movs	r2, #128	; 0x80
1000c2f6:	b510      	push	{r4, lr}
1000c2f8:	2100      	movs	r1, #0
1000c2fa:	1c04      	adds	r4, r0, #0
1000c2fc:	0092      	lsls	r2, r2, #2
1000c2fe:	4b08      	ldr	r3, [pc, #32]	; (1000c320 <interface_init+0x2c>)
1000c300:	4808      	ldr	r0, [pc, #32]	; (1000c324 <interface_init+0x30>)
1000c302:	4798      	blx	r3
1000c304:	2200      	movs	r2, #0
1000c306:	4b08      	ldr	r3, [pc, #32]	; (1000c328 <interface_init+0x34>)
1000c308:	601a      	str	r2, [r3, #0]
1000c30a:	4a08      	ldr	r2, [pc, #32]	; (1000c32c <interface_init+0x38>)
1000c30c:	4b08      	ldr	r3, [pc, #32]	; (1000c330 <interface_init+0x3c>)
1000c30e:	601a      	str	r2, [r3, #0]
1000c310:	4b08      	ldr	r3, [pc, #32]	; (1000c334 <interface_init+0x40>)
1000c312:	6922      	ldr	r2, [r4, #16]
1000c314:	601a      	str	r2, [r3, #0]
1000c316:	6962      	ldr	r2, [r4, #20]
1000c318:	4b07      	ldr	r3, [pc, #28]	; (1000c338 <interface_init+0x44>)
1000c31a:	601a      	str	r2, [r3, #0]
1000c31c:	bd10      	pop	{r4, pc}
1000c31e:	46c0      	nop			; (mov r8, r8)
1000c320:	1000eadd 	.word	0x1000eadd
1000c324:	10012e30 	.word	0x10012e30
1000c328:	10012c2c 	.word	0x10012c2c
1000c32c:	10012c30 	.word	0x10012c30
1000c330:	10010898 	.word	0x10010898
1000c334:	10011e44 	.word	0x10011e44
1000c338:	10011e48 	.word	0x10011e48

1000c33c <platform_cmd_cmpl_signal>:
1000c33c:	2201      	movs	r2, #1
1000c33e:	4b01      	ldr	r3, [pc, #4]	; (1000c344 <platform_cmd_cmpl_signal+0x8>)
1000c340:	601a      	str	r2, [r3, #0]
1000c342:	4770      	bx	lr
1000c344:	10011e4c 	.word	0x10011e4c

1000c348 <platform_cmd_cmpl_wait>:
1000c348:	b510      	push	{r4, lr}
1000c34a:	1c04      	adds	r4, r0, #0
1000c34c:	4b07      	ldr	r3, [pc, #28]	; (1000c36c <platform_cmd_cmpl_wait+0x24>)
1000c34e:	681a      	ldr	r2, [r3, #0]
1000c350:	2a01      	cmp	r2, #1
1000c352:	d003      	beq.n	1000c35c <platform_cmd_cmpl_wait+0x14>
1000c354:	4b06      	ldr	r3, [pc, #24]	; (1000c370 <platform_cmd_cmpl_wait+0x28>)
1000c356:	2000      	movs	r0, #0
1000c358:	4798      	blx	r3
1000c35a:	e7f7      	b.n	1000c34c <platform_cmd_cmpl_wait+0x4>
1000c35c:	6819      	ldr	r1, [r3, #0]
1000c35e:	2901      	cmp	r1, #1
1000c360:	d102      	bne.n	1000c368 <platform_cmd_cmpl_wait+0x20>
1000c362:	2200      	movs	r2, #0
1000c364:	601a      	str	r2, [r3, #0]
1000c366:	e000      	b.n	1000c36a <platform_cmd_cmpl_wait+0x22>
1000c368:	7022      	strb	r2, [r4, #0]
1000c36a:	bd10      	pop	{r4, pc}
1000c36c:	10011e4c 	.word	0x10011e4c
1000c370:	1000a80d 	.word	0x1000a80d

1000c374 <start_timer>:
1000c374:	4770      	bx	lr

1000c376 <stop_timer>:
1000c376:	4770      	bx	lr

1000c378 <dbg_le_set_bd_addr_req_handler>:
1000c378:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000c37a:	466b      	mov	r3, sp
1000c37c:	1dde      	adds	r6, r3, #7
1000c37e:	2300      	movs	r3, #0
1000c380:	7033      	strb	r3, [r6, #0]
1000c382:	230f      	movs	r3, #15
1000c384:	4c13      	ldr	r4, [pc, #76]	; (1000c3d4 <dbg_le_set_bd_addr_req_handler+0x5c>)
1000c386:	2703      	movs	r7, #3
1000c388:	7023      	strb	r3, [r4, #0]
1000c38a:	2300      	movs	r3, #0
1000c38c:	70e3      	strb	r3, [r4, #3]
1000c38e:	4b12      	ldr	r3, [pc, #72]	; (1000c3d8 <dbg_le_set_bd_addr_req_handler+0x60>)
1000c390:	1c01      	adds	r1, r0, #0
1000c392:	881a      	ldrh	r2, [r3, #0]
1000c394:	881b      	ldrh	r3, [r3, #0]
1000c396:	7122      	strb	r2, [r4, #4]
1000c398:	0a1b      	lsrs	r3, r3, #8
1000c39a:	2206      	movs	r2, #6
1000c39c:	7163      	strb	r3, [r4, #5]
1000c39e:	480f      	ldr	r0, [pc, #60]	; (1000c3dc <dbg_le_set_bd_addr_req_handler+0x64>)
1000c3a0:	4b0f      	ldr	r3, [pc, #60]	; (1000c3e0 <dbg_le_set_bd_addr_req_handler+0x68>)
1000c3a2:	7067      	strb	r7, [r4, #1]
1000c3a4:	70a7      	strb	r7, [r4, #2]
1000c3a6:	4798      	blx	r3
1000c3a8:	4d0e      	ldr	r5, [pc, #56]	; (1000c3e4 <dbg_le_set_bd_addr_req_handler+0x6c>)
1000c3aa:	4b0f      	ldr	r3, [pc, #60]	; (1000c3e8 <dbg_le_set_bd_addr_req_handler+0x70>)
1000c3ac:	210e      	movs	r1, #14
1000c3ae:	802b      	strh	r3, [r5, #0]
1000c3b0:	2306      	movs	r3, #6
1000c3b2:	71a3      	strb	r3, [r4, #6]
1000c3b4:	2300      	movs	r3, #0
1000c3b6:	1c20      	adds	r0, r4, #0
1000c3b8:	71e3      	strb	r3, [r4, #7]
1000c3ba:	4b0c      	ldr	r3, [pc, #48]	; (1000c3ec <dbg_le_set_bd_addr_req_handler+0x74>)
1000c3bc:	80af      	strh	r7, [r5, #4]
1000c3be:	4798      	blx	r3
1000c3c0:	1c30      	adds	r0, r6, #0
1000c3c2:	4b0b      	ldr	r3, [pc, #44]	; (1000c3f0 <dbg_le_set_bd_addr_req_handler+0x78>)
1000c3c4:	4798      	blx	r3
1000c3c6:	7833      	ldrb	r3, [r6, #0]
1000c3c8:	20e2      	movs	r0, #226	; 0xe2
1000c3ca:	2b00      	cmp	r3, #0
1000c3cc:	d101      	bne.n	1000c3d2 <dbg_le_set_bd_addr_req_handler+0x5a>
1000c3ce:	68ab      	ldr	r3, [r5, #8]
1000c3d0:	7818      	ldrb	r0, [r3, #0]
1000c3d2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1000c3d4:	10012e30 	.word	0x10012e30
1000c3d8:	10012ac0 	.word	0x10012ac0
1000c3dc:	10012e38 	.word	0x10012e38
1000c3e0:	1000eacb 	.word	0x1000eacb
1000c3e4:	10012ab4 	.word	0x10012ab4
1000c3e8:	00000329 	.word	0x00000329
1000c3ec:	1000c2e5 	.word	0x1000c2e5
1000c3f0:	1000c349 	.word	0x1000c349

1000c3f4 <gapc_get_dev_info_cfm.constprop.1>:
1000c3f4:	b538      	push	{r3, r4, r5, lr}
1000c3f6:	230b      	movs	r3, #11
1000c3f8:	4c27      	ldr	r4, [pc, #156]	; (1000c498 <gapc_get_dev_info_cfm.constprop.1+0xa4>)
1000c3fa:	7023      	strb	r3, [r4, #0]
1000c3fc:	3303      	adds	r3, #3
1000c3fe:	7063      	strb	r3, [r4, #1]
1000c400:	3329      	adds	r3, #41	; 0x29
1000c402:	70a3      	strb	r3, [r4, #2]
1000c404:	4b25      	ldr	r3, [pc, #148]	; (1000c49c <gapc_get_dev_info_cfm.constprop.1+0xa8>)
1000c406:	70e1      	strb	r1, [r4, #3]
1000c408:	881a      	ldrh	r2, [r3, #0]
1000c40a:	881b      	ldrh	r3, [r3, #0]
1000c40c:	7122      	strb	r2, [r4, #4]
1000c40e:	0a1b      	lsrs	r3, r3, #8
1000c410:	7163      	strb	r3, [r4, #5]
1000c412:	2300      	movs	r3, #0
1000c414:	7220      	strb	r0, [r4, #8]
1000c416:	7263      	strb	r3, [r4, #9]
1000c418:	2801      	cmp	r0, #1
1000c41a:	d02b      	beq.n	1000c474 <gapc_get_dev_info_cfm.constprop.1+0x80>
1000c41c:	4298      	cmp	r0, r3
1000c41e:	d01b      	beq.n	1000c458 <gapc_get_dev_info_cfm.constprop.1+0x64>
1000c420:	2802      	cmp	r0, #2
1000c422:	d12f      	bne.n	1000c484 <gapc_get_dev_info_cfm.constprop.1+0x90>
1000c424:	4b1e      	ldr	r3, [pc, #120]	; (1000c4a0 <gapc_get_dev_info_cfm.constprop.1+0xac>)
1000c426:	2112      	movs	r1, #18
1000c428:	1c1a      	adds	r2, r3, #0
1000c42a:	32ce      	adds	r2, #206	; 0xce
1000c42c:	8812      	ldrh	r2, [r2, #0]
1000c42e:	72a2      	strb	r2, [r4, #10]
1000c430:	0a12      	lsrs	r2, r2, #8
1000c432:	72e2      	strb	r2, [r4, #11]
1000c434:	1c1a      	adds	r2, r3, #0
1000c436:	32d0      	adds	r2, #208	; 0xd0
1000c438:	8812      	ldrh	r2, [r2, #0]
1000c43a:	7322      	strb	r2, [r4, #12]
1000c43c:	0a12      	lsrs	r2, r2, #8
1000c43e:	7362      	strb	r2, [r4, #13]
1000c440:	1c1a      	adds	r2, r3, #0
1000c442:	32d2      	adds	r2, #210	; 0xd2
1000c444:	8812      	ldrh	r2, [r2, #0]
1000c446:	33d4      	adds	r3, #212	; 0xd4
1000c448:	73a2      	strb	r2, [r4, #14]
1000c44a:	0a12      	lsrs	r2, r2, #8
1000c44c:	73e2      	strb	r2, [r4, #15]
1000c44e:	881b      	ldrh	r3, [r3, #0]
1000c450:	7423      	strb	r3, [r4, #16]
1000c452:	0a1b      	lsrs	r3, r3, #8
1000c454:	7463      	strb	r3, [r4, #17]
1000c456:	e016      	b.n	1000c486 <gapc_get_dev_info_cfm.constprop.1+0x92>
1000c458:	4b11      	ldr	r3, [pc, #68]	; (1000c4a0 <gapc_get_dev_info_cfm.constprop.1+0xac>)
1000c45a:	4912      	ldr	r1, [pc, #72]	; (1000c4a4 <gapc_get_dev_info_cfm.constprop.1+0xb0>)
1000c45c:	33aa      	adds	r3, #170	; 0xaa
1000c45e:	881d      	ldrh	r5, [r3, #0]
1000c460:	4811      	ldr	r0, [pc, #68]	; (1000c4a8 <gapc_get_dev_info_cfm.constprop.1+0xb4>)
1000c462:	0a2b      	lsrs	r3, r5, #8
1000c464:	72a5      	strb	r5, [r4, #10]
1000c466:	72e3      	strb	r3, [r4, #11]
1000c468:	1c2a      	adds	r2, r5, #0
1000c46a:	4b10      	ldr	r3, [pc, #64]	; (1000c4ac <gapc_get_dev_info_cfm.constprop.1+0xb8>)
1000c46c:	350c      	adds	r5, #12
1000c46e:	4798      	blx	r3
1000c470:	b2a9      	uxth	r1, r5
1000c472:	e008      	b.n	1000c486 <gapc_get_dev_info_cfm.constprop.1+0x92>
1000c474:	4b0a      	ldr	r3, [pc, #40]	; (1000c4a0 <gapc_get_dev_info_cfm.constprop.1+0xac>)
1000c476:	210c      	movs	r1, #12
1000c478:	33cc      	adds	r3, #204	; 0xcc
1000c47a:	881b      	ldrh	r3, [r3, #0]
1000c47c:	72a3      	strb	r3, [r4, #10]
1000c47e:	0a1b      	lsrs	r3, r3, #8
1000c480:	72e3      	strb	r3, [r4, #11]
1000c482:	e000      	b.n	1000c486 <gapc_get_dev_info_cfm.constprop.1+0x92>
1000c484:	210a      	movs	r1, #10
1000c486:	1c0b      	adds	r3, r1, #0
1000c488:	3b08      	subs	r3, #8
1000c48a:	71a3      	strb	r3, [r4, #6]
1000c48c:	121b      	asrs	r3, r3, #8
1000c48e:	71e3      	strb	r3, [r4, #7]
1000c490:	1c20      	adds	r0, r4, #0
1000c492:	4b07      	ldr	r3, [pc, #28]	; (1000c4b0 <gapc_get_dev_info_cfm.constprop.1+0xbc>)
1000c494:	4798      	blx	r3
1000c496:	bd38      	pop	{r3, r4, r5, pc}
1000c498:	10012e30 	.word	0x10012e30
1000c49c:	10012ac0 	.word	0x10012ac0
1000c4a0:	10012b52 	.word	0x10012b52
1000c4a4:	10012bfe 	.word	0x10012bfe
1000c4a8:	10012e3c 	.word	0x10012e3c
1000c4ac:	1000eacb 	.word	0x1000eacb
1000c4b0:	1000c2e5 	.word	0x1000c2e5

1000c4b4 <check_ConnData_idx_role>:
1000c4b4:	4b0c      	ldr	r3, [pc, #48]	; (1000c4e8 <check_ConnData_idx_role+0x34>)
1000c4b6:	b570      	push	{r4, r5, r6, lr}
1000c4b8:	1c04      	adds	r4, r0, #0
1000c4ba:	2008      	movs	r0, #8
1000c4bc:	429c      	cmp	r4, r3
1000c4be:	d011      	beq.n	1000c4e4 <check_ConnData_idx_role+0x30>
1000c4c0:	2300      	movs	r3, #0
1000c4c2:	2212      	movs	r2, #18
1000c4c4:	435a      	muls	r2, r3
1000c4c6:	4d09      	ldr	r5, [pc, #36]	; (1000c4ec <check_ConnData_idx_role+0x38>)
1000c4c8:	b2d8      	uxtb	r0, r3
1000c4ca:	1956      	adds	r6, r2, r5
1000c4cc:	8976      	ldrh	r6, [r6, #10]
1000c4ce:	42a6      	cmp	r6, r4
1000c4d0:	d104      	bne.n	1000c4dc <check_ConnData_idx_role+0x28>
1000c4d2:	2900      	cmp	r1, #0
1000c4d4:	d006      	beq.n	1000c4e4 <check_ConnData_idx_role+0x30>
1000c4d6:	5d53      	ldrb	r3, [r2, r5]
1000c4d8:	700b      	strb	r3, [r1, #0]
1000c4da:	e003      	b.n	1000c4e4 <check_ConnData_idx_role+0x30>
1000c4dc:	3301      	adds	r3, #1
1000c4de:	2b08      	cmp	r3, #8
1000c4e0:	d1ef      	bne.n	1000c4c2 <check_ConnData_idx_role+0xe>
1000c4e2:	1c18      	adds	r0, r3, #0
1000c4e4:	bd70      	pop	{r4, r5, r6, pc}
1000c4e6:	46c0      	nop			; (mov r8, r8)
1000c4e8:	0000ffff 	.word	0x0000ffff
1000c4ec:	10012ac2 	.word	0x10012ac2

1000c4f0 <check_ConnData_emptyEntry>:
1000c4f0:	2300      	movs	r3, #0
1000c4f2:	2212      	movs	r2, #18
1000c4f4:	435a      	muls	r2, r3
1000c4f6:	4906      	ldr	r1, [pc, #24]	; (1000c510 <check_ConnData_emptyEntry+0x20>)
1000c4f8:	b2d8      	uxtb	r0, r3
1000c4fa:	1852      	adds	r2, r2, r1
1000c4fc:	8951      	ldrh	r1, [r2, #10]
1000c4fe:	4a05      	ldr	r2, [pc, #20]	; (1000c514 <check_ConnData_emptyEntry+0x24>)
1000c500:	4291      	cmp	r1, r2
1000c502:	d003      	beq.n	1000c50c <check_ConnData_emptyEntry+0x1c>
1000c504:	3301      	adds	r3, #1
1000c506:	2b08      	cmp	r3, #8
1000c508:	d1f3      	bne.n	1000c4f2 <check_ConnData_emptyEntry+0x2>
1000c50a:	1c18      	adds	r0, r3, #0
1000c50c:	4770      	bx	lr
1000c50e:	46c0      	nop			; (mov r8, r8)
1000c510:	10012ac2 	.word	0x10012ac2
1000c514:	0000ffff 	.word	0x0000ffff

1000c518 <gapc_cmp_evt>:
1000c518:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000c51a:	780b      	ldrb	r3, [r1, #0]
1000c51c:	1c05      	adds	r5, r0, #0
1000c51e:	1e58      	subs	r0, r3, #1
1000c520:	784e      	ldrb	r6, [r1, #1]
1000c522:	280f      	cmp	r0, #15
1000c524:	d85a      	bhi.n	1000c5dc <gapc_cmp_evt+0xc4>
1000c526:	1c14      	adds	r4, r2, #0
1000c528:	f001 fa8a 	bl	1000da40 <__gnu_thumb1_case_uqi>
1000c52c:	5858440a 	.word	0x5858440a
1000c530:	4b584444 	.word	0x4b584444
1000c534:	0825122d 	.word	0x0825122d
1000c538:	3e395858 	.word	0x3e395858
1000c53c:	203b      	movs	r0, #59	; 0x3b
1000c53e:	e04e      	b.n	1000c5de <gapc_cmp_evt+0xc6>
1000c540:	203b      	movs	r0, #59	; 0x3b
1000c542:	2e00      	cmp	r6, #0
1000c544:	d04b      	beq.n	1000c5de <gapc_cmp_evt+0xc6>
1000c546:	0a2d      	lsrs	r5, r5, #8
1000c548:	8015      	strh	r5, [r2, #0]
1000c54a:	7096      	strb	r6, [r2, #2]
1000c54c:	3835      	subs	r0, #53	; 0x35
1000c54e:	e046      	b.n	1000c5de <gapc_cmp_evt+0xc6>
1000c550:	466b      	mov	r3, sp
1000c552:	1ddf      	adds	r7, r3, #7
1000c554:	2301      	movs	r3, #1
1000c556:	0a2d      	lsrs	r5, r5, #8
1000c558:	703b      	strb	r3, [r7, #0]
1000c55a:	1c28      	adds	r0, r5, #0
1000c55c:	1c39      	adds	r1, r7, #0
1000c55e:	4b20      	ldr	r3, [pc, #128]	; (1000c5e0 <gapc_cmp_evt+0xc8>)
1000c560:	4798      	blx	r3
1000c562:	2807      	cmp	r0, #7
1000c564:	d803      	bhi.n	1000c56e <gapc_cmp_evt+0x56>
1000c566:	783b      	ldrb	r3, [r7, #0]
1000c568:	203b      	movs	r0, #59	; 0x3b
1000c56a:	2b00      	cmp	r3, #0
1000c56c:	d037      	beq.n	1000c5de <gapc_cmp_evt+0xc6>
1000c56e:	8065      	strh	r5, [r4, #2]
1000c570:	7126      	strb	r6, [r4, #4]
1000c572:	2009      	movs	r0, #9
1000c574:	e033      	b.n	1000c5de <gapc_cmp_evt+0xc6>
1000c576:	203b      	movs	r0, #59	; 0x3b
1000c578:	2e00      	cmp	r6, #0
1000c57a:	d030      	beq.n	1000c5de <gapc_cmp_evt+0xc6>
1000c57c:	0a2d      	lsrs	r5, r5, #8
1000c57e:	8015      	strh	r5, [r2, #0]
1000c580:	7096      	strb	r6, [r2, #2]
1000c582:	382d      	subs	r0, #45	; 0x2d
1000c584:	e02b      	b.n	1000c5de <gapc_cmp_evt+0xc6>
1000c586:	203b      	movs	r0, #59	; 0x3b
1000c588:	2e00      	cmp	r6, #0
1000c58a:	d028      	beq.n	1000c5de <gapc_cmp_evt+0xc6>
1000c58c:	2300      	movs	r3, #0
1000c58e:	0a2d      	lsrs	r5, r5, #8
1000c590:	8015      	strh	r5, [r2, #0]
1000c592:	7096      	strb	r6, [r2, #2]
1000c594:	8093      	strh	r3, [r2, #4]
1000c596:	80d3      	strh	r3, [r2, #6]
1000c598:	8113      	strh	r3, [r2, #8]
1000c59a:	3834      	subs	r0, #52	; 0x34
1000c59c:	e01f      	b.n	1000c5de <gapc_cmp_evt+0xc6>
1000c59e:	203b      	movs	r0, #59	; 0x3b
1000c5a0:	2e00      	cmp	r6, #0
1000c5a2:	d01c      	beq.n	1000c5de <gapc_cmp_evt+0xc6>
1000c5a4:	7216      	strb	r6, [r2, #8]
1000c5a6:	e003      	b.n	1000c5b0 <gapc_cmp_evt+0x98>
1000c5a8:	203b      	movs	r0, #59	; 0x3b
1000c5aa:	2e00      	cmp	r6, #0
1000c5ac:	d017      	beq.n	1000c5de <gapc_cmp_evt+0xc6>
1000c5ae:	7116      	strb	r6, [r2, #4]
1000c5b0:	3812      	subs	r0, #18
1000c5b2:	e014      	b.n	1000c5de <gapc_cmp_evt+0xc6>
1000c5b4:	203b      	movs	r0, #59	; 0x3b
1000c5b6:	2e00      	cmp	r6, #0
1000c5b8:	d011      	beq.n	1000c5de <gapc_cmp_evt+0xc6>
1000c5ba:	7093      	strb	r3, [r2, #2]
1000c5bc:	70d6      	strb	r6, [r2, #3]
1000c5be:	382a      	subs	r0, #42	; 0x2a
1000c5c0:	e00d      	b.n	1000c5de <gapc_cmp_evt+0xc6>
1000c5c2:	203b      	movs	r0, #59	; 0x3b
1000c5c4:	2e00      	cmp	r6, #0
1000c5c6:	d00a      	beq.n	1000c5de <gapc_cmp_evt+0xc6>
1000c5c8:	0a2d      	lsrs	r5, r5, #8
1000c5ca:	7016      	strb	r6, [r2, #0]
1000c5cc:	8055      	strh	r5, [r2, #2]
1000c5ce:	1d10      	adds	r0, r2, #4
1000c5d0:	2100      	movs	r1, #0
1000c5d2:	2205      	movs	r2, #5
1000c5d4:	4b03      	ldr	r3, [pc, #12]	; (1000c5e4 <gapc_cmp_evt+0xcc>)
1000c5d6:	4798      	blx	r3
1000c5d8:	2012      	movs	r0, #18
1000c5da:	e000      	b.n	1000c5de <gapc_cmp_evt+0xc6>
1000c5dc:	2000      	movs	r0, #0
1000c5de:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1000c5e0:	1000c4b5 	.word	0x1000c4b5
1000c5e4:	1000eadd 	.word	0x1000eadd

1000c5e8 <gapc_connection_cfm_handler>:
1000c5e8:	b5f0      	push	{r4, r5, r6, r7, lr}
1000c5ea:	b085      	sub	sp, #20
1000c5ec:	1c1d      	adds	r5, r3, #0
1000c5ee:	ab0a      	add	r3, sp, #40	; 0x28
1000c5f0:	781b      	ldrb	r3, [r3, #0]
1000c5f2:	9201      	str	r2, [sp, #4]
1000c5f4:	9302      	str	r3, [sp, #8]
1000c5f6:	ab0b      	add	r3, sp, #44	; 0x2c
1000c5f8:	781b      	ldrb	r3, [r3, #0]
1000c5fa:	1c07      	adds	r7, r0, #0
1000c5fc:	9303      	str	r3, [sp, #12]
1000c5fe:	ab0c      	add	r3, sp, #48	; 0x30
1000c600:	881a      	ldrh	r2, [r3, #0]
1000c602:	2302      	movs	r3, #2
1000c604:	1c0e      	adds	r6, r1, #0
1000c606:	4c23      	ldr	r4, [pc, #140]	; (1000c694 <gapc_connection_cfm_handler+0xac>)
1000c608:	1c39      	adds	r1, r7, #0
1000c60a:	7023      	strb	r3, [r4, #0]
1000c60c:	330c      	adds	r3, #12
1000c60e:	7063      	strb	r3, [r4, #1]
1000c610:	70a3      	strb	r3, [r4, #2]
1000c612:	4b21      	ldr	r3, [pc, #132]	; (1000c698 <gapc_connection_cfm_handler+0xb0>)
1000c614:	70e2      	strb	r2, [r4, #3]
1000c616:	881a      	ldrh	r2, [r3, #0]
1000c618:	881b      	ldrh	r3, [r3, #0]
1000c61a:	7122      	strb	r2, [r4, #4]
1000c61c:	0a1b      	lsrs	r3, r3, #8
1000c61e:	4f1f      	ldr	r7, [pc, #124]	; (1000c69c <gapc_connection_cfm_handler+0xb4>)
1000c620:	2210      	movs	r2, #16
1000c622:	481f      	ldr	r0, [pc, #124]	; (1000c6a0 <gapc_connection_cfm_handler+0xb8>)
1000c624:	7163      	strb	r3, [r4, #5]
1000c626:	47b8      	blx	r7
1000c628:	0a33      	lsrs	r3, r6, #8
1000c62a:	7626      	strb	r6, [r4, #24]
1000c62c:	7663      	strb	r3, [r4, #25]
1000c62e:	9901      	ldr	r1, [sp, #4]
1000c630:	0c33      	lsrs	r3, r6, #16
1000c632:	2210      	movs	r2, #16
1000c634:	0e36      	lsrs	r6, r6, #24
1000c636:	481b      	ldr	r0, [pc, #108]	; (1000c6a4 <gapc_connection_cfm_handler+0xbc>)
1000c638:	76a3      	strb	r3, [r4, #26]
1000c63a:	76e6      	strb	r6, [r4, #27]
1000c63c:	47b8      	blx	r7
1000c63e:	1c23      	adds	r3, r4, #0
1000c640:	332c      	adds	r3, #44	; 0x2c
1000c642:	701d      	strb	r5, [r3, #0]
1000c644:	1c23      	adds	r3, r4, #0
1000c646:	0a2a      	lsrs	r2, r5, #8
1000c648:	332d      	adds	r3, #45	; 0x2d
1000c64a:	701a      	strb	r2, [r3, #0]
1000c64c:	1c23      	adds	r3, r4, #0
1000c64e:	0c2a      	lsrs	r2, r5, #16
1000c650:	332e      	adds	r3, #46	; 0x2e
1000c652:	701a      	strb	r2, [r3, #0]
1000c654:	1c23      	adds	r3, r4, #0
1000c656:	0e2d      	lsrs	r5, r5, #24
1000c658:	332f      	adds	r3, #47	; 0x2f
1000c65a:	466a      	mov	r2, sp
1000c65c:	701d      	strb	r5, [r3, #0]
1000c65e:	1c23      	adds	r3, r4, #0
1000c660:	7a12      	ldrb	r2, [r2, #8]
1000c662:	3330      	adds	r3, #48	; 0x30
1000c664:	701a      	strb	r2, [r3, #0]
1000c666:	1c23      	adds	r3, r4, #0
1000c668:	2500      	movs	r5, #0
1000c66a:	3331      	adds	r3, #49	; 0x31
1000c66c:	466a      	mov	r2, sp
1000c66e:	701d      	strb	r5, [r3, #0]
1000c670:	1c23      	adds	r3, r4, #0
1000c672:	7b12      	ldrb	r2, [r2, #12]
1000c674:	3332      	adds	r3, #50	; 0x32
1000c676:	701a      	strb	r2, [r3, #0]
1000c678:	1c23      	adds	r3, r4, #0
1000c67a:	3333      	adds	r3, #51	; 0x33
1000c67c:	701d      	strb	r5, [r3, #0]
1000c67e:	232c      	movs	r3, #44	; 0x2c
1000c680:	1c20      	adds	r0, r4, #0
1000c682:	71a3      	strb	r3, [r4, #6]
1000c684:	2134      	movs	r1, #52	; 0x34
1000c686:	4b08      	ldr	r3, [pc, #32]	; (1000c6a8 <gapc_connection_cfm_handler+0xc0>)
1000c688:	71e5      	strb	r5, [r4, #7]
1000c68a:	4798      	blx	r3
1000c68c:	1c28      	adds	r0, r5, #0
1000c68e:	b005      	add	sp, #20
1000c690:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000c692:	46c0      	nop			; (mov r8, r8)
1000c694:	10012e30 	.word	0x10012e30
1000c698:	10012ac0 	.word	0x10012ac0
1000c69c:	1000eacb 	.word	0x1000eacb
1000c6a0:	10012e38 	.word	0x10012e38
1000c6a4:	10012e4c 	.word	0x10012e4c
1000c6a8:	1000c2e5 	.word	0x1000c2e5

1000c6ac <gapc_con_req_ind>:
1000c6ac:	b5f0      	push	{r4, r5, r6, r7, lr}
1000c6ae:	7845      	ldrb	r5, [r0, #1]
1000c6b0:	7803      	ldrb	r3, [r0, #0]
1000c6b2:	4c30      	ldr	r4, [pc, #192]	; (1000c774 <gapc_con_req_ind+0xc8>)
1000c6b4:	022d      	lsls	r5, r5, #8
1000c6b6:	431d      	orrs	r5, r3
1000c6b8:	85a5      	strh	r5, [r4, #44]	; 0x2c
1000c6ba:	78c3      	ldrb	r3, [r0, #3]
1000c6bc:	7882      	ldrb	r2, [r0, #2]
1000c6be:	b08b      	sub	sp, #44	; 0x2c
1000c6c0:	021b      	lsls	r3, r3, #8
1000c6c2:	431a      	orrs	r2, r3
1000c6c4:	466b      	mov	r3, sp
1000c6c6:	9205      	str	r2, [sp, #20]
1000c6c8:	8a9b      	ldrh	r3, [r3, #20]
1000c6ca:	2120      	movs	r1, #32
1000c6cc:	85e3      	strh	r3, [r4, #46]	; 0x2e
1000c6ce:	7943      	ldrb	r3, [r0, #5]
1000c6d0:	7902      	ldrb	r2, [r0, #4]
1000c6d2:	021b      	lsls	r3, r3, #8
1000c6d4:	431a      	orrs	r2, r3
1000c6d6:	466b      	mov	r3, sp
1000c6d8:	9206      	str	r2, [sp, #24]
1000c6da:	8b1b      	ldrh	r3, [r3, #24]
1000c6dc:	1c06      	adds	r6, r0, #0
1000c6de:	8623      	strh	r3, [r4, #48]	; 0x30
1000c6e0:	79c3      	ldrb	r3, [r0, #7]
1000c6e2:	7982      	ldrb	r2, [r0, #6]
1000c6e4:	021b      	lsls	r3, r3, #8
1000c6e6:	431a      	orrs	r2, r3
1000c6e8:	466b      	mov	r3, sp
1000c6ea:	9207      	str	r2, [sp, #28]
1000c6ec:	466a      	mov	r2, sp
1000c6ee:	8b9b      	ldrh	r3, [r3, #28]
1000c6f0:	1852      	adds	r2, r2, r1
1000c6f2:	8663      	strh	r3, [r4, #50]	; 0x32
1000c6f4:	7a43      	ldrb	r3, [r0, #9]
1000c6f6:	1c01      	adds	r1, r0, #0
1000c6f8:	9308      	str	r3, [sp, #32]
1000c6fa:	1c23      	adds	r3, r4, #0
1000c6fc:	7812      	ldrb	r2, [r2, #0]
1000c6fe:	3377      	adds	r3, #119	; 0x77
1000c700:	3478      	adds	r4, #120	; 0x78
1000c702:	701a      	strb	r2, [r3, #0]
1000c704:	310a      	adds	r1, #10
1000c706:	2206      	movs	r2, #6
1000c708:	4b1b      	ldr	r3, [pc, #108]	; (1000c778 <gapc_con_req_ind+0xcc>)
1000c70a:	1c20      	adds	r0, r4, #0
1000c70c:	4798      	blx	r3
1000c70e:	7c33      	ldrb	r3, [r6, #16]
1000c710:	9309      	str	r3, [sp, #36]	; 0x24
1000c712:	4b1a      	ldr	r3, [pc, #104]	; (1000c77c <gapc_con_req_ind+0xd0>)
1000c714:	4798      	blx	r3
1000c716:	4e1a      	ldr	r6, [pc, #104]	; (1000c780 <gapc_con_req_ind+0xd4>)
1000c718:	1e07      	subs	r7, r0, #0
1000c71a:	2f07      	cmp	r7, #7
1000c71c:	d81b      	bhi.n	1000c756 <gapc_con_req_ind+0xaa>
1000c71e:	2312      	movs	r3, #18
1000c720:	4343      	muls	r3, r0
1000c722:	18f0      	adds	r0, r6, r3
1000c724:	8145      	strh	r5, [r0, #10]
1000c726:	4669      	mov	r1, sp
1000c728:	2524      	movs	r5, #36	; 0x24
1000c72a:	1949      	adds	r1, r1, r5
1000c72c:	7809      	ldrb	r1, [r1, #0]
1000c72e:	2206      	movs	r2, #6
1000c730:	54f1      	strb	r1, [r6, r3]
1000c732:	2120      	movs	r1, #32
1000c734:	466b      	mov	r3, sp
1000c736:	185b      	adds	r3, r3, r1
1000c738:	781b      	ldrb	r3, [r3, #0]
1000c73a:	1c21      	adds	r1, r4, #0
1000c73c:	7043      	strb	r3, [r0, #1]
1000c73e:	466b      	mov	r3, sp
1000c740:	8a9b      	ldrh	r3, [r3, #20]
1000c742:	3002      	adds	r0, #2
1000c744:	8143      	strh	r3, [r0, #10]
1000c746:	466b      	mov	r3, sp
1000c748:	8b1b      	ldrh	r3, [r3, #24]
1000c74a:	8183      	strh	r3, [r0, #12]
1000c74c:	466b      	mov	r3, sp
1000c74e:	8b9b      	ldrh	r3, [r3, #28]
1000c750:	81c3      	strh	r3, [r0, #14]
1000c752:	4b09      	ldr	r3, [pc, #36]	; (1000c778 <gapc_con_req_ind+0xcc>)
1000c754:	4798      	blx	r3
1000c756:	2112      	movs	r1, #18
1000c758:	2300      	movs	r3, #0
1000c75a:	434f      	muls	r7, r1
1000c75c:	9300      	str	r3, [sp, #0]
1000c75e:	9301      	str	r3, [sp, #4]
1000c760:	19f6      	adds	r6, r6, r7
1000c762:	8971      	ldrh	r1, [r6, #10]
1000c764:	4a07      	ldr	r2, [pc, #28]	; (1000c784 <gapc_con_req_ind+0xd8>)
1000c766:	9102      	str	r1, [sp, #8]
1000c768:	1c10      	adds	r0, r2, #0
1000c76a:	1c19      	adds	r1, r3, #0
1000c76c:	4c06      	ldr	r4, [pc, #24]	; (1000c788 <gapc_con_req_ind+0xdc>)
1000c76e:	47a0      	blx	r4
1000c770:	b00b      	add	sp, #44	; 0x2c
1000c772:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000c774:	10012b52 	.word	0x10012b52
1000c778:	1000eacb 	.word	0x1000eacb
1000c77c:	1000c4f1 	.word	0x1000c4f1
1000c780:	10012ac2 	.word	0x10012ac2
1000c784:	10011e50 	.word	0x10011e50
1000c788:	1000c5e9 	.word	0x1000c5e9

1000c78c <gapc_disconnect_cmd_handler>:
1000c78c:	2204      	movs	r2, #4
1000c78e:	b510      	push	{r4, lr}
1000c790:	4b0c      	ldr	r3, [pc, #48]	; (1000c7c4 <gapc_disconnect_cmd_handler+0x38>)
1000c792:	2400      	movs	r4, #0
1000c794:	701a      	strb	r2, [r3, #0]
1000c796:	320a      	adds	r2, #10
1000c798:	705a      	strb	r2, [r3, #1]
1000c79a:	709a      	strb	r2, [r3, #2]
1000c79c:	4a0a      	ldr	r2, [pc, #40]	; (1000c7c8 <gapc_disconnect_cmd_handler+0x3c>)
1000c79e:	70d9      	strb	r1, [r3, #3]
1000c7a0:	8811      	ldrh	r1, [r2, #0]
1000c7a2:	8812      	ldrh	r2, [r2, #0]
1000c7a4:	7119      	strb	r1, [r3, #4]
1000c7a6:	0a12      	lsrs	r2, r2, #8
1000c7a8:	715a      	strb	r2, [r3, #5]
1000c7aa:	2201      	movs	r2, #1
1000c7ac:	721a      	strb	r2, [r3, #8]
1000c7ae:	1892      	adds	r2, r2, r2
1000c7b0:	7258      	strb	r0, [r3, #9]
1000c7b2:	719a      	strb	r2, [r3, #6]
1000c7b4:	71dc      	strb	r4, [r3, #7]
1000c7b6:	1c18      	adds	r0, r3, #0
1000c7b8:	210a      	movs	r1, #10
1000c7ba:	4b04      	ldr	r3, [pc, #16]	; (1000c7cc <gapc_disconnect_cmd_handler+0x40>)
1000c7bc:	4798      	blx	r3
1000c7be:	1c20      	adds	r0, r4, #0
1000c7c0:	bd10      	pop	{r4, pc}
1000c7c2:	46c0      	nop			; (mov r8, r8)
1000c7c4:	10012e30 	.word	0x10012e30
1000c7c8:	10012ac0 	.word	0x10012ac0
1000c7cc:	1000c2e5 	.word	0x1000c2e5

1000c7d0 <gapc_disconnect_ind>:
1000c7d0:	1c02      	adds	r2, r0, #0
1000c7d2:	b508      	push	{r3, lr}
1000c7d4:	7843      	ldrb	r3, [r0, #1]
1000c7d6:	7800      	ldrb	r0, [r0, #0]
1000c7d8:	021b      	lsls	r3, r3, #8
1000c7da:	4318      	orrs	r0, r3
1000c7dc:	8008      	strh	r0, [r1, #0]
1000c7de:	7893      	ldrb	r3, [r2, #2]
1000c7e0:	708b      	strb	r3, [r1, #2]
1000c7e2:	2100      	movs	r1, #0
1000c7e4:	4b05      	ldr	r3, [pc, #20]	; (1000c7fc <gapc_disconnect_ind+0x2c>)
1000c7e6:	4798      	blx	r3
1000c7e8:	2807      	cmp	r0, #7
1000c7ea:	d806      	bhi.n	1000c7fa <gapc_disconnect_ind+0x2a>
1000c7ec:	2312      	movs	r3, #18
1000c7ee:	4358      	muls	r0, r3
1000c7f0:	4b03      	ldr	r3, [pc, #12]	; (1000c800 <gapc_disconnect_ind+0x30>)
1000c7f2:	1818      	adds	r0, r3, r0
1000c7f4:	2301      	movs	r3, #1
1000c7f6:	425b      	negs	r3, r3
1000c7f8:	8143      	strh	r3, [r0, #10]
1000c7fa:	bd08      	pop	{r3, pc}
1000c7fc:	1000c4b5 	.word	0x1000c4b5
1000c800:	10012ac2 	.word	0x10012ac2

1000c804 <gapc_bond_cmd_handler>:
1000c804:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000c806:	9300      	str	r3, [sp, #0]
1000c808:	2312      	movs	r3, #18
1000c80a:	1c04      	adds	r4, r0, #0
1000c80c:	a808      	add	r0, sp, #32
1000c80e:	7807      	ldrb	r7, [r0, #0]
1000c810:	a809      	add	r0, sp, #36	; 0x24
1000c812:	7806      	ldrb	r6, [r0, #0]
1000c814:	a80a      	add	r0, sp, #40	; 0x28
1000c816:	7805      	ldrb	r5, [r0, #0]
1000c818:	a80b      	add	r0, sp, #44	; 0x2c
1000c81a:	7800      	ldrb	r0, [r0, #0]
1000c81c:	9001      	str	r0, [sp, #4]
1000c81e:	4810      	ldr	r0, [pc, #64]	; (1000c860 <gapc_bond_cmd_handler+0x5c>)
1000c820:	7003      	strb	r3, [r0, #0]
1000c822:	230e      	movs	r3, #14
1000c824:	70c4      	strb	r4, [r0, #3]
1000c826:	4c0f      	ldr	r4, [pc, #60]	; (1000c864 <gapc_bond_cmd_handler+0x60>)
1000c828:	7043      	strb	r3, [r0, #1]
1000c82a:	7083      	strb	r3, [r0, #2]
1000c82c:	8823      	ldrh	r3, [r4, #0]
1000c82e:	8824      	ldrh	r4, [r4, #0]
1000c830:	7103      	strb	r3, [r0, #4]
1000c832:	466b      	mov	r3, sp
1000c834:	781b      	ldrb	r3, [r3, #0]
1000c836:	0a24      	lsrs	r4, r4, #8
1000c838:	72c3      	strb	r3, [r0, #11]
1000c83a:	466b      	mov	r3, sp
1000c83c:	791b      	ldrb	r3, [r3, #4]
1000c83e:	7144      	strb	r4, [r0, #5]
1000c840:	73c3      	strb	r3, [r0, #15]
1000c842:	2308      	movs	r3, #8
1000c844:	7183      	strb	r3, [r0, #6]
1000c846:	2300      	movs	r3, #0
1000c848:	240a      	movs	r4, #10
1000c84a:	7241      	strb	r1, [r0, #9]
1000c84c:	71c3      	strb	r3, [r0, #7]
1000c84e:	2110      	movs	r1, #16
1000c850:	4b05      	ldr	r3, [pc, #20]	; (1000c868 <gapc_bond_cmd_handler+0x64>)
1000c852:	7307      	strb	r7, [r0, #12]
1000c854:	7346      	strb	r6, [r0, #13]
1000c856:	7385      	strb	r5, [r0, #14]
1000c858:	7204      	strb	r4, [r0, #8]
1000c85a:	7282      	strb	r2, [r0, #10]
1000c85c:	4798      	blx	r3
1000c85e:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
1000c860:	10012e30 	.word	0x10012e30
1000c864:	10012ac0 	.word	0x10012ac0
1000c868:	1000c2e5 	.word	0x1000c2e5

1000c86c <gapc_bond_ind>:
1000c86c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000c86e:	780e      	ldrb	r6, [r1, #0]
1000c870:	1c03      	adds	r3, r0, #0
1000c872:	1eb0      	subs	r0, r6, #2
1000c874:	2805      	cmp	r0, #5
1000c876:	d85d      	bhi.n	1000c934 <gapc_bond_ind+0xc8>
1000c878:	1c15      	adds	r5, r2, #0
1000c87a:	1c0c      	adds	r4, r1, #0
1000c87c:	f001 f8e0 	bl	1000da40 <__gnu_thumb1_case_uqi>
1000c880:	2f5a030d 	.word	0x2f5a030d
1000c884:	4740      	.short	0x4740
1000c886:	2009      	movs	r0, #9
1000c888:	2a00      	cmp	r2, #0
1000c88a:	d054      	beq.n	1000c936 <gapc_bond_ind+0xca>
1000c88c:	0a1b      	lsrs	r3, r3, #8
1000c88e:	8053      	strh	r3, [r2, #2]
1000c890:	788b      	ldrb	r3, [r1, #2]
1000c892:	4829      	ldr	r0, [pc, #164]	; (1000c938 <gapc_bond_ind+0xcc>)
1000c894:	7113      	strb	r3, [r2, #4]
1000c896:	2100      	movs	r1, #0
1000c898:	e01c      	b.n	1000c8d4 <gapc_bond_ind+0x68>
1000c89a:	2009      	movs	r0, #9
1000c89c:	2a00      	cmp	r2, #0
1000c89e:	d04a      	beq.n	1000c936 <gapc_bond_ind+0xca>
1000c8a0:	4c25      	ldr	r4, [pc, #148]	; (1000c938 <gapc_bond_ind+0xcc>)
1000c8a2:	0a1b      	lsrs	r3, r3, #8
1000c8a4:	8053      	strh	r3, [r2, #2]
1000c8a6:	788b      	ldrb	r3, [r1, #2]
1000c8a8:	2700      	movs	r7, #0
1000c8aa:	1c10      	adds	r0, r2, #0
1000c8ac:	1c21      	adds	r1, r4, #0
1000c8ae:	7013      	strb	r3, [r2, #0]
1000c8b0:	4e22      	ldr	r6, [pc, #136]	; (1000c93c <gapc_bond_ind+0xd0>)
1000c8b2:	7117      	strb	r7, [r2, #4]
1000c8b4:	312e      	adds	r1, #46	; 0x2e
1000c8b6:	2217      	movs	r2, #23
1000c8b8:	3032      	adds	r0, #50	; 0x32
1000c8ba:	47b0      	blx	r6
1000c8bc:	1c28      	adds	r0, r5, #0
1000c8be:	1c21      	adds	r1, r4, #0
1000c8c0:	2210      	movs	r2, #16
1000c8c2:	311e      	adds	r1, #30
1000c8c4:	3022      	adds	r0, #34	; 0x22
1000c8c6:	47b0      	blx	r6
1000c8c8:	1ca1      	adds	r1, r4, #2
1000c8ca:	1da8      	adds	r0, r5, #6
1000c8cc:	221c      	movs	r2, #28
1000c8ce:	47b0      	blx	r6
1000c8d0:	1c20      	adds	r0, r4, #0
1000c8d2:	1c39      	adds	r1, r7, #0
1000c8d4:	2246      	movs	r2, #70	; 0x46
1000c8d6:	4b1a      	ldr	r3, [pc, #104]	; (1000c940 <gapc_bond_ind+0xd4>)
1000c8d8:	4798      	blx	r3
1000c8da:	2009      	movs	r0, #9
1000c8dc:	e02b      	b.n	1000c936 <gapc_bond_ind+0xca>
1000c8de:	4d16      	ldr	r5, [pc, #88]	; (1000c938 <gapc_bond_ind+0xcc>)
1000c8e0:	3102      	adds	r1, #2
1000c8e2:	1c28      	adds	r0, r5, #0
1000c8e4:	2210      	movs	r2, #16
1000c8e6:	4e15      	ldr	r6, [pc, #84]	; (1000c93c <gapc_bond_ind+0xd0>)
1000c8e8:	302e      	adds	r0, #46	; 0x2e
1000c8ea:	47b0      	blx	r6
1000c8ec:	1c28      	adds	r0, r5, #0
1000c8ee:	1c21      	adds	r1, r4, #0
1000c8f0:	303f      	adds	r0, #63	; 0x3f
1000c8f2:	3112      	adds	r1, #18
1000c8f4:	2206      	movs	r2, #6
1000c8f6:	47b0      	blx	r6
1000c8f8:	7e23      	ldrb	r3, [r4, #24]
1000c8fa:	353e      	adds	r5, #62	; 0x3e
1000c8fc:	702b      	strb	r3, [r5, #0]
1000c8fe:	e019      	b.n	1000c934 <gapc_bond_ind+0xc8>
1000c900:	480d      	ldr	r0, [pc, #52]	; (1000c938 <gapc_bond_ind+0xcc>)
1000c902:	3102      	adds	r1, #2
1000c904:	2210      	movs	r2, #16
1000c906:	4b0d      	ldr	r3, [pc, #52]	; (1000c93c <gapc_bond_ind+0xd0>)
1000c908:	301e      	adds	r0, #30
1000c90a:	4798      	blx	r3
1000c90c:	e012      	b.n	1000c934 <gapc_bond_ind+0xc8>
1000c90e:	4d0a      	ldr	r5, [pc, #40]	; (1000c938 <gapc_bond_ind+0xcc>)
1000c910:	3102      	adds	r1, #2
1000c912:	2210      	movs	r2, #16
1000c914:	4e09      	ldr	r6, [pc, #36]	; (1000c93c <gapc_bond_ind+0xd0>)
1000c916:	1ca8      	adds	r0, r5, #2
1000c918:	47b0      	blx	r6
1000c91a:	1c28      	adds	r0, r5, #0
1000c91c:	1c21      	adds	r1, r4, #0
1000c91e:	7ce3      	ldrb	r3, [r4, #19]
1000c920:	7ca2      	ldrb	r2, [r4, #18]
1000c922:	021b      	lsls	r3, r3, #8
1000c924:	4313      	orrs	r3, r2
1000c926:	3014      	adds	r0, #20
1000c928:	3114      	adds	r1, #20
1000c92a:	2208      	movs	r2, #8
1000c92c:	826b      	strh	r3, [r5, #18]
1000c92e:	47b0      	blx	r6
1000c930:	7f23      	ldrb	r3, [r4, #28]
1000c932:	772b      	strb	r3, [r5, #28]
1000c934:	2000      	movs	r0, #0
1000c936:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000c938:	10011e80 	.word	0x10011e80
1000c93c:	1000eacb 	.word	0x1000eacb
1000c940:	1000eadd 	.word	0x1000eadd

1000c944 <gapc_bond_req_ind>:
1000c944:	b570      	push	{r4, r5, r6, lr}
1000c946:	780c      	ldrb	r4, [r1, #0]
1000c948:	1c03      	adds	r3, r0, #0
1000c94a:	7849      	ldrb	r1, [r1, #1]
1000c94c:	2c07      	cmp	r4, #7
1000c94e:	d85c      	bhi.n	1000ca0a <gapc_bond_req_ind+0xc6>
1000c950:	1c20      	adds	r0, r4, #0
1000c952:	f001 f875 	bl	1000da40 <__gnu_thumb1_case_uqi>
1000c956:	5a04      	.short	0x5a04
1000c958:	5a0b5a5a 	.word	0x5a0b5a5a
1000c95c:	1f1f      	.short	0x1f1f
1000c95e:	200a      	movs	r0, #10
1000c960:	2a00      	cmp	r2, #0
1000c962:	d053      	beq.n	1000ca0c <gapc_bond_req_ind+0xc8>
1000c964:	0a1b      	lsrs	r3, r3, #8
1000c966:	8013      	strh	r3, [r2, #0]
1000c968:	7091      	strb	r1, [r2, #2]
1000c96a:	e04f      	b.n	1000ca0c <gapc_bond_req_ind+0xc8>
1000c96c:	2a00      	cmp	r2, #0
1000c96e:	d00b      	beq.n	1000c988 <gapc_bond_req_ind+0x44>
1000c970:	0a1b      	lsrs	r3, r3, #8
1000c972:	8013      	strh	r3, [r2, #0]
1000c974:	2900      	cmp	r1, #0
1000c976:	d102      	bne.n	1000c97e <gapc_bond_req_ind+0x3a>
1000c978:	2301      	movs	r3, #1
1000c97a:	7093      	strb	r3, [r2, #2]
1000c97c:	e004      	b.n	1000c988 <gapc_bond_req_ind+0x44>
1000c97e:	2300      	movs	r3, #0
1000c980:	7093      	strb	r3, [r2, #2]
1000c982:	2902      	cmp	r1, #2
1000c984:	d102      	bne.n	1000c98c <gapc_bond_req_ind+0x48>
1000c986:	70d3      	strb	r3, [r2, #3]
1000c988:	200c      	movs	r0, #12
1000c98a:	e03f      	b.n	1000ca0c <gapc_bond_req_ind+0xc8>
1000c98c:	2901      	cmp	r1, #1
1000c98e:	d1fb      	bne.n	1000c988 <gapc_bond_req_ind+0x44>
1000c990:	70d1      	strb	r1, [r2, #3]
1000c992:	e7f9      	b.n	1000c988 <gapc_bond_req_ind+0x44>
1000c994:	2214      	movs	r2, #20
1000c996:	481e      	ldr	r0, [pc, #120]	; (1000ca10 <gapc_bond_req_ind+0xcc>)
1000c998:	0a1b      	lsrs	r3, r3, #8
1000c99a:	70c3      	strb	r3, [r0, #3]
1000c99c:	4b1d      	ldr	r3, [pc, #116]	; (1000ca14 <gapc_bond_req_ind+0xd0>)
1000c99e:	7002      	strb	r2, [r0, #0]
1000c9a0:	3a06      	subs	r2, #6
1000c9a2:	7042      	strb	r2, [r0, #1]
1000c9a4:	7082      	strb	r2, [r0, #2]
1000c9a6:	881a      	ldrh	r2, [r3, #0]
1000c9a8:	881b      	ldrh	r3, [r3, #0]
1000c9aa:	4e1b      	ldr	r6, [pc, #108]	; (1000ca18 <gapc_bond_req_ind+0xd4>)
1000c9ac:	0a1b      	lsrs	r3, r3, #8
1000c9ae:	7143      	strb	r3, [r0, #5]
1000c9b0:	2301      	movs	r3, #1
1000c9b2:	7102      	strb	r2, [r0, #4]
1000c9b4:	7204      	strb	r4, [r0, #8]
1000c9b6:	7243      	strb	r3, [r0, #9]
1000c9b8:	1c05      	adds	r5, r0, #0
1000c9ba:	1c31      	adds	r1, r6, #0
1000c9bc:	300a      	adds	r0, #10
1000c9be:	2c07      	cmp	r4, #7
1000c9c0:	d116      	bne.n	1000c9f0 <gapc_bond_req_ind+0xac>
1000c9c2:	317e      	adds	r1, #126	; 0x7e
1000c9c4:	2210      	movs	r2, #16
1000c9c6:	4c15      	ldr	r4, [pc, #84]	; (1000ca1c <gapc_bond_req_ind+0xd8>)
1000c9c8:	47a0      	blx	r4
1000c9ca:	1c33      	adds	r3, r6, #0
1000c9cc:	1c31      	adds	r1, r6, #0
1000c9ce:	1c28      	adds	r0, r5, #0
1000c9d0:	338e      	adds	r3, #142	; 0x8e
1000c9d2:	881b      	ldrh	r3, [r3, #0]
1000c9d4:	3190      	adds	r1, #144	; 0x90
1000c9d6:	76ab      	strb	r3, [r5, #26]
1000c9d8:	2208      	movs	r2, #8
1000c9da:	0a1b      	lsrs	r3, r3, #8
1000c9dc:	301c      	adds	r0, #28
1000c9de:	76eb      	strb	r3, [r5, #27]
1000c9e0:	47a0      	blx	r4
1000c9e2:	1c31      	adds	r1, r6, #0
1000c9e4:	3198      	adds	r1, #152	; 0x98
1000c9e6:	780a      	ldrb	r2, [r1, #0]
1000c9e8:	1d6b      	adds	r3, r5, #5
1000c9ea:	77da      	strb	r2, [r3, #31]
1000c9ec:	2125      	movs	r1, #37	; 0x25
1000c9ee:	e004      	b.n	1000c9fa <gapc_bond_req_ind+0xb6>
1000c9f0:	319a      	adds	r1, #154	; 0x9a
1000c9f2:	2210      	movs	r2, #16
1000c9f4:	4b09      	ldr	r3, [pc, #36]	; (1000ca1c <gapc_bond_req_ind+0xd8>)
1000c9f6:	4798      	blx	r3
1000c9f8:	211a      	movs	r1, #26
1000c9fa:	1c0b      	adds	r3, r1, #0
1000c9fc:	2400      	movs	r4, #0
1000c9fe:	3b08      	subs	r3, #8
1000ca00:	71ab      	strb	r3, [r5, #6]
1000ca02:	1c28      	adds	r0, r5, #0
1000ca04:	4b06      	ldr	r3, [pc, #24]	; (1000ca20 <gapc_bond_req_ind+0xdc>)
1000ca06:	71ec      	strb	r4, [r5, #7]
1000ca08:	4798      	blx	r3
1000ca0a:	2000      	movs	r0, #0
1000ca0c:	bd70      	pop	{r4, r5, r6, pc}
1000ca0e:	46c0      	nop			; (mov r8, r8)
1000ca10:	10012e30 	.word	0x10012e30
1000ca14:	10012ac0 	.word	0x10012ac0
1000ca18:	10012b52 	.word	0x10012b52
1000ca1c:	1000eacb 	.word	0x1000eacb
1000ca20:	1000c2e5 	.word	0x1000c2e5

1000ca24 <gapc_bond_cfm_handler_pair_resp>:
1000ca24:	b5f0      	push	{r4, r5, r6, r7, lr}
1000ca26:	b085      	sub	sp, #20
1000ca28:	1c07      	adds	r7, r0, #0
1000ca2a:	a80a      	add	r0, sp, #40	; 0x28
1000ca2c:	7806      	ldrb	r6, [r0, #0]
1000ca2e:	a80b      	add	r0, sp, #44	; 0x2c
1000ca30:	7805      	ldrb	r5, [r0, #0]
1000ca32:	a80c      	add	r0, sp, #48	; 0x30
1000ca34:	7800      	ldrb	r0, [r0, #0]
1000ca36:	2414      	movs	r4, #20
1000ca38:	9002      	str	r0, [sp, #8]
1000ca3a:	a80d      	add	r0, sp, #52	; 0x34
1000ca3c:	7800      	ldrb	r0, [r0, #0]
1000ca3e:	9301      	str	r3, [sp, #4]
1000ca40:	9003      	str	r0, [sp, #12]
1000ca42:	a80e      	add	r0, sp, #56	; 0x38
1000ca44:	8800      	ldrh	r0, [r0, #0]
1000ca46:	4684      	mov	ip, r0
1000ca48:	4812      	ldr	r0, [pc, #72]	; (1000ca94 <gapc_bond_cfm_handler_pair_resp+0x70>)
1000ca4a:	7004      	strb	r4, [r0, #0]
1000ca4c:	3c06      	subs	r4, #6
1000ca4e:	7044      	strb	r4, [r0, #1]
1000ca50:	7084      	strb	r4, [r0, #2]
1000ca52:	4664      	mov	r4, ip
1000ca54:	70c4      	strb	r4, [r0, #3]
1000ca56:	4c10      	ldr	r4, [pc, #64]	; (1000ca98 <gapc_bond_cfm_handler_pair_resp+0x74>)
1000ca58:	7247      	strb	r7, [r0, #9]
1000ca5a:	8823      	ldrh	r3, [r4, #0]
1000ca5c:	8824      	ldrh	r4, [r4, #0]
1000ca5e:	7103      	strb	r3, [r0, #4]
1000ca60:	466b      	mov	r3, sp
1000ca62:	791b      	ldrb	r3, [r3, #4]
1000ca64:	0a24      	lsrs	r4, r4, #8
1000ca66:	7303      	strb	r3, [r0, #12]
1000ca68:	466b      	mov	r3, sp
1000ca6a:	7a1b      	ldrb	r3, [r3, #8]
1000ca6c:	7144      	strb	r4, [r0, #5]
1000ca6e:	73c3      	strb	r3, [r0, #15]
1000ca70:	466b      	mov	r3, sp
1000ca72:	7b1b      	ldrb	r3, [r3, #12]
1000ca74:	2401      	movs	r4, #1
1000ca76:	7403      	strb	r3, [r0, #16]
1000ca78:	2309      	movs	r3, #9
1000ca7a:	7183      	strb	r3, [r0, #6]
1000ca7c:	2300      	movs	r3, #0
1000ca7e:	7204      	strb	r4, [r0, #8]
1000ca80:	7281      	strb	r1, [r0, #10]
1000ca82:	72c2      	strb	r2, [r0, #11]
1000ca84:	7346      	strb	r6, [r0, #13]
1000ca86:	7385      	strb	r5, [r0, #14]
1000ca88:	71c3      	strb	r3, [r0, #7]
1000ca8a:	2111      	movs	r1, #17
1000ca8c:	4b03      	ldr	r3, [pc, #12]	; (1000ca9c <gapc_bond_cfm_handler_pair_resp+0x78>)
1000ca8e:	4798      	blx	r3
1000ca90:	b005      	add	sp, #20
1000ca92:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000ca94:	10012e30 	.word	0x10012e30
1000ca98:	10012ac0 	.word	0x10012ac0
1000ca9c:	1000c2e5 	.word	0x1000c2e5

1000caa0 <gapc_bond_cfm_handler_key_exch>:
1000caa0:	b538      	push	{r3, r4, r5, lr}
1000caa2:	2514      	movs	r5, #20
1000caa4:	4c0d      	ldr	r4, [pc, #52]	; (1000cadc <gapc_bond_cfm_handler_key_exch+0x3c>)
1000caa6:	70e3      	strb	r3, [r4, #3]
1000caa8:	4b0d      	ldr	r3, [pc, #52]	; (1000cae0 <gapc_bond_cfm_handler_key_exch+0x40>)
1000caaa:	7025      	strb	r5, [r4, #0]
1000caac:	3d06      	subs	r5, #6
1000caae:	7065      	strb	r5, [r4, #1]
1000cab0:	70a5      	strb	r5, [r4, #2]
1000cab2:	881d      	ldrh	r5, [r3, #0]
1000cab4:	881b      	ldrh	r3, [r3, #0]
1000cab6:	7220      	strb	r0, [r4, #8]
1000cab8:	0a1b      	lsrs	r3, r3, #8
1000caba:	7163      	strb	r3, [r4, #5]
1000cabc:	7261      	strb	r1, [r4, #9]
1000cabe:	4b09      	ldr	r3, [pc, #36]	; (1000cae4 <gapc_bond_cfm_handler_key_exch+0x44>)
1000cac0:	1c11      	adds	r1, r2, #0
1000cac2:	4809      	ldr	r0, [pc, #36]	; (1000cae8 <gapc_bond_cfm_handler_key_exch+0x48>)
1000cac4:	2210      	movs	r2, #16
1000cac6:	7125      	strb	r5, [r4, #4]
1000cac8:	4798      	blx	r3
1000caca:	2312      	movs	r3, #18
1000cacc:	71a3      	strb	r3, [r4, #6]
1000cace:	2300      	movs	r3, #0
1000cad0:	1c20      	adds	r0, r4, #0
1000cad2:	71e3      	strb	r3, [r4, #7]
1000cad4:	211a      	movs	r1, #26
1000cad6:	4b05      	ldr	r3, [pc, #20]	; (1000caec <gapc_bond_cfm_handler_key_exch+0x4c>)
1000cad8:	4798      	blx	r3
1000cada:	bd38      	pop	{r3, r4, r5, pc}
1000cadc:	10012e30 	.word	0x10012e30
1000cae0:	10012ac0 	.word	0x10012ac0
1000cae4:	1000eacb 	.word	0x1000eacb
1000cae8:	10012e3a 	.word	0x10012e3a
1000caec:	1000c2e5 	.word	0x1000c2e5

1000caf0 <gapc_encrypt_cmd_handler>:
1000caf0:	b5f0      	push	{r4, r5, r6, r7, lr}
1000caf2:	2500      	movs	r5, #0
1000caf4:	b089      	sub	sp, #36	; 0x24
1000caf6:	9306      	str	r3, [sp, #24]
1000caf8:	ab0e      	add	r3, sp, #56	; 0x38
1000cafa:	781b      	ldrb	r3, [r3, #0]
1000cafc:	1c17      	adds	r7, r2, #0
1000cafe:	9307      	str	r3, [sp, #28]
1000cb00:	ab0f      	add	r3, sp, #60	; 0x3c
1000cb02:	781b      	ldrb	r3, [r3, #0]
1000cb04:	4a19      	ldr	r2, [pc, #100]	; (1000cb6c <gapc_encrypt_cmd_handler+0x7c>)
1000cb06:	1c06      	adds	r6, r0, #0
1000cb08:	9105      	str	r1, [sp, #20]
1000cb0a:	9300      	str	r3, [sp, #0]
1000cb0c:	9002      	str	r0, [sp, #8]
1000cb0e:	1c29      	adds	r1, r5, #0
1000cb10:	1c2b      	adds	r3, r5, #0
1000cb12:	9501      	str	r5, [sp, #4]
1000cb14:	1c10      	adds	r0, r2, #0
1000cb16:	4c16      	ldr	r4, [pc, #88]	; (1000cb70 <gapc_encrypt_cmd_handler+0x80>)
1000cb18:	47a0      	blx	r4
1000cb1a:	2316      	movs	r3, #22
1000cb1c:	4c15      	ldr	r4, [pc, #84]	; (1000cb74 <gapc_encrypt_cmd_handler+0x84>)
1000cb1e:	9905      	ldr	r1, [sp, #20]
1000cb20:	7023      	strb	r3, [r4, #0]
1000cb22:	3b08      	subs	r3, #8
1000cb24:	7063      	strb	r3, [r4, #1]
1000cb26:	70a3      	strb	r3, [r4, #2]
1000cb28:	4b13      	ldr	r3, [pc, #76]	; (1000cb78 <gapc_encrypt_cmd_handler+0x88>)
1000cb2a:	70e6      	strb	r6, [r4, #3]
1000cb2c:	881a      	ldrh	r2, [r3, #0]
1000cb2e:	881b      	ldrh	r3, [r3, #0]
1000cb30:	7122      	strb	r2, [r4, #4]
1000cb32:	0a1b      	lsrs	r3, r3, #8
1000cb34:	7163      	strb	r3, [r4, #5]
1000cb36:	230b      	movs	r3, #11
1000cb38:	4e10      	ldr	r6, [pc, #64]	; (1000cb7c <gapc_encrypt_cmd_handler+0x8c>)
1000cb3a:	2210      	movs	r2, #16
1000cb3c:	4810      	ldr	r0, [pc, #64]	; (1000cb80 <gapc_encrypt_cmd_handler+0x90>)
1000cb3e:	7223      	strb	r3, [r4, #8]
1000cb40:	7265      	strb	r5, [r4, #9]
1000cb42:	47b0      	blx	r6
1000cb44:	0a3b      	lsrs	r3, r7, #8
1000cb46:	9906      	ldr	r1, [sp, #24]
1000cb48:	2208      	movs	r2, #8
1000cb4a:	480e      	ldr	r0, [pc, #56]	; (1000cb84 <gapc_encrypt_cmd_handler+0x94>)
1000cb4c:	76e3      	strb	r3, [r4, #27]
1000cb4e:	76a7      	strb	r7, [r4, #26]
1000cb50:	47b0      	blx	r6
1000cb52:	466a      	mov	r2, sp
1000cb54:	7f12      	ldrb	r2, [r2, #28]
1000cb56:	1d63      	adds	r3, r4, #5
1000cb58:	77da      	strb	r2, [r3, #31]
1000cb5a:	231d      	movs	r3, #29
1000cb5c:	1c20      	adds	r0, r4, #0
1000cb5e:	71a3      	strb	r3, [r4, #6]
1000cb60:	2125      	movs	r1, #37	; 0x25
1000cb62:	4b09      	ldr	r3, [pc, #36]	; (1000cb88 <gapc_encrypt_cmd_handler+0x98>)
1000cb64:	71e5      	strb	r5, [r4, #7]
1000cb66:	4798      	blx	r3
1000cb68:	b009      	add	sp, #36	; 0x24
1000cb6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000cb6c:	10011e60 	.word	0x10011e60
1000cb70:	1000c5e9 	.word	0x1000c5e9
1000cb74:	10012e30 	.word	0x10012e30
1000cb78:	10012ac0 	.word	0x10012ac0
1000cb7c:	1000eacb 	.word	0x1000eacb
1000cb80:	10012e3a 	.word	0x10012e3a
1000cb84:	10012e4c 	.word	0x10012e4c
1000cb88:	1000c2e5 	.word	0x1000c2e5

1000cb8c <gapc_encrypt_req_ind>:
1000cb8c:	b508      	push	{r3, lr}
1000cb8e:	0a00      	lsrs	r0, r0, #8
1000cb90:	8010      	strh	r0, [r2, #0]
1000cb92:	784b      	ldrb	r3, [r1, #1]
1000cb94:	7808      	ldrb	r0, [r1, #0]
1000cb96:	021b      	lsls	r3, r3, #8
1000cb98:	4303      	orrs	r3, r0
1000cb9a:	8053      	strh	r3, [r2, #2]
1000cb9c:	1d10      	adds	r0, r2, #4
1000cb9e:	3102      	adds	r1, #2
1000cba0:	2208      	movs	r2, #8
1000cba2:	4b01      	ldr	r3, [pc, #4]	; (1000cba8 <gapc_encrypt_req_ind+0x1c>)
1000cba4:	4798      	blx	r3
1000cba6:	bd08      	pop	{r3, pc}
1000cba8:	1000eacb 	.word	0x1000eacb

1000cbac <gapc_encrypt_cfm_handler>:
1000cbac:	b5f0      	push	{r4, r5, r6, r7, lr}
1000cbae:	2500      	movs	r5, #0
1000cbb0:	b087      	sub	sp, #28
1000cbb2:	9304      	str	r3, [sp, #16]
1000cbb4:	ab0c      	add	r3, sp, #48	; 0x30
1000cbb6:	781b      	ldrb	r3, [r3, #0]
1000cbb8:	1c17      	adds	r7, r2, #0
1000cbba:	4a15      	ldr	r2, [pc, #84]	; (1000cc10 <gapc_encrypt_cfm_handler+0x64>)
1000cbbc:	1c06      	adds	r6, r0, #0
1000cbbe:	9305      	str	r3, [sp, #20]
1000cbc0:	9100      	str	r1, [sp, #0]
1000cbc2:	9002      	str	r0, [sp, #8]
1000cbc4:	1c29      	adds	r1, r5, #0
1000cbc6:	1c2b      	adds	r3, r5, #0
1000cbc8:	9501      	str	r5, [sp, #4]
1000cbca:	1c10      	adds	r0, r2, #0
1000cbcc:	4c11      	ldr	r4, [pc, #68]	; (1000cc14 <gapc_encrypt_cfm_handler+0x68>)
1000cbce:	47a0      	blx	r4
1000cbd0:	2318      	movs	r3, #24
1000cbd2:	4c11      	ldr	r4, [pc, #68]	; (1000cc18 <gapc_encrypt_cfm_handler+0x6c>)
1000cbd4:	9904      	ldr	r1, [sp, #16]
1000cbd6:	7023      	strb	r3, [r4, #0]
1000cbd8:	3b0a      	subs	r3, #10
1000cbda:	7063      	strb	r3, [r4, #1]
1000cbdc:	70a3      	strb	r3, [r4, #2]
1000cbde:	4b0f      	ldr	r3, [pc, #60]	; (1000cc1c <gapc_encrypt_cfm_handler+0x70>)
1000cbe0:	480f      	ldr	r0, [pc, #60]	; (1000cc20 <gapc_encrypt_cfm_handler+0x74>)
1000cbe2:	881a      	ldrh	r2, [r3, #0]
1000cbe4:	881b      	ldrh	r3, [r3, #0]
1000cbe6:	7122      	strb	r2, [r4, #4]
1000cbe8:	0a1b      	lsrs	r3, r3, #8
1000cbea:	7163      	strb	r3, [r4, #5]
1000cbec:	2210      	movs	r2, #16
1000cbee:	4b0d      	ldr	r3, [pc, #52]	; (1000cc24 <gapc_encrypt_cfm_handler+0x78>)
1000cbf0:	70e6      	strb	r6, [r4, #3]
1000cbf2:	7227      	strb	r7, [r4, #8]
1000cbf4:	4798      	blx	r3
1000cbf6:	466b      	mov	r3, sp
1000cbf8:	7d1b      	ldrb	r3, [r3, #20]
1000cbfa:	1c20      	adds	r0, r4, #0
1000cbfc:	7663      	strb	r3, [r4, #25]
1000cbfe:	2312      	movs	r3, #18
1000cc00:	211a      	movs	r1, #26
1000cc02:	71a3      	strb	r3, [r4, #6]
1000cc04:	4b08      	ldr	r3, [pc, #32]	; (1000cc28 <gapc_encrypt_cfm_handler+0x7c>)
1000cc06:	71e5      	strb	r5, [r4, #7]
1000cc08:	4798      	blx	r3
1000cc0a:	b007      	add	sp, #28
1000cc0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000cc0e:	46c0      	nop			; (mov r8, r8)
1000cc10:	10011e70 	.word	0x10011e70
1000cc14:	1000c5e9 	.word	0x1000c5e9
1000cc18:	10012e30 	.word	0x10012e30
1000cc1c:	10012ac0 	.word	0x10012ac0
1000cc20:	10012e39 	.word	0x10012e39
1000cc24:	1000eacb 	.word	0x1000eacb
1000cc28:	1000c2e5 	.word	0x1000c2e5

1000cc2c <gapc_encrypt_ind>:
1000cc2c:	780b      	ldrb	r3, [r1, #0]
1000cc2e:	0a00      	lsrs	r0, r0, #8
1000cc30:	70d3      	strb	r3, [r2, #3]
1000cc32:	2300      	movs	r3, #0
1000cc34:	8010      	strh	r0, [r2, #0]
1000cc36:	7093      	strb	r3, [r2, #2]
1000cc38:	4770      	bx	lr
	...

1000cc3c <gapc_param_update_cfm_handler>:
1000cc3c:	b538      	push	{r3, r4, r5, lr}
1000cc3e:	2410      	movs	r4, #16
1000cc40:	1c05      	adds	r5, r0, #0
1000cc42:	480e      	ldr	r0, [pc, #56]	; (1000cc7c <gapc_param_update_cfm_handler+0x40>)
1000cc44:	7004      	strb	r4, [r0, #0]
1000cc46:	3c02      	subs	r4, #2
1000cc48:	7044      	strb	r4, [r0, #1]
1000cc4a:	7084      	strb	r4, [r0, #2]
1000cc4c:	4c0c      	ldr	r4, [pc, #48]	; (1000cc80 <gapc_param_update_cfm_handler+0x44>)
1000cc4e:	70c5      	strb	r5, [r0, #3]
1000cc50:	8825      	ldrh	r5, [r4, #0]
1000cc52:	8824      	ldrh	r4, [r4, #0]
1000cc54:	72c3      	strb	r3, [r0, #11]
1000cc56:	0a1b      	lsrs	r3, r3, #8
1000cc58:	0a24      	lsrs	r4, r4, #8
1000cc5a:	7303      	strb	r3, [r0, #12]
1000cc5c:	2305      	movs	r3, #5
1000cc5e:	7144      	strb	r4, [r0, #5]
1000cc60:	2400      	movs	r4, #0
1000cc62:	7201      	strb	r1, [r0, #8]
1000cc64:	7242      	strb	r2, [r0, #9]
1000cc66:	7183      	strb	r3, [r0, #6]
1000cc68:	0a12      	lsrs	r2, r2, #8
1000cc6a:	210d      	movs	r1, #13
1000cc6c:	4b05      	ldr	r3, [pc, #20]	; (1000cc84 <gapc_param_update_cfm_handler+0x48>)
1000cc6e:	7105      	strb	r5, [r0, #4]
1000cc70:	7282      	strb	r2, [r0, #10]
1000cc72:	71c4      	strb	r4, [r0, #7]
1000cc74:	4798      	blx	r3
1000cc76:	1c20      	adds	r0, r4, #0
1000cc78:	bd38      	pop	{r3, r4, r5, pc}
1000cc7a:	46c0      	nop			; (mov r8, r8)
1000cc7c:	10012e30 	.word	0x10012e30
1000cc80:	10012ac0 	.word	0x10012ac0
1000cc84:	1000c2e5 	.word	0x1000c2e5

1000cc88 <gapc_param_updated_ind>:
1000cc88:	2300      	movs	r3, #0
1000cc8a:	0a00      	lsrs	r0, r0, #8
1000cc8c:	8010      	strh	r0, [r2, #0]
1000cc8e:	7093      	strb	r3, [r2, #2]
1000cc90:	784b      	ldrb	r3, [r1, #1]
1000cc92:	7808      	ldrb	r0, [r1, #0]
1000cc94:	021b      	lsls	r3, r3, #8
1000cc96:	4303      	orrs	r3, r0
1000cc98:	8093      	strh	r3, [r2, #4]
1000cc9a:	78cb      	ldrb	r3, [r1, #3]
1000cc9c:	7888      	ldrb	r0, [r1, #2]
1000cc9e:	021b      	lsls	r3, r3, #8
1000cca0:	4303      	orrs	r3, r0
1000cca2:	80d3      	strh	r3, [r2, #6]
1000cca4:	794b      	ldrb	r3, [r1, #5]
1000cca6:	7909      	ldrb	r1, [r1, #4]
1000cca8:	021b      	lsls	r3, r3, #8
1000ccaa:	430b      	orrs	r3, r1
1000ccac:	2007      	movs	r0, #7
1000ccae:	8113      	strh	r3, [r2, #8]
1000ccb0:	4770      	bx	lr

1000ccb2 <gapc_param_updated_req_ind>:
1000ccb2:	0a00      	lsrs	r0, r0, #8
1000ccb4:	8010      	strh	r0, [r2, #0]
1000ccb6:	784b      	ldrb	r3, [r1, #1]
1000ccb8:	7808      	ldrb	r0, [r1, #0]
1000ccba:	021b      	lsls	r3, r3, #8
1000ccbc:	4303      	orrs	r3, r0
1000ccbe:	8053      	strh	r3, [r2, #2]
1000ccc0:	78cb      	ldrb	r3, [r1, #3]
1000ccc2:	7888      	ldrb	r0, [r1, #2]
1000ccc4:	021b      	lsls	r3, r3, #8
1000ccc6:	4303      	orrs	r3, r0
1000ccc8:	8093      	strh	r3, [r2, #4]
1000ccca:	794b      	ldrb	r3, [r1, #5]
1000cccc:	7908      	ldrb	r0, [r1, #4]
1000ccce:	021b      	lsls	r3, r3, #8
1000ccd0:	4303      	orrs	r3, r0
1000ccd2:	80d3      	strh	r3, [r2, #6]
1000ccd4:	79cb      	ldrb	r3, [r1, #7]
1000ccd6:	7989      	ldrb	r1, [r1, #6]
1000ccd8:	021b      	lsls	r3, r3, #8
1000ccda:	430b      	orrs	r3, r1
1000ccdc:	2008      	movs	r0, #8
1000ccde:	8113      	strh	r3, [r2, #8]
1000cce0:	4770      	bx	lr
	...

1000cce4 <gapc_dev_info_req_ind_handler>:
1000cce4:	b508      	push	{r3, lr}
1000cce6:	1c0b      	adds	r3, r1, #0
1000cce8:	0a01      	lsrs	r1, r0, #8
1000ccea:	8011      	strh	r1, [r2, #0]
1000ccec:	7818      	ldrb	r0, [r3, #0]
1000ccee:	7090      	strb	r0, [r2, #2]
1000ccf0:	2800      	cmp	r0, #0
1000ccf2:	d104      	bne.n	1000ccfe <gapc_dev_info_req_ind_handler+0x1a>
1000ccf4:	4b03      	ldr	r3, [pc, #12]	; (1000cd04 <gapc_dev_info_req_ind_handler+0x20>)
1000ccf6:	33aa      	adds	r3, #170	; 0xaa
1000ccf8:	881b      	ldrh	r3, [r3, #0]
1000ccfa:	2b00      	cmp	r3, #0
1000ccfc:	d001      	beq.n	1000cd02 <gapc_dev_info_req_ind_handler+0x1e>
1000ccfe:	4b02      	ldr	r3, [pc, #8]	; (1000cd08 <gapc_dev_info_req_ind_handler+0x24>)
1000cd00:	4798      	blx	r3
1000cd02:	bd08      	pop	{r3, pc}
1000cd04:	10012b52 	.word	0x10012b52
1000cd08:	1000c3f5 	.word	0x1000c3f5

1000cd0c <gapc_sec_req_ind>:
1000cd0c:	0a00      	lsrs	r0, r0, #8
1000cd0e:	8010      	strh	r0, [r2, #0]
1000cd10:	7809      	ldrb	r1, [r1, #0]
1000cd12:	2301      	movs	r3, #1
1000cd14:	1c08      	adds	r0, r1, #0
1000cd16:	0889      	lsrs	r1, r1, #2
1000cd18:	4018      	ands	r0, r3
1000cd1a:	400b      	ands	r3, r1
1000cd1c:	70d0      	strb	r0, [r2, #3]
1000cd1e:	7113      	strb	r3, [r2, #4]
1000cd20:	4770      	bx	lr

1000cd22 <gapc_sign_counter_ind_handler>:
1000cd22:	0a00      	lsrs	r0, r0, #8
1000cd24:	8010      	strh	r0, [r2, #0]
1000cd26:	784b      	ldrb	r3, [r1, #1]
1000cd28:	0218      	lsls	r0, r3, #8
1000cd2a:	788b      	ldrb	r3, [r1, #2]
1000cd2c:	041b      	lsls	r3, r3, #16
1000cd2e:	4303      	orrs	r3, r0
1000cd30:	7808      	ldrb	r0, [r1, #0]
1000cd32:	4303      	orrs	r3, r0
1000cd34:	78c8      	ldrb	r0, [r1, #3]
1000cd36:	0600      	lsls	r0, r0, #24
1000cd38:	4303      	orrs	r3, r0
1000cd3a:	6053      	str	r3, [r2, #4]
1000cd3c:	794b      	ldrb	r3, [r1, #5]
1000cd3e:	0218      	lsls	r0, r3, #8
1000cd40:	798b      	ldrb	r3, [r1, #6]
1000cd42:	041b      	lsls	r3, r3, #16
1000cd44:	4303      	orrs	r3, r0
1000cd46:	7908      	ldrb	r0, [r1, #4]
1000cd48:	79c9      	ldrb	r1, [r1, #7]
1000cd4a:	4303      	orrs	r3, r0
1000cd4c:	0609      	lsls	r1, r1, #24
1000cd4e:	430b      	orrs	r3, r1
1000cd50:	2000      	movs	r0, #0
1000cd52:	6093      	str	r3, [r2, #8]
1000cd54:	4770      	bx	lr
	...

1000cd58 <gapc_peer_att_info_ind_handler>:
1000cd58:	b510      	push	{r4, lr}
1000cd5a:	0a00      	lsrs	r0, r0, #8
1000cd5c:	8010      	strh	r0, [r2, #0]
1000cd5e:	7808      	ldrb	r0, [r1, #0]
1000cd60:	7090      	strb	r0, [r2, #2]
1000cd62:	788b      	ldrb	r3, [r1, #2]
1000cd64:	784c      	ldrb	r4, [r1, #1]
1000cd66:	021b      	lsls	r3, r3, #8
1000cd68:	4323      	orrs	r3, r4
1000cd6a:	8093      	strh	r3, [r2, #4]
1000cd6c:	2801      	cmp	r0, #1
1000cd6e:	d027      	beq.n	1000cdc0 <gapc_peer_att_info_ind_handler+0x68>
1000cd70:	2800      	cmp	r0, #0
1000cd72:	d017      	beq.n	1000cda4 <gapc_peer_att_info_ind_handler+0x4c>
1000cd74:	2802      	cmp	r0, #2
1000cd76:	d12a      	bne.n	1000cdce <gapc_peer_att_info_ind_handler+0x76>
1000cd78:	790b      	ldrb	r3, [r1, #4]
1000cd7a:	78c8      	ldrb	r0, [r1, #3]
1000cd7c:	021b      	lsls	r3, r3, #8
1000cd7e:	4303      	orrs	r3, r0
1000cd80:	8113      	strh	r3, [r2, #8]
1000cd82:	798b      	ldrb	r3, [r1, #6]
1000cd84:	7948      	ldrb	r0, [r1, #5]
1000cd86:	021b      	lsls	r3, r3, #8
1000cd88:	4303      	orrs	r3, r0
1000cd8a:	80d3      	strh	r3, [r2, #6]
1000cd8c:	7a0b      	ldrb	r3, [r1, #8]
1000cd8e:	79c8      	ldrb	r0, [r1, #7]
1000cd90:	021b      	lsls	r3, r3, #8
1000cd92:	4303      	orrs	r3, r0
1000cd94:	8193      	strh	r3, [r2, #12]
1000cd96:	7a8b      	ldrb	r3, [r1, #10]
1000cd98:	7a49      	ldrb	r1, [r1, #9]
1000cd9a:	021b      	lsls	r3, r3, #8
1000cd9c:	430b      	orrs	r3, r1
1000cd9e:	8153      	strh	r3, [r2, #10]
1000cda0:	2306      	movs	r3, #6
1000cda2:	e013      	b.n	1000cdcc <gapc_peer_att_info_ind_handler+0x74>
1000cda4:	1c14      	adds	r4, r2, #0
1000cda6:	1c20      	adds	r0, r4, #0
1000cda8:	790a      	ldrb	r2, [r1, #4]
1000cdaa:	78cb      	ldrb	r3, [r1, #3]
1000cdac:	0212      	lsls	r2, r2, #8
1000cdae:	431a      	orrs	r2, r3
1000cdb0:	80e2      	strh	r2, [r4, #6]
1000cdb2:	4b07      	ldr	r3, [pc, #28]	; (1000cdd0 <gapc_peer_att_info_ind_handler+0x78>)
1000cdb4:	3008      	adds	r0, #8
1000cdb6:	3105      	adds	r1, #5
1000cdb8:	4798      	blx	r3
1000cdba:	2302      	movs	r3, #2
1000cdbc:	70a3      	strb	r3, [r4, #2]
1000cdbe:	e006      	b.n	1000cdce <gapc_peer_att_info_ind_handler+0x76>
1000cdc0:	790b      	ldrb	r3, [r1, #4]
1000cdc2:	78c9      	ldrb	r1, [r1, #3]
1000cdc4:	021b      	lsls	r3, r3, #8
1000cdc6:	430b      	orrs	r3, r1
1000cdc8:	80d3      	strh	r3, [r2, #6]
1000cdca:	2305      	movs	r3, #5
1000cdcc:	7093      	strb	r3, [r2, #2]
1000cdce:	bd10      	pop	{r4, pc}
1000cdd0:	1000eacb 	.word	0x1000eacb

1000cdd4 <gapc_con_channel_map_ind_handler>:
1000cdd4:	b508      	push	{r3, lr}
1000cdd6:	2300      	movs	r3, #0
1000cdd8:	0a00      	lsrs	r0, r0, #8
1000cdda:	7013      	strb	r3, [r2, #0]
1000cddc:	8050      	strh	r0, [r2, #2]
1000cdde:	4b02      	ldr	r3, [pc, #8]	; (1000cde8 <gapc_con_channel_map_ind_handler+0x14>)
1000cde0:	1d10      	adds	r0, r2, #4
1000cde2:	2205      	movs	r2, #5
1000cde4:	4798      	blx	r3
1000cde6:	bd08      	pop	{r3, pc}
1000cde8:	1000eacb 	.word	0x1000eacb

1000cdec <gapc_lecb_connected>:
1000cdec:	7843      	ldrb	r3, [r0, #1]
1000cdee:	7802      	ldrb	r2, [r0, #0]
1000cdf0:	021b      	lsls	r3, r3, #8
1000cdf2:	4313      	orrs	r3, r2
1000cdf4:	800b      	strh	r3, [r1, #0]
1000cdf6:	78c3      	ldrb	r3, [r0, #3]
1000cdf8:	7882      	ldrb	r2, [r0, #2]
1000cdfa:	021b      	lsls	r3, r3, #8
1000cdfc:	4313      	orrs	r3, r2
1000cdfe:	804b      	strh	r3, [r1, #2]
1000ce00:	7943      	ldrb	r3, [r0, #5]
1000ce02:	7902      	ldrb	r2, [r0, #4]
1000ce04:	021b      	lsls	r3, r3, #8
1000ce06:	4313      	orrs	r3, r2
1000ce08:	808b      	strh	r3, [r1, #4]
1000ce0a:	79c3      	ldrb	r3, [r0, #7]
1000ce0c:	7982      	ldrb	r2, [r0, #6]
1000ce0e:	021b      	lsls	r3, r3, #8
1000ce10:	4313      	orrs	r3, r2
1000ce12:	80cb      	strh	r3, [r1, #6]
1000ce14:	2300      	movs	r3, #0
1000ce16:	720b      	strb	r3, [r1, #8]
1000ce18:	4770      	bx	lr

1000ce1a <gapc_lecb_disconnected>:
1000ce1a:	7843      	ldrb	r3, [r0, #1]
1000ce1c:	7802      	ldrb	r2, [r0, #0]
1000ce1e:	021b      	lsls	r3, r3, #8
1000ce20:	4313      	orrs	r3, r2
1000ce22:	800b      	strh	r3, [r1, #0]
1000ce24:	78c3      	ldrb	r3, [r0, #3]
1000ce26:	7882      	ldrb	r2, [r0, #2]
1000ce28:	021b      	lsls	r3, r3, #8
1000ce2a:	4313      	orrs	r3, r2
1000ce2c:	804b      	strh	r3, [r1, #2]
1000ce2e:	4770      	bx	lr

1000ce30 <gapc_lecb_connect_req_ind>:
1000ce30:	7843      	ldrb	r3, [r0, #1]
1000ce32:	7802      	ldrb	r2, [r0, #0]
1000ce34:	021b      	lsls	r3, r3, #8
1000ce36:	4313      	orrs	r3, r2
1000ce38:	800b      	strh	r3, [r1, #0]
1000ce3a:	78c3      	ldrb	r3, [r0, #3]
1000ce3c:	7882      	ldrb	r2, [r0, #2]
1000ce3e:	021b      	lsls	r3, r3, #8
1000ce40:	4313      	orrs	r3, r2
1000ce42:	804b      	strh	r3, [r1, #2]
1000ce44:	7943      	ldrb	r3, [r0, #5]
1000ce46:	7902      	ldrb	r2, [r0, #4]
1000ce48:	021b      	lsls	r3, r3, #8
1000ce4a:	4313      	orrs	r3, r2
1000ce4c:	808b      	strh	r3, [r1, #4]
1000ce4e:	79c3      	ldrb	r3, [r0, #7]
1000ce50:	7982      	ldrb	r2, [r0, #6]
1000ce52:	021b      	lsls	r3, r3, #8
1000ce54:	4313      	orrs	r3, r2
1000ce56:	80cb      	strh	r3, [r1, #6]
1000ce58:	4770      	bx	lr

1000ce5a <gapc_lecb_add_credit_resp_handler>:
1000ce5a:	7843      	ldrb	r3, [r0, #1]
1000ce5c:	7802      	ldrb	r2, [r0, #0]
1000ce5e:	021b      	lsls	r3, r3, #8
1000ce60:	4313      	orrs	r3, r2
1000ce62:	800b      	strh	r3, [r1, #0]
1000ce64:	78c3      	ldrb	r3, [r0, #3]
1000ce66:	7882      	ldrb	r2, [r0, #2]
1000ce68:	021b      	lsls	r3, r3, #8
1000ce6a:	4313      	orrs	r3, r2
1000ce6c:	804b      	strh	r3, [r1, #2]
1000ce6e:	7943      	ldrb	r3, [r0, #5]
1000ce70:	7902      	ldrb	r2, [r0, #4]
1000ce72:	021b      	lsls	r3, r3, #8
1000ce74:	4313      	orrs	r3, r2
1000ce76:	808b      	strh	r3, [r1, #4]
1000ce78:	4770      	bx	lr
	...

1000ce7c <gapm_reset_req_handler>:
1000ce7c:	b573      	push	{r0, r1, r4, r5, r6, lr}
1000ce7e:	466b      	mov	r3, sp
1000ce80:	4915      	ldr	r1, [pc, #84]	; (1000ced8 <gapm_reset_req_handler+0x5c>)
1000ce82:	4816      	ldr	r0, [pc, #88]	; (1000cedc <gapm_reset_req_handler+0x60>)
1000ce84:	880c      	ldrh	r4, [r1, #0]
1000ce86:	8809      	ldrh	r1, [r1, #0]
1000ce88:	1ddd      	adds	r5, r3, #7
1000ce8a:	0a09      	lsrs	r1, r1, #8
1000ce8c:	2300      	movs	r3, #0
1000ce8e:	2202      	movs	r2, #2
1000ce90:	7141      	strb	r1, [r0, #5]
1000ce92:	26d0      	movs	r6, #208	; 0xd0
1000ce94:	2101      	movs	r1, #1
1000ce96:	7104      	strb	r4, [r0, #4]
1000ce98:	4c11      	ldr	r4, [pc, #68]	; (1000cee0 <gapm_reset_req_handler+0x64>)
1000ce9a:	702b      	strb	r3, [r5, #0]
1000ce9c:	7002      	strb	r2, [r0, #0]
1000ce9e:	70c3      	strb	r3, [r0, #3]
1000cea0:	320b      	adds	r2, #11
1000cea2:	7201      	strb	r1, [r0, #8]
1000cea4:	7181      	strb	r1, [r0, #6]
1000cea6:	71c3      	strb	r3, [r0, #7]
1000cea8:	3108      	adds	r1, #8
1000ceaa:	4b0e      	ldr	r3, [pc, #56]	; (1000cee4 <gapm_reset_req_handler+0x68>)
1000ceac:	0136      	lsls	r6, r6, #4
1000ceae:	7042      	strb	r2, [r0, #1]
1000ceb0:	7082      	strb	r2, [r0, #2]
1000ceb2:	80a2      	strh	r2, [r4, #4]
1000ceb4:	8026      	strh	r6, [r4, #0]
1000ceb6:	4798      	blx	r3
1000ceb8:	1c28      	adds	r0, r5, #0
1000ceba:	4b0b      	ldr	r3, [pc, #44]	; (1000cee8 <gapm_reset_req_handler+0x6c>)
1000cebc:	4798      	blx	r3
1000cebe:	782b      	ldrb	r3, [r5, #0]
1000cec0:	20e2      	movs	r0, #226	; 0xe2
1000cec2:	2b00      	cmp	r3, #0
1000cec4:	d106      	bne.n	1000ced4 <gapm_reset_req_handler+0x58>
1000cec6:	68a3      	ldr	r3, [r4, #8]
1000cec8:	20e2      	movs	r0, #226	; 0xe2
1000ceca:	781a      	ldrb	r2, [r3, #0]
1000cecc:	785b      	ldrb	r3, [r3, #1]
1000cece:	2a01      	cmp	r2, #1
1000ced0:	d100      	bne.n	1000ced4 <gapm_reset_req_handler+0x58>
1000ced2:	1c18      	adds	r0, r3, #0
1000ced4:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
1000ced6:	46c0      	nop			; (mov r8, r8)
1000ced8:	10012ac0 	.word	0x10012ac0
1000cedc:	10012e30 	.word	0x10012e30
1000cee0:	10012ab4 	.word	0x10012ab4
1000cee4:	1000c2e5 	.word	0x1000c2e5
1000cee8:	1000c349 	.word	0x1000c349

1000ceec <gapm_set_dev_config_cmd_handler>:
1000ceec:	b5f0      	push	{r4, r5, r6, r7, lr}
1000ceee:	b089      	sub	sp, #36	; 0x24
1000cef0:	9303      	str	r3, [sp, #12]
1000cef2:	ab0e      	add	r3, sp, #56	; 0x38
1000cef4:	781b      	ldrb	r3, [r3, #0]
1000cef6:	4c37      	ldr	r4, [pc, #220]	; (1000cfd4 <gapm_set_dev_config_cmd_handler+0xe8>)
1000cef8:	9304      	str	r3, [sp, #16]
1000cefa:	ab0f      	add	r3, sp, #60	; 0x3c
1000cefc:	781b      	ldrb	r3, [r3, #0]
1000cefe:	270d      	movs	r7, #13
1000cf00:	9305      	str	r3, [sp, #20]
1000cf02:	ab10      	add	r3, sp, #64	; 0x40
1000cf04:	881b      	ldrh	r3, [r3, #0]
1000cf06:	72a1      	strb	r1, [r4, #10]
1000cf08:	9300      	str	r3, [sp, #0]
1000cf0a:	ab11      	add	r3, sp, #68	; 0x44
1000cf0c:	881b      	ldrh	r3, [r3, #0]
1000cf0e:	0a09      	lsrs	r1, r1, #8
1000cf10:	9301      	str	r3, [sp, #4]
1000cf12:	ab12      	add	r3, sp, #72	; 0x48
1000cf14:	881b      	ldrh	r3, [r3, #0]
1000cf16:	7260      	strb	r0, [r4, #9]
1000cf18:	9302      	str	r3, [sp, #8]
1000cf1a:	ab06      	add	r3, sp, #24
1000cf1c:	1dde      	adds	r6, r3, #7
1000cf1e:	2300      	movs	r3, #0
1000cf20:	7033      	strb	r3, [r6, #0]
1000cf22:	2304      	movs	r3, #4
1000cf24:	7023      	strb	r3, [r4, #0]
1000cf26:	2300      	movs	r3, #0
1000cf28:	70e3      	strb	r3, [r4, #3]
1000cf2a:	4b2b      	ldr	r3, [pc, #172]	; (1000cfd8 <gapm_set_dev_config_cmd_handler+0xec>)
1000cf2c:	72e1      	strb	r1, [r4, #11]
1000cf2e:	881d      	ldrh	r5, [r3, #0]
1000cf30:	881b      	ldrh	r3, [r3, #0]
1000cf32:	1c11      	adds	r1, r2, #0
1000cf34:	0a1b      	lsrs	r3, r3, #8
1000cf36:	7163      	strb	r3, [r4, #5]
1000cf38:	2303      	movs	r3, #3
1000cf3a:	7125      	strb	r5, [r4, #4]
1000cf3c:	2206      	movs	r2, #6
1000cf3e:	4d27      	ldr	r5, [pc, #156]	; (1000cfdc <gapm_set_dev_config_cmd_handler+0xf0>)
1000cf40:	4827      	ldr	r0, [pc, #156]	; (1000cfe0 <gapm_set_dev_config_cmd_handler+0xf4>)
1000cf42:	7223      	strb	r3, [r4, #8]
1000cf44:	7067      	strb	r7, [r4, #1]
1000cf46:	70a7      	strb	r7, [r4, #2]
1000cf48:	47a8      	blx	r5
1000cf4a:	9903      	ldr	r1, [sp, #12]
1000cf4c:	2210      	movs	r2, #16
1000cf4e:	4825      	ldr	r0, [pc, #148]	; (1000cfe4 <gapm_set_dev_config_cmd_handler+0xf8>)
1000cf50:	47a8      	blx	r5
1000cf52:	466a      	mov	r2, sp
1000cf54:	7c12      	ldrb	r2, [r2, #16]
1000cf56:	1ce3      	adds	r3, r4, #3
1000cf58:	77da      	strb	r2, [r3, #31]
1000cf5a:	466a      	mov	r2, sp
1000cf5c:	7d12      	ldrb	r2, [r2, #20]
1000cf5e:	1d23      	adds	r3, r4, #4
1000cf60:	77da      	strb	r2, [r3, #31]
1000cf62:	466a      	mov	r2, sp
1000cf64:	7812      	ldrb	r2, [r2, #0]
1000cf66:	1d63      	adds	r3, r4, #5
1000cf68:	77da      	strb	r2, [r3, #31]
1000cf6a:	9b00      	ldr	r3, [sp, #0]
1000cf6c:	1da2      	adds	r2, r4, #6
1000cf6e:	0a1b      	lsrs	r3, r3, #8
1000cf70:	77d3      	strb	r3, [r2, #31]
1000cf72:	466a      	mov	r2, sp
1000cf74:	7912      	ldrb	r2, [r2, #4]
1000cf76:	1de3      	adds	r3, r4, #7
1000cf78:	77da      	strb	r2, [r3, #31]
1000cf7a:	1c22      	adds	r2, r4, #0
1000cf7c:	9b01      	ldr	r3, [sp, #4]
1000cf7e:	3208      	adds	r2, #8
1000cf80:	0a1b      	lsrs	r3, r3, #8
1000cf82:	77d3      	strb	r3, [r2, #31]
1000cf84:	466a      	mov	r2, sp
1000cf86:	1c23      	adds	r3, r4, #0
1000cf88:	7a12      	ldrb	r2, [r2, #8]
1000cf8a:	3328      	adds	r3, #40	; 0x28
1000cf8c:	701a      	strb	r2, [r3, #0]
1000cf8e:	1c22      	adds	r2, r4, #0
1000cf90:	9b02      	ldr	r3, [sp, #8]
1000cf92:	3229      	adds	r2, #41	; 0x29
1000cf94:	0a1b      	lsrs	r3, r3, #8
1000cf96:	7013      	strb	r3, [r2, #0]
1000cf98:	23d0      	movs	r3, #208	; 0xd0
1000cf9a:	4d13      	ldr	r5, [pc, #76]	; (1000cfe8 <gapm_set_dev_config_cmd_handler+0xfc>)
1000cf9c:	011b      	lsls	r3, r3, #4
1000cf9e:	802b      	strh	r3, [r5, #0]
1000cfa0:	2322      	movs	r3, #34	; 0x22
1000cfa2:	71a3      	strb	r3, [r4, #6]
1000cfa4:	2300      	movs	r3, #0
1000cfa6:	212a      	movs	r1, #42	; 0x2a
1000cfa8:	71e3      	strb	r3, [r4, #7]
1000cfaa:	1c20      	adds	r0, r4, #0
1000cfac:	4b0f      	ldr	r3, [pc, #60]	; (1000cfec <gapm_set_dev_config_cmd_handler+0x100>)
1000cfae:	80af      	strh	r7, [r5, #4]
1000cfb0:	4798      	blx	r3
1000cfb2:	1c30      	adds	r0, r6, #0
1000cfb4:	4b0e      	ldr	r3, [pc, #56]	; (1000cff0 <gapm_set_dev_config_cmd_handler+0x104>)
1000cfb6:	4798      	blx	r3
1000cfb8:	7833      	ldrb	r3, [r6, #0]
1000cfba:	20e2      	movs	r0, #226	; 0xe2
1000cfbc:	2b00      	cmp	r3, #0
1000cfbe:	d106      	bne.n	1000cfce <gapm_set_dev_config_cmd_handler+0xe2>
1000cfc0:	68ab      	ldr	r3, [r5, #8]
1000cfc2:	20e2      	movs	r0, #226	; 0xe2
1000cfc4:	781a      	ldrb	r2, [r3, #0]
1000cfc6:	785b      	ldrb	r3, [r3, #1]
1000cfc8:	2a03      	cmp	r2, #3
1000cfca:	d100      	bne.n	1000cfce <gapm_set_dev_config_cmd_handler+0xe2>
1000cfcc:	1c18      	adds	r0, r3, #0
1000cfce:	b009      	add	sp, #36	; 0x24
1000cfd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000cfd2:	46c0      	nop			; (mov r8, r8)
1000cfd4:	10012e30 	.word	0x10012e30
1000cfd8:	10012ac0 	.word	0x10012ac0
1000cfdc:	1000eacb 	.word	0x1000eacb
1000cfe0:	10012e3c 	.word	0x10012e3c
1000cfe4:	10012e42 	.word	0x10012e42
1000cfe8:	10012ab4 	.word	0x10012ab4
1000cfec:	1000c2e5 	.word	0x1000c2e5
1000cff0:	1000c349 	.word	0x1000c349

1000cff4 <gapm_get_dev_config_cmd_handler>:
1000cff4:	4684      	mov	ip, r0
1000cff6:	4663      	mov	r3, ip
1000cff8:	b5f0      	push	{r4, r5, r6, r7, lr}
1000cffa:	b085      	sub	sp, #20
1000cffc:	9100      	str	r1, [sp, #0]
1000cffe:	20cf      	movs	r0, #207	; 0xcf
1000d000:	2b01      	cmp	r3, #1
1000d002:	d854      	bhi.n	1000d0ae <gapm_get_dev_config_cmd_handler+0xba>
1000d004:	2900      	cmp	r1, #0
1000d006:	d052      	beq.n	1000d0ae <gapm_get_dev_config_cmd_handler+0xba>
1000d008:	2200      	movs	r2, #0
1000d00a:	492a      	ldr	r1, [pc, #168]	; (1000d0b4 <gapm_get_dev_config_cmd_handler+0xc0>)
1000d00c:	ab02      	add	r3, sp, #8
1000d00e:	880c      	ldrh	r4, [r1, #0]
1000d010:	8809      	ldrh	r1, [r1, #0]
1000d012:	1d9f      	adds	r7, r3, #6
1000d014:	719a      	strb	r2, [r3, #6]
1000d016:	4b28      	ldr	r3, [pc, #160]	; (1000d0b8 <gapm_get_dev_config_cmd_handler+0xc4>)
1000d018:	0a09      	lsrs	r1, r1, #8
1000d01a:	250d      	movs	r5, #13
1000d01c:	2606      	movs	r6, #6
1000d01e:	7159      	strb	r1, [r3, #5]
1000d020:	4661      	mov	r1, ip
1000d022:	701e      	strb	r6, [r3, #0]
1000d024:	705d      	strb	r5, [r3, #1]
1000d026:	709d      	strb	r5, [r3, #2]
1000d028:	70da      	strb	r2, [r3, #3]
1000d02a:	711c      	strb	r4, [r3, #4]
1000d02c:	2901      	cmp	r1, #1
1000d02e:	d13e      	bne.n	1000d0ae <gapm_get_dev_config_cmd_handler+0xba>
1000d030:	21d0      	movs	r1, #208	; 0xd0
1000d032:	4c22      	ldr	r4, [pc, #136]	; (1000d0bc <gapm_get_dev_config_cmd_handler+0xc8>)
1000d034:	0109      	lsls	r1, r1, #4
1000d036:	8061      	strh	r1, [r4, #2]
1000d038:	4921      	ldr	r1, [pc, #132]	; (1000d0c0 <gapm_get_dev_config_cmd_handler+0xcc>)
1000d03a:	71da      	strb	r2, [r3, #7]
1000d03c:	8021      	strh	r1, [r4, #0]
1000d03e:	4661      	mov	r1, ip
1000d040:	721e      	strb	r6, [r3, #8]
1000d042:	7199      	strb	r1, [r3, #6]
1000d044:	1c18      	adds	r0, r3, #0
1000d046:	2109      	movs	r1, #9
1000d048:	4b1e      	ldr	r3, [pc, #120]	; (1000d0c4 <gapm_get_dev_config_cmd_handler+0xd0>)
1000d04a:	80a5      	strh	r5, [r4, #4]
1000d04c:	4798      	blx	r3
1000d04e:	1c38      	adds	r0, r7, #0
1000d050:	4b1d      	ldr	r3, [pc, #116]	; (1000d0c8 <gapm_get_dev_config_cmd_handler+0xd4>)
1000d052:	4798      	blx	r3
1000d054:	783b      	ldrb	r3, [r7, #0]
1000d056:	20e2      	movs	r0, #226	; 0xe2
1000d058:	9301      	str	r3, [sp, #4]
1000d05a:	2b00      	cmp	r3, #0
1000d05c:	d127      	bne.n	1000d0ae <gapm_get_dev_config_cmd_handler+0xba>
1000d05e:	8821      	ldrh	r1, [r4, #0]
1000d060:	4a1a      	ldr	r2, [pc, #104]	; (1000d0cc <gapm_get_dev_config_cmd_handler+0xd8>)
1000d062:	68a7      	ldr	r7, [r4, #8]
1000d064:	3b01      	subs	r3, #1
1000d066:	4291      	cmp	r1, r2
1000d068:	d001      	beq.n	1000d06e <gapm_get_dev_config_cmd_handler+0x7a>
1000d06a:	8023      	strh	r3, [r4, #0]
1000d06c:	e01a      	b.n	1000d0a4 <gapm_get_dev_config_cmd_handler+0xb0>
1000d06e:	8063      	strh	r3, [r4, #2]
1000d070:	9b00      	ldr	r3, [sp, #0]
1000d072:	1c39      	adds	r1, r7, #0
1000d074:	1c58      	adds	r0, r3, #1
1000d076:	1c32      	adds	r2, r6, #0
1000d078:	4b15      	ldr	r3, [pc, #84]	; (1000d0d0 <gapm_get_dev_config_cmd_handler+0xdc>)
1000d07a:	4798      	blx	r3
1000d07c:	79bb      	ldrb	r3, [r7, #6]
1000d07e:	9a00      	ldr	r2, [sp, #0]
1000d080:	7013      	strb	r3, [r2, #0]
1000d082:	23d0      	movs	r3, #208	; 0xd0
1000d084:	011b      	lsls	r3, r3, #4
1000d086:	8023      	strh	r3, [r4, #0]
1000d088:	ab02      	add	r3, sp, #8
1000d08a:	80a5      	strh	r5, [r4, #4]
1000d08c:	1ddd      	adds	r5, r3, #7
1000d08e:	466b      	mov	r3, sp
1000d090:	791b      	ldrb	r3, [r3, #4]
1000d092:	1c28      	adds	r0, r5, #0
1000d094:	702b      	strb	r3, [r5, #0]
1000d096:	4b0c      	ldr	r3, [pc, #48]	; (1000d0c8 <gapm_get_dev_config_cmd_handler+0xd4>)
1000d098:	4798      	blx	r3
1000d09a:	782b      	ldrb	r3, [r5, #0]
1000d09c:	20d0      	movs	r0, #208	; 0xd0
1000d09e:	2b00      	cmp	r3, #0
1000d0a0:	d105      	bne.n	1000d0ae <gapm_get_dev_config_cmd_handler+0xba>
1000d0a2:	68a7      	ldr	r7, [r4, #8]
1000d0a4:	783b      	ldrb	r3, [r7, #0]
1000d0a6:	7878      	ldrb	r0, [r7, #1]
1000d0a8:	2b06      	cmp	r3, #6
1000d0aa:	d000      	beq.n	1000d0ae <gapm_get_dev_config_cmd_handler+0xba>
1000d0ac:	20e2      	movs	r0, #226	; 0xe2
1000d0ae:	b005      	add	sp, #20
1000d0b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000d0b2:	46c0      	nop			; (mov r8, r8)
1000d0b4:	10012ac0 	.word	0x10012ac0
1000d0b8:	10012e30 	.word	0x10012e30
1000d0bc:	10012ab4 	.word	0x10012ab4
1000d0c0:	00000d08 	.word	0x00000d08
1000d0c4:	1000c2e5 	.word	0x1000c2e5
1000d0c8:	1000c349 	.word	0x1000c349
1000d0cc:	0000ffff 	.word	0x0000ffff
1000d0d0:	1000eacb 	.word	0x1000eacb

1000d0d4 <gapm_cancel_cmd_handler>:
1000d0d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
1000d0d6:	4916      	ldr	r1, [pc, #88]	; (1000d130 <gapm_cancel_cmd_handler+0x5c>)
1000d0d8:	4816      	ldr	r0, [pc, #88]	; (1000d134 <gapm_cancel_cmd_handler+0x60>)
1000d0da:	880c      	ldrh	r4, [r1, #0]
1000d0dc:	8809      	ldrh	r1, [r1, #0]
1000d0de:	466b      	mov	r3, sp
1000d0e0:	0a09      	lsrs	r1, r1, #8
1000d0e2:	7141      	strb	r1, [r0, #5]
1000d0e4:	2102      	movs	r1, #2
1000d0e6:	2203      	movs	r2, #3
1000d0e8:	7201      	strb	r1, [r0, #8]
1000d0ea:	21d0      	movs	r1, #208	; 0xd0
1000d0ec:	1ddd      	adds	r5, r3, #7
1000d0ee:	2300      	movs	r3, #0
1000d0f0:	7104      	strb	r4, [r0, #4]
1000d0f2:	4c11      	ldr	r4, [pc, #68]	; (1000d138 <gapm_cancel_cmd_handler+0x64>)
1000d0f4:	7002      	strb	r2, [r0, #0]
1000d0f6:	0109      	lsls	r1, r1, #4
1000d0f8:	320a      	adds	r2, #10
1000d0fa:	702b      	strb	r3, [r5, #0]
1000d0fc:	7042      	strb	r2, [r0, #1]
1000d0fe:	7082      	strb	r2, [r0, #2]
1000d100:	70c3      	strb	r3, [r0, #3]
1000d102:	8021      	strh	r1, [r4, #0]
1000d104:	80a2      	strh	r2, [r4, #4]
1000d106:	71c3      	strb	r3, [r0, #7]
1000d108:	3a0c      	subs	r2, #12
1000d10a:	2109      	movs	r1, #9
1000d10c:	4b0b      	ldr	r3, [pc, #44]	; (1000d13c <gapm_cancel_cmd_handler+0x68>)
1000d10e:	7182      	strb	r2, [r0, #6]
1000d110:	4798      	blx	r3
1000d112:	1c28      	adds	r0, r5, #0
1000d114:	4b0a      	ldr	r3, [pc, #40]	; (1000d140 <gapm_cancel_cmd_handler+0x6c>)
1000d116:	4798      	blx	r3
1000d118:	7828      	ldrb	r0, [r5, #0]
1000d11a:	2800      	cmp	r0, #0
1000d11c:	d001      	beq.n	1000d122 <gapm_cancel_cmd_handler+0x4e>
1000d11e:	20e2      	movs	r0, #226	; 0xe2
1000d120:	e004      	b.n	1000d12c <gapm_cancel_cmd_handler+0x58>
1000d122:	68a3      	ldr	r3, [r4, #8]
1000d124:	785b      	ldrb	r3, [r3, #1]
1000d126:	2b44      	cmp	r3, #68	; 0x44
1000d128:	d000      	beq.n	1000d12c <gapm_cancel_cmd_handler+0x58>
1000d12a:	1c18      	adds	r0, r3, #0
1000d12c:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
1000d12e:	46c0      	nop			; (mov r8, r8)
1000d130:	10012ac0 	.word	0x10012ac0
1000d134:	10012e30 	.word	0x10012e30
1000d138:	10012ab4 	.word	0x10012ab4
1000d13c:	1000c2e5 	.word	0x1000c2e5
1000d140:	1000c349 	.word	0x1000c349

1000d144 <gapm_dev_bdaddr_ind_handler>:
1000d144:	b538      	push	{r3, r4, r5, lr}
1000d146:	1c05      	adds	r5, r0, #0
1000d148:	1c0c      	adds	r4, r1, #0
1000d14a:	1c48      	adds	r0, r1, #1
1000d14c:	2206      	movs	r2, #6
1000d14e:	1c29      	adds	r1, r5, #0
1000d150:	4b02      	ldr	r3, [pc, #8]	; (1000d15c <gapm_dev_bdaddr_ind_handler+0x18>)
1000d152:	4798      	blx	r3
1000d154:	79ab      	ldrb	r3, [r5, #6]
1000d156:	2000      	movs	r0, #0
1000d158:	7023      	strb	r3, [r4, #0]
1000d15a:	bd38      	pop	{r3, r4, r5, pc}
1000d15c:	1000eacb 	.word	0x1000eacb

1000d160 <gapm_cmp_evt>:
1000d160:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000d162:	7803      	ldrb	r3, [r0, #0]
1000d164:	7845      	ldrb	r5, [r0, #1]
1000d166:	3b0c      	subs	r3, #12
1000d168:	1e18      	subs	r0, r3, #0
1000d16a:	280b      	cmp	r0, #11
1000d16c:	d900      	bls.n	1000d170 <gapm_cmp_evt+0x10>
1000d16e:	e08d      	b.n	1000d28c <gapm_cmp_evt+0x12c>
1000d170:	1c0c      	adds	r4, r1, #0
1000d172:	f000 fc65 	bl	1000da40 <__gnu_thumb1_case_uqi>
1000d176:	1952      	.short	0x1952
1000d178:	068b1919 	.word	0x068b1919
1000d17c:	8b595906 	.word	0x8b595906
1000d180:	0d8b      	.short	0x0d8b
1000d182:	2300      	movs	r3, #0
1000d184:	2d45      	cmp	r5, #69	; 0x45
1000d186:	d000      	beq.n	1000d18a <gapm_cmp_evt+0x2a>
1000d188:	1c2b      	adds	r3, r5, #0
1000d18a:	7023      	strb	r3, [r4, #0]
1000d18c:	2002      	movs	r0, #2
1000d18e:	e07e      	b.n	1000d28e <gapm_cmp_evt+0x12e>
1000d190:	203b      	movs	r0, #59	; 0x3b
1000d192:	2d00      	cmp	r5, #0
1000d194:	d100      	bne.n	1000d198 <gapm_cmp_evt+0x38>
1000d196:	e07a      	b.n	1000d28e <gapm_cmp_evt+0x12e>
1000d198:	700d      	strb	r5, [r1, #0]
1000d19a:	1c48      	adds	r0, r1, #1
1000d19c:	2210      	movs	r2, #16
1000d19e:	2100      	movs	r1, #0
1000d1a0:	4b3b      	ldr	r3, [pc, #236]	; (1000d290 <gapm_cmp_evt+0x130>)
1000d1a2:	4798      	blx	r3
1000d1a4:	200f      	movs	r0, #15
1000d1a6:	e072      	b.n	1000d28e <gapm_cmp_evt+0x12e>
1000d1a8:	2d00      	cmp	r5, #0
1000d1aa:	d134      	bne.n	1000d216 <gapm_cmp_evt+0xb6>
1000d1ac:	4b39      	ldr	r3, [pc, #228]	; (1000d294 <gapm_cmp_evt+0x134>)
1000d1ae:	4798      	blx	r3
1000d1b0:	1e43      	subs	r3, r0, #1
1000d1b2:	b2db      	uxtb	r3, r3
1000d1b4:	1c28      	adds	r0, r5, #0
1000d1b6:	2b06      	cmp	r3, #6
1000d1b8:	d869      	bhi.n	1000d28e <gapm_cmp_evt+0x12e>
1000d1ba:	466b      	mov	r3, sp
1000d1bc:	4e36      	ldr	r6, [pc, #216]	; (1000d298 <gapm_cmp_evt+0x138>)
1000d1be:	1dd9      	adds	r1, r3, #7
1000d1c0:	8db0      	ldrh	r0, [r6, #44]	; 0x2c
1000d1c2:	4b36      	ldr	r3, [pc, #216]	; (1000d29c <gapm_cmp_evt+0x13c>)
1000d1c4:	4798      	blx	r3
1000d1c6:	2312      	movs	r3, #18
1000d1c8:	4358      	muls	r0, r3
1000d1ca:	4935      	ldr	r1, [pc, #212]	; (1000d2a0 <gapm_cmp_evt+0x140>)
1000d1cc:	1809      	adds	r1, r1, r0
1000d1ce:	1c0b      	adds	r3, r1, #0
1000d1d0:	894a      	ldrh	r2, [r1, #10]
1000d1d2:	3308      	adds	r3, #8
1000d1d4:	8122      	strh	r2, [r4, #8]
1000d1d6:	784f      	ldrb	r7, [r1, #1]
1000d1d8:	72a5      	strb	r5, [r4, #10]
1000d1da:	7027      	strb	r7, [r4, #0]
1000d1dc:	898a      	ldrh	r2, [r1, #12]
1000d1de:	1c60      	adds	r0, r4, #1
1000d1e0:	81a2      	strh	r2, [r4, #12]
1000d1e2:	88db      	ldrh	r3, [r3, #6]
1000d1e4:	3102      	adds	r1, #2
1000d1e6:	81e3      	strh	r3, [r4, #14]
1000d1e8:	89cb      	ldrh	r3, [r1, #14]
1000d1ea:	2206      	movs	r2, #6
1000d1ec:	8223      	strh	r3, [r4, #16]
1000d1ee:	4b2d      	ldr	r3, [pc, #180]	; (1000d2a4 <gapm_cmp_evt+0x144>)
1000d1f0:	4798      	blx	r3
1000d1f2:	2f00      	cmp	r7, #0
1000d1f4:	d00a      	beq.n	1000d20c <gapm_cmp_evt+0xac>
1000d1f6:	79a3      	ldrb	r3, [r4, #6]
1000d1f8:	223f      	movs	r2, #63	; 0x3f
1000d1fa:	1c19      	adds	r1, r3, #0
1000d1fc:	3501      	adds	r5, #1
1000d1fe:	4391      	bics	r1, r2
1000d200:	29c0      	cmp	r1, #192	; 0xc0
1000d202:	d003      	beq.n	1000d20c <gapm_cmp_evt+0xac>
1000d204:	065b      	lsls	r3, r3, #25
1000d206:	0fdb      	lsrs	r3, r3, #31
1000d208:	3502      	adds	r5, #2
1000d20a:	1aed      	subs	r5, r5, r3
1000d20c:	2301      	movs	r3, #1
1000d20e:	425b      	negs	r3, r3
1000d210:	7025      	strb	r5, [r4, #0]
1000d212:	85b3      	strh	r3, [r6, #44]	; 0x2c
1000d214:	e038      	b.n	1000d288 <gapm_cmp_evt+0x128>
1000d216:	700d      	strb	r5, [r1, #0]
1000d218:	e004      	b.n	1000d224 <gapm_cmp_evt+0xc4>
1000d21a:	2300      	movs	r3, #0
1000d21c:	2d45      	cmp	r5, #69	; 0x45
1000d21e:	d000      	beq.n	1000d222 <gapm_cmp_evt+0xc2>
1000d220:	1c2b      	adds	r3, r5, #0
1000d222:	7023      	strb	r3, [r4, #0]
1000d224:	2003      	movs	r0, #3
1000d226:	e032      	b.n	1000d28e <gapm_cmp_evt+0x12e>
1000d228:	4e1b      	ldr	r6, [pc, #108]	; (1000d298 <gapm_cmp_evt+0x138>)
1000d22a:	2100      	movs	r1, #0
1000d22c:	8db0      	ldrh	r0, [r6, #44]	; 0x2c
1000d22e:	4b1b      	ldr	r3, [pc, #108]	; (1000d29c <gapm_cmp_evt+0x13c>)
1000d230:	4798      	blx	r3
1000d232:	2807      	cmp	r0, #7
1000d234:	d818      	bhi.n	1000d268 <gapm_cmp_evt+0x108>
1000d236:	2301      	movs	r3, #1
1000d238:	425b      	negs	r3, r3
1000d23a:	85b3      	strh	r3, [r6, #44]	; 0x2c
1000d23c:	3313      	adds	r3, #19
1000d23e:	4358      	muls	r0, r3
1000d240:	4917      	ldr	r1, [pc, #92]	; (1000d2a0 <gapm_cmp_evt+0x140>)
1000d242:	1809      	adds	r1, r1, r0
1000d244:	1c0b      	adds	r3, r1, #0
1000d246:	894a      	ldrh	r2, [r1, #10]
1000d248:	3308      	adds	r3, #8
1000d24a:	8122      	strh	r2, [r4, #8]
1000d24c:	784a      	ldrb	r2, [r1, #1]
1000d24e:	72a5      	strb	r5, [r4, #10]
1000d250:	7022      	strb	r2, [r4, #0]
1000d252:	898a      	ldrh	r2, [r1, #12]
1000d254:	1c60      	adds	r0, r4, #1
1000d256:	81a2      	strh	r2, [r4, #12]
1000d258:	88db      	ldrh	r3, [r3, #6]
1000d25a:	3102      	adds	r1, #2
1000d25c:	81e3      	strh	r3, [r4, #14]
1000d25e:	89cb      	ldrh	r3, [r1, #14]
1000d260:	2206      	movs	r2, #6
1000d262:	8223      	strh	r3, [r4, #16]
1000d264:	4b0f      	ldr	r3, [pc, #60]	; (1000d2a4 <gapm_cmp_evt+0x144>)
1000d266:	4798      	blx	r3
1000d268:	2200      	movs	r2, #0
1000d26a:	7823      	ldrb	r3, [r4, #0]
1000d26c:	4293      	cmp	r3, r2
1000d26e:	d00a      	beq.n	1000d286 <gapm_cmp_evt+0x126>
1000d270:	79a3      	ldrb	r3, [r4, #6]
1000d272:	323f      	adds	r2, #63	; 0x3f
1000d274:	1c19      	adds	r1, r3, #0
1000d276:	4391      	bics	r1, r2
1000d278:	3a3e      	subs	r2, #62	; 0x3e
1000d27a:	29c0      	cmp	r1, #192	; 0xc0
1000d27c:	d003      	beq.n	1000d286 <gapm_cmp_evt+0x126>
1000d27e:	065b      	lsls	r3, r3, #25
1000d280:	0fdb      	lsrs	r3, r3, #31
1000d282:	3202      	adds	r2, #2
1000d284:	1ad2      	subs	r2, r2, r3
1000d286:	7022      	strb	r2, [r4, #0]
1000d288:	2005      	movs	r0, #5
1000d28a:	e000      	b.n	1000d28e <gapm_cmp_evt+0x12e>
1000d28c:	2000      	movs	r0, #0
1000d28e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1000d290:	1000eadd 	.word	0x1000eadd
1000d294:	1000c4f1 	.word	0x1000c4f1
1000d298:	10012b52 	.word	0x10012b52
1000d29c:	1000c4b5 	.word	0x1000c4b5
1000d2a0:	10012ac2 	.word	0x10012ac2
1000d2a4:	1000eacb 	.word	0x1000eacb

1000d2a8 <gapm_start_adv_cmd_handler>:
1000d2a8:	b5f0      	push	{r4, r5, r6, r7, lr}
1000d2aa:	b089      	sub	sp, #36	; 0x24
1000d2ac:	9303      	str	r3, [sp, #12]
1000d2ae:	ab0e      	add	r3, sp, #56	; 0x38
1000d2b0:	9102      	str	r1, [sp, #8]
1000d2b2:	cb02      	ldmia	r3!, {r1}
1000d2b4:	aa08      	add	r2, sp, #32
1000d2b6:	881b      	ldrh	r3, [r3, #0]
1000d2b8:	4e3c      	ldr	r6, [pc, #240]	; (1000d3ac <gapm_start_adv_cmd_handler+0x104>)
1000d2ba:	9300      	str	r3, [sp, #0]
1000d2bc:	ab10      	add	r3, sp, #64	; 0x40
1000d2be:	881b      	ldrh	r3, [r3, #0]
1000d2c0:	240d      	movs	r4, #13
1000d2c2:	469c      	mov	ip, r3
1000d2c4:	ab11      	add	r3, sp, #68	; 0x44
1000d2c6:	781b      	ldrb	r3, [r3, #0]
1000d2c8:	9304      	str	r3, [sp, #16]
1000d2ca:	ab12      	add	r3, sp, #72	; 0x48
1000d2cc:	781b      	ldrb	r3, [r3, #0]
1000d2ce:	9305      	str	r3, [sp, #20]
1000d2d0:	ab13      	add	r3, sp, #76	; 0x4c
1000d2d2:	781b      	ldrb	r3, [r3, #0]
1000d2d4:	9306      	str	r3, [sp, #24]
1000d2d6:	ab14      	add	r3, sp, #80	; 0x50
1000d2d8:	781b      	ldrb	r3, [r3, #0]
1000d2da:	9301      	str	r3, [sp, #4]
1000d2dc:	2319      	movs	r3, #25
1000d2de:	189b      	adds	r3, r3, r2
1000d2e0:	7fdd      	ldrb	r5, [r3, #31]
1000d2e2:	ab18      	add	r3, sp, #96	; 0x60
1000d2e4:	881f      	ldrh	r7, [r3, #0]
1000d2e6:	ab19      	add	r3, sp, #100	; 0x64
1000d2e8:	781b      	ldrb	r3, [r3, #0]
1000d2ea:	8832      	ldrh	r2, [r6, #0]
1000d2ec:	9307      	str	r3, [sp, #28]
1000d2ee:	4b30      	ldr	r3, [pc, #192]	; (1000d3b0 <gapm_start_adv_cmd_handler+0x108>)
1000d2f0:	8836      	ldrh	r6, [r6, #0]
1000d2f2:	711a      	strb	r2, [r3, #4]
1000d2f4:	466a      	mov	r2, sp
1000d2f6:	7a12      	ldrb	r2, [r2, #8]
1000d2f8:	701c      	strb	r4, [r3, #0]
1000d2fa:	705c      	strb	r4, [r3, #1]
1000d2fc:	709c      	strb	r4, [r3, #2]
1000d2fe:	725a      	strb	r2, [r3, #9]
1000d300:	2400      	movs	r4, #0
1000d302:	466a      	mov	r2, sp
1000d304:	0a36      	lsrs	r6, r6, #8
1000d306:	70dc      	strb	r4, [r3, #3]
1000d308:	7218      	strb	r0, [r3, #8]
1000d30a:	729c      	strb	r4, [r3, #10]
1000d30c:	715e      	strb	r6, [r3, #5]
1000d30e:	72dc      	strb	r4, [r3, #11]
1000d310:	7812      	ldrb	r2, [r2, #0]
1000d312:	380e      	subs	r0, #14
1000d314:	731a      	strb	r2, [r3, #12]
1000d316:	9a00      	ldr	r2, [sp, #0]
1000d318:	0a14      	lsrs	r4, r2, #8
1000d31a:	4662      	mov	r2, ip
1000d31c:	739a      	strb	r2, [r3, #14]
1000d31e:	4662      	mov	r2, ip
1000d320:	735c      	strb	r4, [r3, #13]
1000d322:	0a14      	lsrs	r4, r2, #8
1000d324:	466a      	mov	r2, sp
1000d326:	7c12      	ldrb	r2, [r2, #16]
1000d328:	73dc      	strb	r4, [r3, #15]
1000d32a:	741a      	strb	r2, [r3, #16]
1000d32c:	1c1c      	adds	r4, r3, #0
1000d32e:	2801      	cmp	r0, #1
1000d330:	d809      	bhi.n	1000d346 <gapm_start_adv_cmd_handler+0x9e>
1000d332:	2900      	cmp	r1, #0
1000d334:	d003      	beq.n	1000d33e <gapm_start_adv_cmd_handler+0x96>
1000d336:	481f      	ldr	r0, [pc, #124]	; (1000d3b4 <gapm_start_adv_cmd_handler+0x10c>)
1000d338:	2206      	movs	r2, #6
1000d33a:	4b1f      	ldr	r3, [pc, #124]	; (1000d3b8 <gapm_start_adv_cmd_handler+0x110>)
1000d33c:	4798      	blx	r3
1000d33e:	466b      	mov	r3, sp
1000d340:	7b1b      	ldrb	r3, [r3, #12]
1000d342:	75e3      	strb	r3, [r4, #23]
1000d344:	e014      	b.n	1000d370 <gapm_start_adv_cmd_handler+0xc8>
1000d346:	466b      	mov	r3, sp
1000d348:	7d1b      	ldrb	r3, [r3, #20]
1000d34a:	9915      	ldr	r1, [sp, #84]	; 0x54
1000d34c:	7463      	strb	r3, [r4, #17]
1000d34e:	466b      	mov	r3, sp
1000d350:	7e1b      	ldrb	r3, [r3, #24]
1000d352:	9a01      	ldr	r2, [sp, #4]
1000d354:	74a3      	strb	r3, [r4, #18]
1000d356:	466b      	mov	r3, sp
1000d358:	791b      	ldrb	r3, [r3, #4]
1000d35a:	4818      	ldr	r0, [pc, #96]	; (1000d3bc <gapm_start_adv_cmd_handler+0x114>)
1000d35c:	4e16      	ldr	r6, [pc, #88]	; (1000d3b8 <gapm_start_adv_cmd_handler+0x110>)
1000d35e:	74e3      	strb	r3, [r4, #19]
1000d360:	47b0      	blx	r6
1000d362:	1c23      	adds	r3, r4, #0
1000d364:	4816      	ldr	r0, [pc, #88]	; (1000d3c0 <gapm_start_adv_cmd_handler+0x118>)
1000d366:	3330      	adds	r3, #48	; 0x30
1000d368:	9917      	ldr	r1, [sp, #92]	; 0x5c
1000d36a:	1c2a      	adds	r2, r5, #0
1000d36c:	701d      	strb	r5, [r3, #0]
1000d36e:	47b0      	blx	r6
1000d370:	1c22      	adds	r2, r4, #0
1000d372:	23a5      	movs	r3, #165	; 0xa5
1000d374:	3250      	adds	r2, #80	; 0x50
1000d376:	7013      	strb	r3, [r2, #0]
1000d378:	1c22      	adds	r2, r4, #0
1000d37a:	3251      	adds	r2, #81	; 0x51
1000d37c:	7013      	strb	r3, [r2, #0]
1000d37e:	1c23      	adds	r3, r4, #0
1000d380:	1c22      	adds	r2, r4, #0
1000d382:	3352      	adds	r3, #82	; 0x52
1000d384:	701f      	strb	r7, [r3, #0]
1000d386:	3253      	adds	r2, #83	; 0x53
1000d388:	0a3b      	lsrs	r3, r7, #8
1000d38a:	7013      	strb	r3, [r2, #0]
1000d38c:	466a      	mov	r2, sp
1000d38e:	1c23      	adds	r3, r4, #0
1000d390:	7f12      	ldrb	r2, [r2, #28]
1000d392:	3354      	adds	r3, #84	; 0x54
1000d394:	701a      	strb	r2, [r3, #0]
1000d396:	234d      	movs	r3, #77	; 0x4d
1000d398:	2500      	movs	r5, #0
1000d39a:	71a3      	strb	r3, [r4, #6]
1000d39c:	1c20      	adds	r0, r4, #0
1000d39e:	2155      	movs	r1, #85	; 0x55
1000d3a0:	4b08      	ldr	r3, [pc, #32]	; (1000d3c4 <gapm_start_adv_cmd_handler+0x11c>)
1000d3a2:	71e5      	strb	r5, [r4, #7]
1000d3a4:	4798      	blx	r3
1000d3a6:	1c28      	adds	r0, r5, #0
1000d3a8:	b009      	add	sp, #36	; 0x24
1000d3aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000d3ac:	10012ac0 	.word	0x10012ac0
1000d3b0:	10012e30 	.word	0x10012e30
1000d3b4:	10012e41 	.word	0x10012e41
1000d3b8:	1000eacb 	.word	0x1000eacb
1000d3bc:	10012e44 	.word	0x10012e44
1000d3c0:	10012e61 	.word	0x10012e61
1000d3c4:	1000c2e5 	.word	0x1000c2e5

1000d3c8 <get_gap_local_addr_type>:
1000d3c8:	4b04      	ldr	r3, [pc, #16]	; (1000d3dc <get_gap_local_addr_type+0x14>)
1000d3ca:	2001      	movs	r0, #1
1000d3cc:	791b      	ldrb	r3, [r3, #4]
1000d3ce:	2b02      	cmp	r3, #2
1000d3d0:	d003      	beq.n	1000d3da <get_gap_local_addr_type+0x12>
1000d3d2:	3b03      	subs	r3, #3
1000d3d4:	4258      	negs	r0, r3
1000d3d6:	4158      	adcs	r0, r3
1000d3d8:	0040      	lsls	r0, r0, #1
1000d3da:	4770      	bx	lr
1000d3dc:	10012b52 	.word	0x10012b52

1000d3e0 <gapm_adv_report_evt_handler>:
1000d3e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000d3e2:	7843      	ldrb	r3, [r0, #1]
1000d3e4:	1c05      	adds	r5, r0, #0
1000d3e6:	9301      	str	r3, [sp, #4]
1000d3e8:	466b      	mov	r3, sp
1000d3ea:	1c0c      	adds	r4, r1, #0
1000d3ec:	791b      	ldrb	r3, [r3, #4]
1000d3ee:	7806      	ldrb	r6, [r0, #0]
1000d3f0:	2206      	movs	r2, #6
1000d3f2:	704b      	strb	r3, [r1, #1]
1000d3f4:	1c88      	adds	r0, r1, #2
1000d3f6:	4f1b      	ldr	r7, [pc, #108]	; (1000d464 <gapm_adv_report_evt_handler+0x84>)
1000d3f8:	1ca9      	adds	r1, r5, #2
1000d3fa:	47b8      	blx	r7
1000d3fc:	1c20      	adds	r0, r4, #0
1000d3fe:	1c29      	adds	r1, r5, #0
1000d400:	7a2a      	ldrb	r2, [r5, #8]
1000d402:	3008      	adds	r0, #8
1000d404:	77c2      	strb	r2, [r0, #31]
1000d406:	3109      	adds	r1, #9
1000d408:	3528      	adds	r5, #40	; 0x28
1000d40a:	47b8      	blx	r7
1000d40c:	782b      	ldrb	r3, [r5, #0]
1000d40e:	b25a      	sxtb	r2, r3
1000d410:	2a00      	cmp	r2, #0
1000d412:	da01      	bge.n	1000d418 <gapm_adv_report_evt_handler+0x38>
1000d414:	3301      	adds	r3, #1
1000d416:	b2db      	uxtb	r3, r3
1000d418:	1c22      	adds	r2, r4, #0
1000d41a:	3228      	adds	r2, #40	; 0x28
1000d41c:	7013      	strb	r3, [r2, #0]
1000d41e:	2200      	movs	r2, #0
1000d420:	9b01      	ldr	r3, [sp, #4]
1000d422:	4293      	cmp	r3, r2
1000d424:	d00a      	beq.n	1000d43c <gapm_adv_report_evt_handler+0x5c>
1000d426:	79e3      	ldrb	r3, [r4, #7]
1000d428:	323f      	adds	r2, #63	; 0x3f
1000d42a:	1c19      	adds	r1, r3, #0
1000d42c:	4391      	bics	r1, r2
1000d42e:	3a3e      	subs	r2, #62	; 0x3e
1000d430:	29c0      	cmp	r1, #192	; 0xc0
1000d432:	d003      	beq.n	1000d43c <gapm_adv_report_evt_handler+0x5c>
1000d434:	065b      	lsls	r3, r3, #25
1000d436:	0fdb      	lsrs	r3, r3, #31
1000d438:	3202      	adds	r2, #2
1000d43a:	1ad2      	subs	r2, r2, r3
1000d43c:	7062      	strb	r2, [r4, #1]
1000d43e:	2e04      	cmp	r6, #4
1000d440:	d80f      	bhi.n	1000d462 <gapm_adv_report_evt_handler+0x82>
1000d442:	1c30      	adds	r0, r6, #0
1000d444:	f000 fafc 	bl	1000da40 <__gnu_thumb1_case_uqi>
1000d448:	09070503 	.word	0x09070503
1000d44c:	0b          	.byte	0x0b
1000d44d:	00          	.byte	0x00
1000d44e:	2300      	movs	r3, #0
1000d450:	e006      	b.n	1000d460 <gapm_adv_report_evt_handler+0x80>
1000d452:	2301      	movs	r3, #1
1000d454:	e004      	b.n	1000d460 <gapm_adv_report_evt_handler+0x80>
1000d456:	2302      	movs	r3, #2
1000d458:	e002      	b.n	1000d460 <gapm_adv_report_evt_handler+0x80>
1000d45a:	2303      	movs	r3, #3
1000d45c:	e000      	b.n	1000d460 <gapm_adv_report_evt_handler+0x80>
1000d45e:	2305      	movs	r3, #5
1000d460:	7023      	strb	r3, [r4, #0]
1000d462:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
1000d464:	1000eacb 	.word	0x1000eacb

1000d468 <gapm_resolv_addr_cmd_handler>:
1000d468:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000d46a:	2314      	movs	r3, #20
1000d46c:	4c12      	ldr	r4, [pc, #72]	; (1000d4b8 <gapm_resolv_addr_cmd_handler+0x50>)
1000d46e:	1c17      	adds	r7, r2, #0
1000d470:	7023      	strb	r3, [r4, #0]
1000d472:	3b07      	subs	r3, #7
1000d474:	7063      	strb	r3, [r4, #1]
1000d476:	70a3      	strb	r3, [r4, #2]
1000d478:	2300      	movs	r3, #0
1000d47a:	70e3      	strb	r3, [r4, #3]
1000d47c:	4b0f      	ldr	r3, [pc, #60]	; (1000d4bc <gapm_resolv_addr_cmd_handler+0x54>)
1000d47e:	1c05      	adds	r5, r0, #0
1000d480:	881a      	ldrh	r2, [r3, #0]
1000d482:	881b      	ldrh	r3, [r3, #0]
1000d484:	4e0e      	ldr	r6, [pc, #56]	; (1000d4c0 <gapm_resolv_addr_cmd_handler+0x58>)
1000d486:	0a1b      	lsrs	r3, r3, #8
1000d488:	7163      	strb	r3, [r4, #5]
1000d48a:	2317      	movs	r3, #23
1000d48c:	012d      	lsls	r5, r5, #4
1000d48e:	7122      	strb	r2, [r4, #4]
1000d490:	7260      	strb	r0, [r4, #9]
1000d492:	2206      	movs	r2, #6
1000d494:	480b      	ldr	r0, [pc, #44]	; (1000d4c4 <gapm_resolv_addr_cmd_handler+0x5c>)
1000d496:	7223      	strb	r3, [r4, #8]
1000d498:	47b0      	blx	r6
1000d49a:	1c39      	adds	r1, r7, #0
1000d49c:	1c2a      	adds	r2, r5, #0
1000d49e:	480a      	ldr	r0, [pc, #40]	; (1000d4c8 <gapm_resolv_addr_cmd_handler+0x60>)
1000d4a0:	47b0      	blx	r6
1000d4a2:	1c29      	adds	r1, r5, #0
1000d4a4:	3110      	adds	r1, #16
1000d4a6:	1c0b      	adds	r3, r1, #0
1000d4a8:	3b08      	subs	r3, #8
1000d4aa:	71a3      	strb	r3, [r4, #6]
1000d4ac:	121b      	asrs	r3, r3, #8
1000d4ae:	71e3      	strb	r3, [r4, #7]
1000d4b0:	1c20      	adds	r0, r4, #0
1000d4b2:	4b06      	ldr	r3, [pc, #24]	; (1000d4cc <gapm_resolv_addr_cmd_handler+0x64>)
1000d4b4:	4798      	blx	r3
1000d4b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000d4b8:	10012e30 	.word	0x10012e30
1000d4bc:	10012ac0 	.word	0x10012ac0
1000d4c0:	1000eacb 	.word	0x1000eacb
1000d4c4:	10012e3a 	.word	0x10012e3a
1000d4c8:	10012e40 	.word	0x10012e40
1000d4cc:	1000c2e5 	.word	0x1000c2e5

1000d4d0 <gapm_addr_solved_ind_handler>:
1000d4d0:	b570      	push	{r4, r5, r6, lr}
1000d4d2:	1c04      	adds	r4, r0, #0
1000d4d4:	1c08      	adds	r0, r1, #0
1000d4d6:	1c0d      	adds	r5, r1, #0
1000d4d8:	4e05      	ldr	r6, [pc, #20]	; (1000d4f0 <gapm_addr_solved_ind_handler+0x20>)
1000d4da:	1c21      	adds	r1, r4, #0
1000d4dc:	2206      	movs	r2, #6
1000d4de:	3011      	adds	r0, #17
1000d4e0:	47b0      	blx	r6
1000d4e2:	1c68      	adds	r0, r5, #1
1000d4e4:	1da1      	adds	r1, r4, #6
1000d4e6:	2210      	movs	r2, #16
1000d4e8:	47b0      	blx	r6
1000d4ea:	2300      	movs	r3, #0
1000d4ec:	702b      	strb	r3, [r5, #0]
1000d4ee:	bd70      	pop	{r4, r5, r6, pc}
1000d4f0:	1000eacb 	.word	0x1000eacb

1000d4f4 <gapm_profile_added_ind_handler>:
1000d4f4:	b510      	push	{r4, lr}
1000d4f6:	7843      	ldrb	r3, [r0, #1]
1000d4f8:	7902      	ldrb	r2, [r0, #4]
1000d4fa:	7944      	ldrb	r4, [r0, #5]
1000d4fc:	7800      	ldrb	r0, [r0, #0]
1000d4fe:	021b      	lsls	r3, r3, #8
1000d500:	4303      	orrs	r3, r0
1000d502:	2b1b      	cmp	r3, #27
1000d504:	d104      	bne.n	1000d510 <gapm_profile_added_ind_handler+0x1c>
1000d506:	2300      	movs	r3, #0
1000d508:	700b      	strb	r3, [r1, #0]
1000d50a:	0223      	lsls	r3, r4, #8
1000d50c:	4313      	orrs	r3, r2
1000d50e:	804b      	strh	r3, [r1, #2]
1000d510:	203b      	movs	r0, #59	; 0x3b
1000d512:	bd10      	pop	{r4, pc}

1000d514 <gattc_read_req_ind_parser>:
1000d514:	7843      	ldrb	r3, [r0, #1]
1000d516:	7802      	ldrb	r2, [r0, #0]
1000d518:	021b      	lsls	r3, r3, #8
1000d51a:	4313      	orrs	r3, r2
1000d51c:	804b      	strh	r3, [r1, #2]
1000d51e:	4770      	bx	lr

1000d520 <gattc_write_req_ind_parser>:
1000d520:	b508      	push	{r3, lr}
1000d522:	1c13      	adds	r3, r2, #0
1000d524:	0a00      	lsrs	r0, r0, #8
1000d526:	8010      	strh	r0, [r2, #0]
1000d528:	784a      	ldrb	r2, [r1, #1]
1000d52a:	7808      	ldrb	r0, [r1, #0]
1000d52c:	0212      	lsls	r2, r2, #8
1000d52e:	4302      	orrs	r2, r0
1000d530:	805a      	strh	r2, [r3, #2]
1000d532:	78ca      	ldrb	r2, [r1, #3]
1000d534:	7888      	ldrb	r0, [r1, #2]
1000d536:	0212      	lsls	r2, r2, #8
1000d538:	4302      	orrs	r2, r0
1000d53a:	809a      	strh	r2, [r3, #4]
1000d53c:	794a      	ldrb	r2, [r1, #5]
1000d53e:	7908      	ldrb	r0, [r1, #4]
1000d540:	0212      	lsls	r2, r2, #8
1000d542:	4302      	orrs	r2, r0
1000d544:	80da      	strh	r2, [r3, #6]
1000d546:	3308      	adds	r3, #8
1000d548:	1c18      	adds	r0, r3, #0
1000d54a:	3106      	adds	r1, #6
1000d54c:	4b01      	ldr	r3, [pc, #4]	; (1000d554 <gattc_write_req_ind_parser+0x34>)
1000d54e:	4798      	blx	r3
1000d550:	bd08      	pop	{r3, pc}
1000d552:	46c0      	nop			; (mov r8, r8)
1000d554:	1000eacb 	.word	0x1000eacb

1000d558 <gattc_att_info_req_parser>:
1000d558:	7843      	ldrb	r3, [r0, #1]
1000d55a:	7802      	ldrb	r2, [r0, #0]
1000d55c:	021b      	lsls	r3, r3, #8
1000d55e:	4313      	orrs	r3, r2
1000d560:	800b      	strh	r3, [r1, #0]
1000d562:	4770      	bx	lr

1000d564 <gattc_read_cfm>:
1000d564:	b538      	push	{r3, r4, r5, lr}
1000d566:	2514      	movs	r5, #20
1000d568:	1c1c      	adds	r4, r3, #0
1000d56a:	4b14      	ldr	r3, [pc, #80]	; (1000d5bc <gattc_read_cfm+0x58>)
1000d56c:	70d9      	strb	r1, [r3, #3]
1000d56e:	4914      	ldr	r1, [pc, #80]	; (1000d5c0 <gattc_read_cfm+0x5c>)
1000d570:	701d      	strb	r5, [r3, #0]
1000d572:	3d08      	subs	r5, #8
1000d574:	705d      	strb	r5, [r3, #1]
1000d576:	709d      	strb	r5, [r3, #2]
1000d578:	880d      	ldrh	r5, [r1, #0]
1000d57a:	8809      	ldrh	r1, [r1, #0]
1000d57c:	7218      	strb	r0, [r3, #8]
1000d57e:	0a09      	lsrs	r1, r1, #8
1000d580:	7159      	strb	r1, [r3, #5]
1000d582:	0a00      	lsrs	r0, r0, #8
1000d584:	0a21      	lsrs	r1, r4, #8
1000d586:	711d      	strb	r5, [r3, #4]
1000d588:	7258      	strb	r0, [r3, #9]
1000d58a:	729c      	strb	r4, [r3, #10]
1000d58c:	72d9      	strb	r1, [r3, #11]
1000d58e:	731a      	strb	r2, [r3, #12]
1000d590:	1c1d      	adds	r5, r3, #0
1000d592:	2c00      	cmp	r4, #0
1000d594:	d007      	beq.n	1000d5a6 <gattc_read_cfm+0x42>
1000d596:	9904      	ldr	r1, [sp, #16]
1000d598:	1c22      	adds	r2, r4, #0
1000d59a:	480a      	ldr	r0, [pc, #40]	; (1000d5c4 <gattc_read_cfm+0x60>)
1000d59c:	4b0a      	ldr	r3, [pc, #40]	; (1000d5c8 <gattc_read_cfm+0x64>)
1000d59e:	340d      	adds	r4, #13
1000d5a0:	4798      	blx	r3
1000d5a2:	b2a1      	uxth	r1, r4
1000d5a4:	e001      	b.n	1000d5aa <gattc_read_cfm+0x46>
1000d5a6:	210e      	movs	r1, #14
1000d5a8:	735c      	strb	r4, [r3, #13]
1000d5aa:	1c0b      	adds	r3, r1, #0
1000d5ac:	3b08      	subs	r3, #8
1000d5ae:	71ab      	strb	r3, [r5, #6]
1000d5b0:	121b      	asrs	r3, r3, #8
1000d5b2:	71eb      	strb	r3, [r5, #7]
1000d5b4:	1c28      	adds	r0, r5, #0
1000d5b6:	4b05      	ldr	r3, [pc, #20]	; (1000d5cc <gattc_read_cfm+0x68>)
1000d5b8:	4798      	blx	r3
1000d5ba:	bd38      	pop	{r3, r4, r5, pc}
1000d5bc:	10012e30 	.word	0x10012e30
1000d5c0:	10012ac0 	.word	0x10012ac0
1000d5c4:	10012e3d 	.word	0x10012e3d
1000d5c8:	1000eacb 	.word	0x1000eacb
1000d5cc:	1000c2e5 	.word	0x1000c2e5

1000d5d0 <gattc_write_cfm>:
1000d5d0:	4b0d      	ldr	r3, [pc, #52]	; (1000d608 <gattc_write_cfm+0x38>)
1000d5d2:	b510      	push	{r4, lr}
1000d5d4:	729a      	strb	r2, [r3, #10]
1000d5d6:	2203      	movs	r2, #3
1000d5d8:	2416      	movs	r4, #22
1000d5da:	719a      	strb	r2, [r3, #6]
1000d5dc:	2200      	movs	r2, #0
1000d5de:	70d9      	strb	r1, [r3, #3]
1000d5e0:	490a      	ldr	r1, [pc, #40]	; (1000d60c <gattc_write_cfm+0x3c>)
1000d5e2:	701c      	strb	r4, [r3, #0]
1000d5e4:	3c0a      	subs	r4, #10
1000d5e6:	705c      	strb	r4, [r3, #1]
1000d5e8:	709c      	strb	r4, [r3, #2]
1000d5ea:	880c      	ldrh	r4, [r1, #0]
1000d5ec:	8809      	ldrh	r1, [r1, #0]
1000d5ee:	7218      	strb	r0, [r3, #8]
1000d5f0:	0a09      	lsrs	r1, r1, #8
1000d5f2:	0a00      	lsrs	r0, r0, #8
1000d5f4:	711c      	strb	r4, [r3, #4]
1000d5f6:	7159      	strb	r1, [r3, #5]
1000d5f8:	7258      	strb	r0, [r3, #9]
1000d5fa:	71da      	strb	r2, [r3, #7]
1000d5fc:	1c18      	adds	r0, r3, #0
1000d5fe:	210b      	movs	r1, #11
1000d600:	4b03      	ldr	r3, [pc, #12]	; (1000d610 <gattc_write_cfm+0x40>)
1000d602:	4798      	blx	r3
1000d604:	bd10      	pop	{r4, pc}
1000d606:	46c0      	nop			; (mov r8, r8)
1000d608:	10012e30 	.word	0x10012e30
1000d60c:	10012ac0 	.word	0x10012ac0
1000d610:	1000c2e5 	.word	0x1000c2e5

1000d614 <gattc_att_info_cfm>:
1000d614:	b538      	push	{r3, r4, r5, lr}
1000d616:	4c0e      	ldr	r4, [pc, #56]	; (1000d650 <gattc_att_info_cfm+0x3c>)
1000d618:	2518      	movs	r5, #24
1000d61a:	7323      	strb	r3, [r4, #12]
1000d61c:	2305      	movs	r3, #5
1000d61e:	71a3      	strb	r3, [r4, #6]
1000d620:	2300      	movs	r3, #0
1000d622:	70e1      	strb	r1, [r4, #3]
1000d624:	490b      	ldr	r1, [pc, #44]	; (1000d654 <gattc_att_info_cfm+0x40>)
1000d626:	7025      	strb	r5, [r4, #0]
1000d628:	3d0c      	subs	r5, #12
1000d62a:	7065      	strb	r5, [r4, #1]
1000d62c:	70a5      	strb	r5, [r4, #2]
1000d62e:	880d      	ldrh	r5, [r1, #0]
1000d630:	8809      	ldrh	r1, [r1, #0]
1000d632:	7220      	strb	r0, [r4, #8]
1000d634:	0a09      	lsrs	r1, r1, #8
1000d636:	0a00      	lsrs	r0, r0, #8
1000d638:	7161      	strb	r1, [r4, #5]
1000d63a:	7260      	strb	r0, [r4, #9]
1000d63c:	72a2      	strb	r2, [r4, #10]
1000d63e:	71e3      	strb	r3, [r4, #7]
1000d640:	0a12      	lsrs	r2, r2, #8
1000d642:	1c20      	adds	r0, r4, #0
1000d644:	210d      	movs	r1, #13
1000d646:	4b04      	ldr	r3, [pc, #16]	; (1000d658 <gattc_att_info_cfm+0x44>)
1000d648:	7125      	strb	r5, [r4, #4]
1000d64a:	72e2      	strb	r2, [r4, #11]
1000d64c:	4798      	blx	r3
1000d64e:	bd38      	pop	{r3, r4, r5, pc}
1000d650:	10012e30 	.word	0x10012e30
1000d654:	10012ac0 	.word	0x10012ac0
1000d658:	1000c2e5 	.word	0x1000c2e5

1000d65c <gattc_event_cfm_handler>:
1000d65c:	220e      	movs	r2, #14
1000d65e:	b508      	push	{r3, lr}
1000d660:	4b0b      	ldr	r3, [pc, #44]	; (1000d690 <gattc_event_cfm_handler+0x34>)
1000d662:	701a      	strb	r2, [r3, #0]
1000d664:	3a02      	subs	r2, #2
1000d666:	705a      	strb	r2, [r3, #1]
1000d668:	709a      	strb	r2, [r3, #2]
1000d66a:	4a0a      	ldr	r2, [pc, #40]	; (1000d694 <gattc_event_cfm_handler+0x38>)
1000d66c:	70d8      	strb	r0, [r3, #3]
1000d66e:	8810      	ldrh	r0, [r2, #0]
1000d670:	8812      	ldrh	r2, [r2, #0]
1000d672:	7219      	strb	r1, [r3, #8]
1000d674:	0a12      	lsrs	r2, r2, #8
1000d676:	715a      	strb	r2, [r3, #5]
1000d678:	2202      	movs	r2, #2
1000d67a:	719a      	strb	r2, [r3, #6]
1000d67c:	2200      	movs	r2, #0
1000d67e:	0a09      	lsrs	r1, r1, #8
1000d680:	7118      	strb	r0, [r3, #4]
1000d682:	7259      	strb	r1, [r3, #9]
1000d684:	71da      	strb	r2, [r3, #7]
1000d686:	1c18      	adds	r0, r3, #0
1000d688:	210a      	movs	r1, #10
1000d68a:	4b03      	ldr	r3, [pc, #12]	; (1000d698 <gattc_event_cfm_handler+0x3c>)
1000d68c:	4798      	blx	r3
1000d68e:	bd08      	pop	{r3, pc}
1000d690:	10012e30 	.word	0x10012e30
1000d694:	10012ac0 	.word	0x10012ac0
1000d698:	1000c2e5 	.word	0x1000c2e5

1000d69c <gattc_disc_svc_ind_parser>:
1000d69c:	b570      	push	{r4, r5, r6, lr}
1000d69e:	1c15      	adds	r5, r2, #0
1000d6a0:	0a00      	lsrs	r0, r0, #8
1000d6a2:	8010      	strh	r0, [r2, #0]
1000d6a4:	784b      	ldrb	r3, [r1, #1]
1000d6a6:	780a      	ldrb	r2, [r1, #0]
1000d6a8:	021b      	lsls	r3, r3, #8
1000d6aa:	4313      	orrs	r3, r2
1000d6ac:	806b      	strh	r3, [r5, #2]
1000d6ae:	78cb      	ldrb	r3, [r1, #3]
1000d6b0:	788a      	ldrb	r2, [r1, #2]
1000d6b2:	021b      	lsls	r3, r3, #8
1000d6b4:	4313      	orrs	r3, r2
1000d6b6:	80ab      	strh	r3, [r5, #4]
1000d6b8:	790e      	ldrb	r6, [r1, #4]
1000d6ba:	4b05      	ldr	r3, [pc, #20]	; (1000d6d0 <gattc_disc_svc_ind_parser+0x34>)
1000d6bc:	1c30      	adds	r0, r6, #0
1000d6be:	1c0c      	adds	r4, r1, #0
1000d6c0:	4798      	blx	r3
1000d6c2:	1c32      	adds	r2, r6, #0
1000d6c4:	71a8      	strb	r0, [r5, #6]
1000d6c6:	1d61      	adds	r1, r4, #5
1000d6c8:	1de8      	adds	r0, r5, #7
1000d6ca:	4b02      	ldr	r3, [pc, #8]	; (1000d6d4 <gattc_disc_svc_ind_parser+0x38>)
1000d6cc:	4798      	blx	r3
1000d6ce:	bd70      	pop	{r4, r5, r6, pc}
1000d6d0:	1000bcdd 	.word	0x1000bcdd
1000d6d4:	1000eacb 	.word	0x1000eacb

1000d6d8 <gattc_disc_svc_incl_ind_parser>:
1000d6d8:	b570      	push	{r4, r5, r6, lr}
1000d6da:	1c15      	adds	r5, r2, #0
1000d6dc:	0a00      	lsrs	r0, r0, #8
1000d6de:	8010      	strh	r0, [r2, #0]
1000d6e0:	784b      	ldrb	r3, [r1, #1]
1000d6e2:	780a      	ldrb	r2, [r1, #0]
1000d6e4:	021b      	lsls	r3, r3, #8
1000d6e6:	4313      	orrs	r3, r2
1000d6e8:	806b      	strh	r3, [r5, #2]
1000d6ea:	78cb      	ldrb	r3, [r1, #3]
1000d6ec:	788a      	ldrb	r2, [r1, #2]
1000d6ee:	021b      	lsls	r3, r3, #8
1000d6f0:	4313      	orrs	r3, r2
1000d6f2:	80ab      	strh	r3, [r5, #4]
1000d6f4:	794b      	ldrb	r3, [r1, #5]
1000d6f6:	790a      	ldrb	r2, [r1, #4]
1000d6f8:	021b      	lsls	r3, r3, #8
1000d6fa:	4313      	orrs	r3, r2
1000d6fc:	80eb      	strh	r3, [r5, #6]
1000d6fe:	798e      	ldrb	r6, [r1, #6]
1000d700:	4b05      	ldr	r3, [pc, #20]	; (1000d718 <gattc_disc_svc_incl_ind_parser+0x40>)
1000d702:	1c30      	adds	r0, r6, #0
1000d704:	1c0c      	adds	r4, r1, #0
1000d706:	4798      	blx	r3
1000d708:	7228      	strb	r0, [r5, #8]
1000d70a:	1c28      	adds	r0, r5, #0
1000d70c:	1c32      	adds	r2, r6, #0
1000d70e:	1de1      	adds	r1, r4, #7
1000d710:	4b02      	ldr	r3, [pc, #8]	; (1000d71c <gattc_disc_svc_incl_ind_parser+0x44>)
1000d712:	3009      	adds	r0, #9
1000d714:	4798      	blx	r3
1000d716:	bd70      	pop	{r4, r5, r6, pc}
1000d718:	1000bcdd 	.word	0x1000bcdd
1000d71c:	1000eacb 	.word	0x1000eacb

1000d720 <gattc_disc_char_ind_parser>:
1000d720:	b570      	push	{r4, r5, r6, lr}
1000d722:	1c15      	adds	r5, r2, #0
1000d724:	0a00      	lsrs	r0, r0, #8
1000d726:	8010      	strh	r0, [r2, #0]
1000d728:	784b      	ldrb	r3, [r1, #1]
1000d72a:	780a      	ldrb	r2, [r1, #0]
1000d72c:	021b      	lsls	r3, r3, #8
1000d72e:	4313      	orrs	r3, r2
1000d730:	806b      	strh	r3, [r5, #2]
1000d732:	78cb      	ldrb	r3, [r1, #3]
1000d734:	788a      	ldrb	r2, [r1, #2]
1000d736:	021b      	lsls	r3, r3, #8
1000d738:	4313      	orrs	r3, r2
1000d73a:	80ab      	strh	r3, [r5, #4]
1000d73c:	790b      	ldrb	r3, [r1, #4]
1000d73e:	1c0c      	adds	r4, r1, #0
1000d740:	71ab      	strb	r3, [r5, #6]
1000d742:	794e      	ldrb	r6, [r1, #5]
1000d744:	4b05      	ldr	r3, [pc, #20]	; (1000d75c <gattc_disc_char_ind_parser+0x3c>)
1000d746:	1c30      	adds	r0, r6, #0
1000d748:	4798      	blx	r3
1000d74a:	71e8      	strb	r0, [r5, #7]
1000d74c:	1c28      	adds	r0, r5, #0
1000d74e:	1c32      	adds	r2, r6, #0
1000d750:	1da1      	adds	r1, r4, #6
1000d752:	4b03      	ldr	r3, [pc, #12]	; (1000d760 <gattc_disc_char_ind_parser+0x40>)
1000d754:	3008      	adds	r0, #8
1000d756:	4798      	blx	r3
1000d758:	bd70      	pop	{r4, r5, r6, pc}
1000d75a:	46c0      	nop			; (mov r8, r8)
1000d75c:	1000bcdd 	.word	0x1000bcdd
1000d760:	1000eacb 	.word	0x1000eacb

1000d764 <gattc_disc_char_desc_ind_parser>:
1000d764:	b570      	push	{r4, r5, r6, lr}
1000d766:	1c15      	adds	r5, r2, #0
1000d768:	0a00      	lsrs	r0, r0, #8
1000d76a:	8010      	strh	r0, [r2, #0]
1000d76c:	784b      	ldrb	r3, [r1, #1]
1000d76e:	780a      	ldrb	r2, [r1, #0]
1000d770:	021b      	lsls	r3, r3, #8
1000d772:	4313      	orrs	r3, r2
1000d774:	806b      	strh	r3, [r5, #2]
1000d776:	788e      	ldrb	r6, [r1, #2]
1000d778:	4b05      	ldr	r3, [pc, #20]	; (1000d790 <gattc_disc_char_desc_ind_parser+0x2c>)
1000d77a:	1c30      	adds	r0, r6, #0
1000d77c:	1c0c      	adds	r4, r1, #0
1000d77e:	4798      	blx	r3
1000d780:	1c32      	adds	r2, r6, #0
1000d782:	7128      	strb	r0, [r5, #4]
1000d784:	1ce1      	adds	r1, r4, #3
1000d786:	1d68      	adds	r0, r5, #5
1000d788:	4b02      	ldr	r3, [pc, #8]	; (1000d794 <gattc_disc_char_desc_ind_parser+0x30>)
1000d78a:	4798      	blx	r3
1000d78c:	bd70      	pop	{r4, r5, r6, pc}
1000d78e:	46c0      	nop			; (mov r8, r8)
1000d790:	1000bcdd 	.word	0x1000bcdd
1000d794:	1000eacb 	.word	0x1000eacb

1000d798 <gattc_event_ind_and_notification_parser>:
1000d798:	b510      	push	{r4, lr}
1000d79a:	780c      	ldrb	r4, [r1, #0]
1000d79c:	1c13      	adds	r3, r2, #0
1000d79e:	2c12      	cmp	r4, #18
1000d7a0:	d10e      	bne.n	1000d7c0 <gattc_event_ind_and_notification_parser+0x28>
1000d7a2:	0a00      	lsrs	r0, r0, #8
1000d7a4:	8010      	strh	r0, [r2, #0]
1000d7a6:	788a      	ldrb	r2, [r1, #2]
1000d7a8:	709a      	strb	r2, [r3, #2]
1000d7aa:	7948      	ldrb	r0, [r1, #5]
1000d7ac:	790c      	ldrb	r4, [r1, #4]
1000d7ae:	0200      	lsls	r0, r0, #8
1000d7b0:	4320      	orrs	r0, r4
1000d7b2:	8098      	strh	r0, [r3, #4]
1000d7b4:	3106      	adds	r1, #6
1000d7b6:	1d98      	adds	r0, r3, #6
1000d7b8:	4b0b      	ldr	r3, [pc, #44]	; (1000d7e8 <gattc_event_ind_and_notification_parser+0x50>)
1000d7ba:	4798      	blx	r3
1000d7bc:	221b      	movs	r2, #27
1000d7be:	e010      	b.n	1000d7e2 <gattc_event_ind_and_notification_parser+0x4a>
1000d7c0:	2200      	movs	r2, #0
1000d7c2:	2c13      	cmp	r4, #19
1000d7c4:	d10d      	bne.n	1000d7e2 <gattc_event_ind_and_notification_parser+0x4a>
1000d7c6:	0a00      	lsrs	r0, r0, #8
1000d7c8:	8018      	strh	r0, [r3, #0]
1000d7ca:	788a      	ldrb	r2, [r1, #2]
1000d7cc:	709a      	strb	r2, [r3, #2]
1000d7ce:	7908      	ldrb	r0, [r1, #4]
1000d7d0:	78cc      	ldrb	r4, [r1, #3]
1000d7d2:	0200      	lsls	r0, r0, #8
1000d7d4:	4320      	orrs	r0, r4
1000d7d6:	8098      	strh	r0, [r3, #4]
1000d7d8:	3106      	adds	r1, #6
1000d7da:	1d98      	adds	r0, r3, #6
1000d7dc:	4b02      	ldr	r3, [pc, #8]	; (1000d7e8 <gattc_event_ind_and_notification_parser+0x50>)
1000d7de:	4798      	blx	r3
1000d7e0:	221c      	movs	r2, #28
1000d7e2:	1c10      	adds	r0, r2, #0
1000d7e4:	bd10      	pop	{r4, pc}
1000d7e6:	46c0      	nop			; (mov r8, r8)
1000d7e8:	1000eacb 	.word	0x1000eacb

1000d7ec <gattc_complete_evt_handler>:
1000d7ec:	b500      	push	{lr}
1000d7ee:	0a00      	lsrs	r0, r0, #8
1000d7f0:	8010      	strh	r0, [r2, #0]
1000d7f2:	7808      	ldrb	r0, [r1, #0]
1000d7f4:	7090      	strb	r0, [r2, #2]
1000d7f6:	784b      	ldrb	r3, [r1, #1]
1000d7f8:	3801      	subs	r0, #1
1000d7fa:	70d3      	strb	r3, [r2, #3]
1000d7fc:	2813      	cmp	r0, #19
1000d7fe:	d82c      	bhi.n	1000d85a <gattc_complete_evt_handler+0x6e>
1000d800:	f000 f91e 	bl	1000da40 <__gnu_thumb1_case_uqi>
1000d804:	0a0a0a0c 	.word	0x0a0a0a0c
1000d808:	210a0a0a 	.word	0x210a0a0a
1000d80c:	111f2121 	.word	0x111f2121
1000d810:	2b111111 	.word	0x2b111111
1000d814:	2919132b 	.word	0x2919132b
1000d818:	2017      	movs	r0, #23
1000d81a:	e01f      	b.n	1000d85c <gattc_complete_evt_handler+0x70>
1000d81c:	2024      	movs	r0, #36	; 0x24
1000d81e:	2b00      	cmp	r3, #0
1000d820:	d11c      	bne.n	1000d85c <gattc_complete_evt_handler+0x70>
1000d822:	3017      	adds	r0, #23
1000d824:	e01a      	b.n	1000d85c <gattc_complete_evt_handler+0x70>
1000d826:	2025      	movs	r0, #37	; 0x25
1000d828:	e018      	b.n	1000d85c <gattc_complete_evt_handler+0x70>
1000d82a:	4a0d      	ldr	r2, [pc, #52]	; (1000d860 <gattc_complete_evt_handler+0x74>)
1000d82c:	201d      	movs	r0, #29
1000d82e:	6813      	ldr	r3, [r2, #0]
1000d830:	3b01      	subs	r3, #1
1000d832:	6013      	str	r3, [r2, #0]
1000d834:	e012      	b.n	1000d85c <gattc_complete_evt_handler+0x70>
1000d836:	4a0a      	ldr	r2, [pc, #40]	; (1000d860 <gattc_complete_evt_handler+0x74>)
1000d838:	201e      	movs	r0, #30
1000d83a:	6813      	ldr	r3, [r2, #0]
1000d83c:	3b01      	subs	r3, #1
1000d83e:	6013      	str	r3, [r2, #0]
1000d840:	e00c      	b.n	1000d85c <gattc_complete_evt_handler+0x70>
1000d842:	2019      	movs	r0, #25
1000d844:	e00a      	b.n	1000d85c <gattc_complete_evt_handler+0x70>
1000d846:	203b      	movs	r0, #59	; 0x3b
1000d848:	2b00      	cmp	r3, #0
1000d84a:	d007      	beq.n	1000d85c <gattc_complete_evt_handler+0x70>
1000d84c:	2182      	movs	r1, #130	; 0x82
1000d84e:	0089      	lsls	r1, r1, #2
1000d850:	5453      	strb	r3, [r2, r1]
1000d852:	3823      	subs	r0, #35	; 0x23
1000d854:	e002      	b.n	1000d85c <gattc_complete_evt_handler+0x70>
1000d856:	2021      	movs	r0, #33	; 0x21
1000d858:	e000      	b.n	1000d85c <gattc_complete_evt_handler+0x70>
1000d85a:	2000      	movs	r0, #0
1000d85c:	bd00      	pop	{pc}
1000d85e:	46c0      	nop			; (mov r8, r8)
1000d860:	10011ecc 	.word	0x10011ecc

1000d864 <gattc_event_mtu_changed_ind_parser>:
1000d864:	0a00      	lsrs	r0, r0, #8
1000d866:	8010      	strh	r0, [r2, #0]
1000d868:	784b      	ldrb	r3, [r1, #1]
1000d86a:	7809      	ldrb	r1, [r1, #0]
1000d86c:	021b      	lsls	r3, r3, #8
1000d86e:	430b      	orrs	r3, r1
1000d870:	8053      	strh	r3, [r2, #2]
1000d872:	4770      	bx	lr

1000d874 <gattc_read_ind_parser>:
1000d874:	0a00      	lsrs	r0, r0, #8
1000d876:	b508      	push	{r3, lr}
1000d878:	8010      	strh	r0, [r2, #0]
1000d87a:	1c13      	adds	r3, r2, #0
1000d87c:	2282      	movs	r2, #130	; 0x82
1000d87e:	2000      	movs	r0, #0
1000d880:	0092      	lsls	r2, r2, #2
1000d882:	5498      	strb	r0, [r3, r2]
1000d884:	784a      	ldrb	r2, [r1, #1]
1000d886:	7808      	ldrb	r0, [r1, #0]
1000d888:	0212      	lsls	r2, r2, #8
1000d88a:	4302      	orrs	r2, r0
1000d88c:	805a      	strh	r2, [r3, #2]
1000d88e:	78ca      	ldrb	r2, [r1, #3]
1000d890:	7888      	ldrb	r0, [r1, #2]
1000d892:	0212      	lsls	r2, r2, #8
1000d894:	4302      	orrs	r2, r0
1000d896:	80da      	strh	r2, [r3, #6]
1000d898:	794a      	ldrb	r2, [r1, #5]
1000d89a:	7908      	ldrb	r0, [r1, #4]
1000d89c:	0212      	lsls	r2, r2, #8
1000d89e:	4302      	orrs	r2, r0
1000d8a0:	809a      	strh	r2, [r3, #4]
1000d8a2:	3308      	adds	r3, #8
1000d8a4:	1c18      	adds	r0, r3, #0
1000d8a6:	3106      	adds	r1, #6
1000d8a8:	4b01      	ldr	r3, [pc, #4]	; (1000d8b0 <gattc_read_ind_parser+0x3c>)
1000d8aa:	4798      	blx	r3
1000d8ac:	bd08      	pop	{r3, pc}
1000d8ae:	46c0      	nop			; (mov r8, r8)
1000d8b0:	1000eacb 	.word	0x1000eacb

1000d8b4 <gattc_svc_changed_cfg_ind_parser>:
1000d8b4:	0a00      	lsrs	r0, r0, #8
1000d8b6:	8010      	strh	r0, [r2, #0]
1000d8b8:	784b      	ldrb	r3, [r1, #1]
1000d8ba:	7809      	ldrb	r1, [r1, #0]
1000d8bc:	021b      	lsls	r3, r3, #8
1000d8be:	430b      	orrs	r3, r1
1000d8c0:	8053      	strh	r3, [r2, #2]
1000d8c2:	4770      	bx	lr

1000d8c4 <init_gattc_task_module>:
1000d8c4:	2300      	movs	r3, #0
1000d8c6:	4a02      	ldr	r2, [pc, #8]	; (1000d8d0 <init_gattc_task_module+0xc>)
1000d8c8:	8013      	strh	r3, [r2, #0]
1000d8ca:	4a02      	ldr	r2, [pc, #8]	; (1000d8d4 <init_gattc_task_module+0x10>)
1000d8cc:	8013      	strh	r3, [r2, #0]
1000d8ce:	4770      	bx	lr
1000d8d0:	10011ec6 	.word	0x10011ec6
1000d8d4:	10011ec8 	.word	0x10011ec8

1000d8d8 <gattm_att_set_value_req_handler>:
1000d8d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000d8da:	466b      	mov	r3, sp
1000d8dc:	1dde      	adds	r6, r3, #7
1000d8de:	2300      	movs	r3, #0
1000d8e0:	1c0d      	adds	r5, r1, #0
1000d8e2:	210c      	movs	r1, #12
1000d8e4:	270b      	movs	r7, #11
1000d8e6:	4c17      	ldr	r4, [pc, #92]	; (1000d944 <gattm_att_set_value_req_handler+0x6c>)
1000d8e8:	7033      	strb	r3, [r6, #0]
1000d8ea:	70e3      	strb	r3, [r4, #3]
1000d8ec:	4b16      	ldr	r3, [pc, #88]	; (1000d948 <gattm_att_set_value_req_handler+0x70>)
1000d8ee:	7021      	strb	r1, [r4, #0]
1000d8f0:	8819      	ldrh	r1, [r3, #0]
1000d8f2:	881b      	ldrh	r3, [r3, #0]
1000d8f4:	7220      	strb	r0, [r4, #8]
1000d8f6:	0a1b      	lsrs	r3, r3, #8
1000d8f8:	7163      	strb	r3, [r4, #5]
1000d8fa:	0a00      	lsrs	r0, r0, #8
1000d8fc:	0a2b      	lsrs	r3, r5, #8
1000d8fe:	7121      	strb	r1, [r4, #4]
1000d900:	7260      	strb	r0, [r4, #9]
1000d902:	1c11      	adds	r1, r2, #0
1000d904:	72a5      	strb	r5, [r4, #10]
1000d906:	1c2a      	adds	r2, r5, #0
1000d908:	72e3      	strb	r3, [r4, #11]
1000d90a:	350c      	adds	r5, #12
1000d90c:	4b0f      	ldr	r3, [pc, #60]	; (1000d94c <gattm_att_set_value_req_handler+0x74>)
1000d90e:	4810      	ldr	r0, [pc, #64]	; (1000d950 <gattm_att_set_value_req_handler+0x78>)
1000d910:	7067      	strb	r7, [r4, #1]
1000d912:	70a7      	strb	r7, [r4, #2]
1000d914:	4798      	blx	r3
1000d916:	b2a9      	uxth	r1, r5
1000d918:	4b0e      	ldr	r3, [pc, #56]	; (1000d954 <gattm_att_set_value_req_handler+0x7c>)
1000d91a:	4d0f      	ldr	r5, [pc, #60]	; (1000d958 <gattm_att_set_value_req_handler+0x80>)
1000d91c:	1c20      	adds	r0, r4, #0
1000d91e:	802b      	strh	r3, [r5, #0]
1000d920:	1c0b      	adds	r3, r1, #0
1000d922:	3b08      	subs	r3, #8
1000d924:	71a3      	strb	r3, [r4, #6]
1000d926:	121b      	asrs	r3, r3, #8
1000d928:	71e3      	strb	r3, [r4, #7]
1000d92a:	4b0c      	ldr	r3, [pc, #48]	; (1000d95c <gattm_att_set_value_req_handler+0x84>)
1000d92c:	80af      	strh	r7, [r5, #4]
1000d92e:	4798      	blx	r3
1000d930:	1c30      	adds	r0, r6, #0
1000d932:	4b0b      	ldr	r3, [pc, #44]	; (1000d960 <gattm_att_set_value_req_handler+0x88>)
1000d934:	4798      	blx	r3
1000d936:	7833      	ldrb	r3, [r6, #0]
1000d938:	20e2      	movs	r0, #226	; 0xe2
1000d93a:	2b00      	cmp	r3, #0
1000d93c:	d101      	bne.n	1000d942 <gattm_att_set_value_req_handler+0x6a>
1000d93e:	68ab      	ldr	r3, [r5, #8]
1000d940:	7898      	ldrb	r0, [r3, #2]
1000d942:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1000d944:	10012e30 	.word	0x10012e30
1000d948:	10012ac0 	.word	0x10012ac0
1000d94c:	1000eacb 	.word	0x1000eacb
1000d950:	10012e3c 	.word	0x10012e3c
1000d954:	00000b0d 	.word	0x00000b0d
1000d958:	10012ab4 	.word	0x10012ab4
1000d95c:	1000c2e5 	.word	0x1000c2e5
1000d960:	1000c349 	.word	0x1000c349

1000d964 <gattm_att_get_value_req_handler>:
1000d964:	b5f0      	push	{r4, r5, r6, r7, lr}
1000d966:	b085      	sub	sp, #20
1000d968:	9201      	str	r2, [sp, #4]
1000d96a:	220a      	movs	r2, #10
1000d96c:	1c04      	adds	r4, r0, #0
1000d96e:	481d      	ldr	r0, [pc, #116]	; (1000d9e4 <gattm_att_get_value_req_handler+0x80>)
1000d970:	ab02      	add	r3, sp, #8
1000d972:	1dde      	adds	r6, r3, #7
1000d974:	7002      	strb	r2, [r0, #0]
1000d976:	2300      	movs	r3, #0
1000d978:	220b      	movs	r2, #11
1000d97a:	4d1b      	ldr	r5, [pc, #108]	; (1000d9e8 <gattm_att_get_value_req_handler+0x84>)
1000d97c:	1c0f      	adds	r7, r1, #0
1000d97e:	8829      	ldrh	r1, [r5, #0]
1000d980:	882d      	ldrh	r5, [r5, #0]
1000d982:	7101      	strb	r1, [r0, #4]
1000d984:	0a2d      	lsrs	r5, r5, #8
1000d986:	7145      	strb	r5, [r0, #5]
1000d988:	0a25      	lsrs	r5, r4, #8
1000d98a:	7245      	strb	r5, [r0, #9]
1000d98c:	4917      	ldr	r1, [pc, #92]	; (1000d9ec <gattm_att_get_value_req_handler+0x88>)
1000d98e:	4d18      	ldr	r5, [pc, #96]	; (1000d9f0 <gattm_att_get_value_req_handler+0x8c>)
1000d990:	7033      	strb	r3, [r6, #0]
1000d992:	7042      	strb	r2, [r0, #1]
1000d994:	7082      	strb	r2, [r0, #2]
1000d996:	70c3      	strb	r3, [r0, #3]
1000d998:	8029      	strh	r1, [r5, #0]
1000d99a:	80aa      	strh	r2, [r5, #4]
1000d99c:	71c3      	strb	r3, [r0, #7]
1000d99e:	3a09      	subs	r2, #9
1000d9a0:	210a      	movs	r1, #10
1000d9a2:	4b14      	ldr	r3, [pc, #80]	; (1000d9f4 <gattm_att_get_value_req_handler+0x90>)
1000d9a4:	7182      	strb	r2, [r0, #6]
1000d9a6:	7204      	strb	r4, [r0, #8]
1000d9a8:	4798      	blx	r3
1000d9aa:	1c30      	adds	r0, r6, #0
1000d9ac:	4b12      	ldr	r3, [pc, #72]	; (1000d9f8 <gattm_att_get_value_req_handler+0x94>)
1000d9ae:	4798      	blx	r3
1000d9b0:	7833      	ldrb	r3, [r6, #0]
1000d9b2:	20e2      	movs	r0, #226	; 0xe2
1000d9b4:	2b00      	cmp	r3, #0
1000d9b6:	d112      	bne.n	1000d9de <gattm_att_get_value_req_handler+0x7a>
1000d9b8:	68a9      	ldr	r1, [r5, #8]
1000d9ba:	9801      	ldr	r0, [sp, #4]
1000d9bc:	784d      	ldrb	r5, [r1, #1]
1000d9be:	780b      	ldrb	r3, [r1, #0]
1000d9c0:	78ca      	ldrb	r2, [r1, #3]
1000d9c2:	022d      	lsls	r5, r5, #8
1000d9c4:	431d      	orrs	r5, r3
1000d9c6:	788b      	ldrb	r3, [r1, #2]
1000d9c8:	0212      	lsls	r2, r2, #8
1000d9ca:	431a      	orrs	r2, r3
1000d9cc:	803a      	strh	r2, [r7, #0]
1000d9ce:	790e      	ldrb	r6, [r1, #4]
1000d9d0:	4b0a      	ldr	r3, [pc, #40]	; (1000d9fc <gattm_att_get_value_req_handler+0x98>)
1000d9d2:	3105      	adds	r1, #5
1000d9d4:	4798      	blx	r3
1000d9d6:	20e2      	movs	r0, #226	; 0xe2
1000d9d8:	42ac      	cmp	r4, r5
1000d9da:	d100      	bne.n	1000d9de <gattm_att_get_value_req_handler+0x7a>
1000d9dc:	1c30      	adds	r0, r6, #0
1000d9de:	b005      	add	sp, #20
1000d9e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000d9e2:	46c0      	nop			; (mov r8, r8)
1000d9e4:	10012e30 	.word	0x10012e30
1000d9e8:	10012ac0 	.word	0x10012ac0
1000d9ec:	00000b0b 	.word	0x00000b0b
1000d9f0:	10012ab4 	.word	0x10012ab4
1000d9f4:	1000c2e5 	.word	0x1000c2e5
1000d9f8:	1000c349 	.word	0x1000c349
1000d9fc:	1000eacb 	.word	0x1000eacb

1000da00 <htpt_enable_rsp_handler>:
1000da00:	780b      	ldrb	r3, [r1, #0]
1000da02:	7013      	strb	r3, [r2, #0]
1000da04:	784b      	ldrb	r3, [r1, #1]
1000da06:	7053      	strb	r3, [r2, #1]
1000da08:	4770      	bx	lr

1000da0a <htpt_temp_send_rsp_handler>:
1000da0a:	780b      	ldrb	r3, [r1, #0]
1000da0c:	7013      	strb	r3, [r2, #0]
1000da0e:	4770      	bx	lr

1000da10 <htpt_meas_intv_upd_rsp_handler>:
1000da10:	780b      	ldrb	r3, [r1, #0]
1000da12:	7013      	strb	r3, [r2, #0]
1000da14:	4770      	bx	lr

1000da16 <htpt_meas_intv_chg_req_ind_handler>:
1000da16:	78cb      	ldrb	r3, [r1, #3]
1000da18:	7889      	ldrb	r1, [r1, #2]
1000da1a:	021b      	lsls	r3, r3, #8
1000da1c:	430b      	orrs	r3, r1
1000da1e:	8013      	strh	r3, [r2, #0]
1000da20:	4770      	bx	lr

1000da22 <htpt_cfg_indntf_ind_handler>:
1000da22:	780b      	ldrb	r3, [r1, #0]
1000da24:	7013      	strb	r3, [r2, #0]
1000da26:	784b      	ldrb	r3, [r1, #1]
1000da28:	7053      	strb	r3, [r2, #1]
1000da2a:	4770      	bx	lr

1000da2c <__gnu_thumb1_case_sqi>:
1000da2c:	b402      	push	{r1}
1000da2e:	4671      	mov	r1, lr
1000da30:	0849      	lsrs	r1, r1, #1
1000da32:	0049      	lsls	r1, r1, #1
1000da34:	5609      	ldrsb	r1, [r1, r0]
1000da36:	0049      	lsls	r1, r1, #1
1000da38:	448e      	add	lr, r1
1000da3a:	bc02      	pop	{r1}
1000da3c:	4770      	bx	lr
1000da3e:	46c0      	nop			; (mov r8, r8)

1000da40 <__gnu_thumb1_case_uqi>:
1000da40:	b402      	push	{r1}
1000da42:	4671      	mov	r1, lr
1000da44:	0849      	lsrs	r1, r1, #1
1000da46:	0049      	lsls	r1, r1, #1
1000da48:	5c09      	ldrb	r1, [r1, r0]
1000da4a:	0049      	lsls	r1, r1, #1
1000da4c:	448e      	add	lr, r1
1000da4e:	bc02      	pop	{r1}
1000da50:	4770      	bx	lr
1000da52:	46c0      	nop			; (mov r8, r8)

1000da54 <__udivsi3>:
1000da54:	2200      	movs	r2, #0
1000da56:	0843      	lsrs	r3, r0, #1
1000da58:	428b      	cmp	r3, r1
1000da5a:	d374      	bcc.n	1000db46 <__udivsi3+0xf2>
1000da5c:	0903      	lsrs	r3, r0, #4
1000da5e:	428b      	cmp	r3, r1
1000da60:	d35f      	bcc.n	1000db22 <__udivsi3+0xce>
1000da62:	0a03      	lsrs	r3, r0, #8
1000da64:	428b      	cmp	r3, r1
1000da66:	d344      	bcc.n	1000daf2 <__udivsi3+0x9e>
1000da68:	0b03      	lsrs	r3, r0, #12
1000da6a:	428b      	cmp	r3, r1
1000da6c:	d328      	bcc.n	1000dac0 <__udivsi3+0x6c>
1000da6e:	0c03      	lsrs	r3, r0, #16
1000da70:	428b      	cmp	r3, r1
1000da72:	d30d      	bcc.n	1000da90 <__udivsi3+0x3c>
1000da74:	22ff      	movs	r2, #255	; 0xff
1000da76:	0209      	lsls	r1, r1, #8
1000da78:	ba12      	rev	r2, r2
1000da7a:	0c03      	lsrs	r3, r0, #16
1000da7c:	428b      	cmp	r3, r1
1000da7e:	d302      	bcc.n	1000da86 <__udivsi3+0x32>
1000da80:	1212      	asrs	r2, r2, #8
1000da82:	0209      	lsls	r1, r1, #8
1000da84:	d065      	beq.n	1000db52 <__udivsi3+0xfe>
1000da86:	0b03      	lsrs	r3, r0, #12
1000da88:	428b      	cmp	r3, r1
1000da8a:	d319      	bcc.n	1000dac0 <__udivsi3+0x6c>
1000da8c:	e000      	b.n	1000da90 <__udivsi3+0x3c>
1000da8e:	0a09      	lsrs	r1, r1, #8
1000da90:	0bc3      	lsrs	r3, r0, #15
1000da92:	428b      	cmp	r3, r1
1000da94:	d301      	bcc.n	1000da9a <__udivsi3+0x46>
1000da96:	03cb      	lsls	r3, r1, #15
1000da98:	1ac0      	subs	r0, r0, r3
1000da9a:	4152      	adcs	r2, r2
1000da9c:	0b83      	lsrs	r3, r0, #14
1000da9e:	428b      	cmp	r3, r1
1000daa0:	d301      	bcc.n	1000daa6 <__udivsi3+0x52>
1000daa2:	038b      	lsls	r3, r1, #14
1000daa4:	1ac0      	subs	r0, r0, r3
1000daa6:	4152      	adcs	r2, r2
1000daa8:	0b43      	lsrs	r3, r0, #13
1000daaa:	428b      	cmp	r3, r1
1000daac:	d301      	bcc.n	1000dab2 <__udivsi3+0x5e>
1000daae:	034b      	lsls	r3, r1, #13
1000dab0:	1ac0      	subs	r0, r0, r3
1000dab2:	4152      	adcs	r2, r2
1000dab4:	0b03      	lsrs	r3, r0, #12
1000dab6:	428b      	cmp	r3, r1
1000dab8:	d301      	bcc.n	1000dabe <__udivsi3+0x6a>
1000daba:	030b      	lsls	r3, r1, #12
1000dabc:	1ac0      	subs	r0, r0, r3
1000dabe:	4152      	adcs	r2, r2
1000dac0:	0ac3      	lsrs	r3, r0, #11
1000dac2:	428b      	cmp	r3, r1
1000dac4:	d301      	bcc.n	1000daca <__udivsi3+0x76>
1000dac6:	02cb      	lsls	r3, r1, #11
1000dac8:	1ac0      	subs	r0, r0, r3
1000daca:	4152      	adcs	r2, r2
1000dacc:	0a83      	lsrs	r3, r0, #10
1000dace:	428b      	cmp	r3, r1
1000dad0:	d301      	bcc.n	1000dad6 <__udivsi3+0x82>
1000dad2:	028b      	lsls	r3, r1, #10
1000dad4:	1ac0      	subs	r0, r0, r3
1000dad6:	4152      	adcs	r2, r2
1000dad8:	0a43      	lsrs	r3, r0, #9
1000dada:	428b      	cmp	r3, r1
1000dadc:	d301      	bcc.n	1000dae2 <__udivsi3+0x8e>
1000dade:	024b      	lsls	r3, r1, #9
1000dae0:	1ac0      	subs	r0, r0, r3
1000dae2:	4152      	adcs	r2, r2
1000dae4:	0a03      	lsrs	r3, r0, #8
1000dae6:	428b      	cmp	r3, r1
1000dae8:	d301      	bcc.n	1000daee <__udivsi3+0x9a>
1000daea:	020b      	lsls	r3, r1, #8
1000daec:	1ac0      	subs	r0, r0, r3
1000daee:	4152      	adcs	r2, r2
1000daf0:	d2cd      	bcs.n	1000da8e <__udivsi3+0x3a>
1000daf2:	09c3      	lsrs	r3, r0, #7
1000daf4:	428b      	cmp	r3, r1
1000daf6:	d301      	bcc.n	1000dafc <__udivsi3+0xa8>
1000daf8:	01cb      	lsls	r3, r1, #7
1000dafa:	1ac0      	subs	r0, r0, r3
1000dafc:	4152      	adcs	r2, r2
1000dafe:	0983      	lsrs	r3, r0, #6
1000db00:	428b      	cmp	r3, r1
1000db02:	d301      	bcc.n	1000db08 <__udivsi3+0xb4>
1000db04:	018b      	lsls	r3, r1, #6
1000db06:	1ac0      	subs	r0, r0, r3
1000db08:	4152      	adcs	r2, r2
1000db0a:	0943      	lsrs	r3, r0, #5
1000db0c:	428b      	cmp	r3, r1
1000db0e:	d301      	bcc.n	1000db14 <__udivsi3+0xc0>
1000db10:	014b      	lsls	r3, r1, #5
1000db12:	1ac0      	subs	r0, r0, r3
1000db14:	4152      	adcs	r2, r2
1000db16:	0903      	lsrs	r3, r0, #4
1000db18:	428b      	cmp	r3, r1
1000db1a:	d301      	bcc.n	1000db20 <__udivsi3+0xcc>
1000db1c:	010b      	lsls	r3, r1, #4
1000db1e:	1ac0      	subs	r0, r0, r3
1000db20:	4152      	adcs	r2, r2
1000db22:	08c3      	lsrs	r3, r0, #3
1000db24:	428b      	cmp	r3, r1
1000db26:	d301      	bcc.n	1000db2c <__udivsi3+0xd8>
1000db28:	00cb      	lsls	r3, r1, #3
1000db2a:	1ac0      	subs	r0, r0, r3
1000db2c:	4152      	adcs	r2, r2
1000db2e:	0883      	lsrs	r3, r0, #2
1000db30:	428b      	cmp	r3, r1
1000db32:	d301      	bcc.n	1000db38 <__udivsi3+0xe4>
1000db34:	008b      	lsls	r3, r1, #2
1000db36:	1ac0      	subs	r0, r0, r3
1000db38:	4152      	adcs	r2, r2
1000db3a:	0843      	lsrs	r3, r0, #1
1000db3c:	428b      	cmp	r3, r1
1000db3e:	d301      	bcc.n	1000db44 <__udivsi3+0xf0>
1000db40:	004b      	lsls	r3, r1, #1
1000db42:	1ac0      	subs	r0, r0, r3
1000db44:	4152      	adcs	r2, r2
1000db46:	1a41      	subs	r1, r0, r1
1000db48:	d200      	bcs.n	1000db4c <__udivsi3+0xf8>
1000db4a:	4601      	mov	r1, r0
1000db4c:	4152      	adcs	r2, r2
1000db4e:	4610      	mov	r0, r2
1000db50:	4770      	bx	lr
1000db52:	e7ff      	b.n	1000db54 <__udivsi3+0x100>
1000db54:	b501      	push	{r0, lr}
1000db56:	2000      	movs	r0, #0
1000db58:	f000 f806 	bl	1000db68 <__aeabi_idiv0>
1000db5c:	bd02      	pop	{r1, pc}
1000db5e:	46c0      	nop			; (mov r8, r8)

1000db60 <__aeabi_uidivmod>:
1000db60:	2900      	cmp	r1, #0
1000db62:	d0f7      	beq.n	1000db54 <__udivsi3+0x100>
1000db64:	e776      	b.n	1000da54 <__udivsi3>
1000db66:	4770      	bx	lr

1000db68 <__aeabi_idiv0>:
1000db68:	4770      	bx	lr
1000db6a:	46c0      	nop			; (mov r8, r8)

1000db6c <__aeabi_d2uiz>:
1000db6c:	b570      	push	{r4, r5, r6, lr}
1000db6e:	2200      	movs	r2, #0
1000db70:	4b0c      	ldr	r3, [pc, #48]	; (1000dba4 <__aeabi_d2uiz+0x38>)
1000db72:	0004      	movs	r4, r0
1000db74:	000d      	movs	r5, r1
1000db76:	f000 fe4d 	bl	1000e814 <__aeabi_dcmpge>
1000db7a:	2800      	cmp	r0, #0
1000db7c:	d104      	bne.n	1000db88 <__aeabi_d2uiz+0x1c>
1000db7e:	0020      	movs	r0, r4
1000db80:	0029      	movs	r1, r5
1000db82:	f000 fda7 	bl	1000e6d4 <__aeabi_d2iz>
1000db86:	bd70      	pop	{r4, r5, r6, pc}
1000db88:	4b06      	ldr	r3, [pc, #24]	; (1000dba4 <__aeabi_d2uiz+0x38>)
1000db8a:	2200      	movs	r2, #0
1000db8c:	0020      	movs	r0, r4
1000db8e:	0029      	movs	r1, r5
1000db90:	f000 fa8a 	bl	1000e0a8 <__aeabi_dsub>
1000db94:	f000 fd9e 	bl	1000e6d4 <__aeabi_d2iz>
1000db98:	2380      	movs	r3, #128	; 0x80
1000db9a:	061b      	lsls	r3, r3, #24
1000db9c:	469c      	mov	ip, r3
1000db9e:	4460      	add	r0, ip
1000dba0:	e7f1      	b.n	1000db86 <__aeabi_d2uiz+0x1a>
1000dba2:	46c0      	nop			; (mov r8, r8)
1000dba4:	41e00000 	.word	0x41e00000

1000dba8 <__aeabi_dmul>:
1000dba8:	b5f0      	push	{r4, r5, r6, r7, lr}
1000dbaa:	4657      	mov	r7, sl
1000dbac:	4645      	mov	r5, r8
1000dbae:	46de      	mov	lr, fp
1000dbb0:	464e      	mov	r6, r9
1000dbb2:	b5e0      	push	{r5, r6, r7, lr}
1000dbb4:	030c      	lsls	r4, r1, #12
1000dbb6:	4698      	mov	r8, r3
1000dbb8:	004e      	lsls	r6, r1, #1
1000dbba:	0b23      	lsrs	r3, r4, #12
1000dbbc:	b087      	sub	sp, #28
1000dbbe:	0007      	movs	r7, r0
1000dbc0:	4692      	mov	sl, r2
1000dbc2:	469b      	mov	fp, r3
1000dbc4:	0d76      	lsrs	r6, r6, #21
1000dbc6:	0fcd      	lsrs	r5, r1, #31
1000dbc8:	2e00      	cmp	r6, #0
1000dbca:	d06b      	beq.n	1000dca4 <__aeabi_dmul+0xfc>
1000dbcc:	4b6d      	ldr	r3, [pc, #436]	; (1000dd84 <__aeabi_dmul+0x1dc>)
1000dbce:	429e      	cmp	r6, r3
1000dbd0:	d035      	beq.n	1000dc3e <__aeabi_dmul+0x96>
1000dbd2:	2480      	movs	r4, #128	; 0x80
1000dbd4:	465b      	mov	r3, fp
1000dbd6:	0f42      	lsrs	r2, r0, #29
1000dbd8:	0424      	lsls	r4, r4, #16
1000dbda:	00db      	lsls	r3, r3, #3
1000dbdc:	4314      	orrs	r4, r2
1000dbde:	431c      	orrs	r4, r3
1000dbe0:	00c3      	lsls	r3, r0, #3
1000dbe2:	4699      	mov	r9, r3
1000dbe4:	4b68      	ldr	r3, [pc, #416]	; (1000dd88 <__aeabi_dmul+0x1e0>)
1000dbe6:	46a3      	mov	fp, r4
1000dbe8:	469c      	mov	ip, r3
1000dbea:	2300      	movs	r3, #0
1000dbec:	2700      	movs	r7, #0
1000dbee:	4466      	add	r6, ip
1000dbf0:	9302      	str	r3, [sp, #8]
1000dbf2:	4643      	mov	r3, r8
1000dbf4:	031c      	lsls	r4, r3, #12
1000dbf6:	005a      	lsls	r2, r3, #1
1000dbf8:	0fdb      	lsrs	r3, r3, #31
1000dbfa:	4650      	mov	r0, sl
1000dbfc:	0b24      	lsrs	r4, r4, #12
1000dbfe:	0d52      	lsrs	r2, r2, #21
1000dc00:	4698      	mov	r8, r3
1000dc02:	d100      	bne.n	1000dc06 <__aeabi_dmul+0x5e>
1000dc04:	e076      	b.n	1000dcf4 <__aeabi_dmul+0x14c>
1000dc06:	4b5f      	ldr	r3, [pc, #380]	; (1000dd84 <__aeabi_dmul+0x1dc>)
1000dc08:	429a      	cmp	r2, r3
1000dc0a:	d06d      	beq.n	1000dce8 <__aeabi_dmul+0x140>
1000dc0c:	2380      	movs	r3, #128	; 0x80
1000dc0e:	0f41      	lsrs	r1, r0, #29
1000dc10:	041b      	lsls	r3, r3, #16
1000dc12:	430b      	orrs	r3, r1
1000dc14:	495c      	ldr	r1, [pc, #368]	; (1000dd88 <__aeabi_dmul+0x1e0>)
1000dc16:	00e4      	lsls	r4, r4, #3
1000dc18:	468c      	mov	ip, r1
1000dc1a:	431c      	orrs	r4, r3
1000dc1c:	00c3      	lsls	r3, r0, #3
1000dc1e:	2000      	movs	r0, #0
1000dc20:	4462      	add	r2, ip
1000dc22:	4641      	mov	r1, r8
1000dc24:	18b6      	adds	r6, r6, r2
1000dc26:	4069      	eors	r1, r5
1000dc28:	1c72      	adds	r2, r6, #1
1000dc2a:	9101      	str	r1, [sp, #4]
1000dc2c:	4694      	mov	ip, r2
1000dc2e:	4307      	orrs	r7, r0
1000dc30:	2f0f      	cmp	r7, #15
1000dc32:	d900      	bls.n	1000dc36 <__aeabi_dmul+0x8e>
1000dc34:	e0b0      	b.n	1000dd98 <__aeabi_dmul+0x1f0>
1000dc36:	4a55      	ldr	r2, [pc, #340]	; (1000dd8c <__aeabi_dmul+0x1e4>)
1000dc38:	00bf      	lsls	r7, r7, #2
1000dc3a:	59d2      	ldr	r2, [r2, r7]
1000dc3c:	4697      	mov	pc, r2
1000dc3e:	465b      	mov	r3, fp
1000dc40:	4303      	orrs	r3, r0
1000dc42:	4699      	mov	r9, r3
1000dc44:	d000      	beq.n	1000dc48 <__aeabi_dmul+0xa0>
1000dc46:	e087      	b.n	1000dd58 <__aeabi_dmul+0x1b0>
1000dc48:	2300      	movs	r3, #0
1000dc4a:	469b      	mov	fp, r3
1000dc4c:	3302      	adds	r3, #2
1000dc4e:	2708      	movs	r7, #8
1000dc50:	9302      	str	r3, [sp, #8]
1000dc52:	e7ce      	b.n	1000dbf2 <__aeabi_dmul+0x4a>
1000dc54:	4642      	mov	r2, r8
1000dc56:	9201      	str	r2, [sp, #4]
1000dc58:	2802      	cmp	r0, #2
1000dc5a:	d067      	beq.n	1000dd2c <__aeabi_dmul+0x184>
1000dc5c:	2803      	cmp	r0, #3
1000dc5e:	d100      	bne.n	1000dc62 <__aeabi_dmul+0xba>
1000dc60:	e20e      	b.n	1000e080 <__aeabi_dmul+0x4d8>
1000dc62:	2801      	cmp	r0, #1
1000dc64:	d000      	beq.n	1000dc68 <__aeabi_dmul+0xc0>
1000dc66:	e162      	b.n	1000df2e <__aeabi_dmul+0x386>
1000dc68:	2300      	movs	r3, #0
1000dc6a:	2400      	movs	r4, #0
1000dc6c:	2200      	movs	r2, #0
1000dc6e:	4699      	mov	r9, r3
1000dc70:	9901      	ldr	r1, [sp, #4]
1000dc72:	4001      	ands	r1, r0
1000dc74:	b2cd      	uxtb	r5, r1
1000dc76:	2100      	movs	r1, #0
1000dc78:	0312      	lsls	r2, r2, #12
1000dc7a:	0d0b      	lsrs	r3, r1, #20
1000dc7c:	0b12      	lsrs	r2, r2, #12
1000dc7e:	051b      	lsls	r3, r3, #20
1000dc80:	4313      	orrs	r3, r2
1000dc82:	4a43      	ldr	r2, [pc, #268]	; (1000dd90 <__aeabi_dmul+0x1e8>)
1000dc84:	0524      	lsls	r4, r4, #20
1000dc86:	4013      	ands	r3, r2
1000dc88:	431c      	orrs	r4, r3
1000dc8a:	0064      	lsls	r4, r4, #1
1000dc8c:	07ed      	lsls	r5, r5, #31
1000dc8e:	0864      	lsrs	r4, r4, #1
1000dc90:	432c      	orrs	r4, r5
1000dc92:	4648      	mov	r0, r9
1000dc94:	0021      	movs	r1, r4
1000dc96:	b007      	add	sp, #28
1000dc98:	bc3c      	pop	{r2, r3, r4, r5}
1000dc9a:	4690      	mov	r8, r2
1000dc9c:	4699      	mov	r9, r3
1000dc9e:	46a2      	mov	sl, r4
1000dca0:	46ab      	mov	fp, r5
1000dca2:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000dca4:	4303      	orrs	r3, r0
1000dca6:	4699      	mov	r9, r3
1000dca8:	d04f      	beq.n	1000dd4a <__aeabi_dmul+0x1a2>
1000dcaa:	465b      	mov	r3, fp
1000dcac:	2b00      	cmp	r3, #0
1000dcae:	d100      	bne.n	1000dcb2 <__aeabi_dmul+0x10a>
1000dcb0:	e189      	b.n	1000dfc6 <__aeabi_dmul+0x41e>
1000dcb2:	4658      	mov	r0, fp
1000dcb4:	f000 fdb8 	bl	1000e828 <__clzsi2>
1000dcb8:	0003      	movs	r3, r0
1000dcba:	3b0b      	subs	r3, #11
1000dcbc:	2b1c      	cmp	r3, #28
1000dcbe:	dd00      	ble.n	1000dcc2 <__aeabi_dmul+0x11a>
1000dcc0:	e17a      	b.n	1000dfb8 <__aeabi_dmul+0x410>
1000dcc2:	221d      	movs	r2, #29
1000dcc4:	1ad3      	subs	r3, r2, r3
1000dcc6:	003a      	movs	r2, r7
1000dcc8:	0001      	movs	r1, r0
1000dcca:	465c      	mov	r4, fp
1000dccc:	40da      	lsrs	r2, r3
1000dcce:	3908      	subs	r1, #8
1000dcd0:	408c      	lsls	r4, r1
1000dcd2:	0013      	movs	r3, r2
1000dcd4:	408f      	lsls	r7, r1
1000dcd6:	4323      	orrs	r3, r4
1000dcd8:	469b      	mov	fp, r3
1000dcda:	46b9      	mov	r9, r7
1000dcdc:	2300      	movs	r3, #0
1000dcde:	4e2d      	ldr	r6, [pc, #180]	; (1000dd94 <__aeabi_dmul+0x1ec>)
1000dce0:	2700      	movs	r7, #0
1000dce2:	1a36      	subs	r6, r6, r0
1000dce4:	9302      	str	r3, [sp, #8]
1000dce6:	e784      	b.n	1000dbf2 <__aeabi_dmul+0x4a>
1000dce8:	4653      	mov	r3, sl
1000dcea:	4323      	orrs	r3, r4
1000dcec:	d12a      	bne.n	1000dd44 <__aeabi_dmul+0x19c>
1000dcee:	2400      	movs	r4, #0
1000dcf0:	2002      	movs	r0, #2
1000dcf2:	e796      	b.n	1000dc22 <__aeabi_dmul+0x7a>
1000dcf4:	4653      	mov	r3, sl
1000dcf6:	4323      	orrs	r3, r4
1000dcf8:	d020      	beq.n	1000dd3c <__aeabi_dmul+0x194>
1000dcfa:	2c00      	cmp	r4, #0
1000dcfc:	d100      	bne.n	1000dd00 <__aeabi_dmul+0x158>
1000dcfe:	e157      	b.n	1000dfb0 <__aeabi_dmul+0x408>
1000dd00:	0020      	movs	r0, r4
1000dd02:	f000 fd91 	bl	1000e828 <__clzsi2>
1000dd06:	0003      	movs	r3, r0
1000dd08:	3b0b      	subs	r3, #11
1000dd0a:	2b1c      	cmp	r3, #28
1000dd0c:	dd00      	ble.n	1000dd10 <__aeabi_dmul+0x168>
1000dd0e:	e149      	b.n	1000dfa4 <__aeabi_dmul+0x3fc>
1000dd10:	211d      	movs	r1, #29
1000dd12:	1acb      	subs	r3, r1, r3
1000dd14:	4651      	mov	r1, sl
1000dd16:	0002      	movs	r2, r0
1000dd18:	40d9      	lsrs	r1, r3
1000dd1a:	4653      	mov	r3, sl
1000dd1c:	3a08      	subs	r2, #8
1000dd1e:	4094      	lsls	r4, r2
1000dd20:	4093      	lsls	r3, r2
1000dd22:	430c      	orrs	r4, r1
1000dd24:	4a1b      	ldr	r2, [pc, #108]	; (1000dd94 <__aeabi_dmul+0x1ec>)
1000dd26:	1a12      	subs	r2, r2, r0
1000dd28:	2000      	movs	r0, #0
1000dd2a:	e77a      	b.n	1000dc22 <__aeabi_dmul+0x7a>
1000dd2c:	2501      	movs	r5, #1
1000dd2e:	9b01      	ldr	r3, [sp, #4]
1000dd30:	4c14      	ldr	r4, [pc, #80]	; (1000dd84 <__aeabi_dmul+0x1dc>)
1000dd32:	401d      	ands	r5, r3
1000dd34:	2300      	movs	r3, #0
1000dd36:	2200      	movs	r2, #0
1000dd38:	4699      	mov	r9, r3
1000dd3a:	e79c      	b.n	1000dc76 <__aeabi_dmul+0xce>
1000dd3c:	2400      	movs	r4, #0
1000dd3e:	2200      	movs	r2, #0
1000dd40:	2001      	movs	r0, #1
1000dd42:	e76e      	b.n	1000dc22 <__aeabi_dmul+0x7a>
1000dd44:	4653      	mov	r3, sl
1000dd46:	2003      	movs	r0, #3
1000dd48:	e76b      	b.n	1000dc22 <__aeabi_dmul+0x7a>
1000dd4a:	2300      	movs	r3, #0
1000dd4c:	469b      	mov	fp, r3
1000dd4e:	3301      	adds	r3, #1
1000dd50:	2704      	movs	r7, #4
1000dd52:	2600      	movs	r6, #0
1000dd54:	9302      	str	r3, [sp, #8]
1000dd56:	e74c      	b.n	1000dbf2 <__aeabi_dmul+0x4a>
1000dd58:	2303      	movs	r3, #3
1000dd5a:	4681      	mov	r9, r0
1000dd5c:	270c      	movs	r7, #12
1000dd5e:	9302      	str	r3, [sp, #8]
1000dd60:	e747      	b.n	1000dbf2 <__aeabi_dmul+0x4a>
1000dd62:	2280      	movs	r2, #128	; 0x80
1000dd64:	2300      	movs	r3, #0
1000dd66:	2500      	movs	r5, #0
1000dd68:	0312      	lsls	r2, r2, #12
1000dd6a:	4699      	mov	r9, r3
1000dd6c:	4c05      	ldr	r4, [pc, #20]	; (1000dd84 <__aeabi_dmul+0x1dc>)
1000dd6e:	e782      	b.n	1000dc76 <__aeabi_dmul+0xce>
1000dd70:	465c      	mov	r4, fp
1000dd72:	464b      	mov	r3, r9
1000dd74:	9802      	ldr	r0, [sp, #8]
1000dd76:	e76f      	b.n	1000dc58 <__aeabi_dmul+0xb0>
1000dd78:	465c      	mov	r4, fp
1000dd7a:	464b      	mov	r3, r9
1000dd7c:	9501      	str	r5, [sp, #4]
1000dd7e:	9802      	ldr	r0, [sp, #8]
1000dd80:	e76a      	b.n	1000dc58 <__aeabi_dmul+0xb0>
1000dd82:	46c0      	nop			; (mov r8, r8)
1000dd84:	000007ff 	.word	0x000007ff
1000dd88:	fffffc01 	.word	0xfffffc01
1000dd8c:	10010798 	.word	0x10010798
1000dd90:	800fffff 	.word	0x800fffff
1000dd94:	fffffc0d 	.word	0xfffffc0d
1000dd98:	464a      	mov	r2, r9
1000dd9a:	4649      	mov	r1, r9
1000dd9c:	0c17      	lsrs	r7, r2, #16
1000dd9e:	0c1a      	lsrs	r2, r3, #16
1000dda0:	041b      	lsls	r3, r3, #16
1000dda2:	0c1b      	lsrs	r3, r3, #16
1000dda4:	0408      	lsls	r0, r1, #16
1000dda6:	0019      	movs	r1, r3
1000dda8:	0c00      	lsrs	r0, r0, #16
1000ddaa:	4341      	muls	r1, r0
1000ddac:	0015      	movs	r5, r2
1000ddae:	4688      	mov	r8, r1
1000ddb0:	0019      	movs	r1, r3
1000ddb2:	437d      	muls	r5, r7
1000ddb4:	4379      	muls	r1, r7
1000ddb6:	9503      	str	r5, [sp, #12]
1000ddb8:	4689      	mov	r9, r1
1000ddba:	0029      	movs	r1, r5
1000ddbc:	0015      	movs	r5, r2
1000ddbe:	4345      	muls	r5, r0
1000ddc0:	444d      	add	r5, r9
1000ddc2:	9502      	str	r5, [sp, #8]
1000ddc4:	4645      	mov	r5, r8
1000ddc6:	0c2d      	lsrs	r5, r5, #16
1000ddc8:	46aa      	mov	sl, r5
1000ddca:	9d02      	ldr	r5, [sp, #8]
1000ddcc:	4455      	add	r5, sl
1000ddce:	45a9      	cmp	r9, r5
1000ddd0:	d906      	bls.n	1000dde0 <__aeabi_dmul+0x238>
1000ddd2:	468a      	mov	sl, r1
1000ddd4:	2180      	movs	r1, #128	; 0x80
1000ddd6:	0249      	lsls	r1, r1, #9
1000ddd8:	4689      	mov	r9, r1
1000ddda:	44ca      	add	sl, r9
1000dddc:	4651      	mov	r1, sl
1000ddde:	9103      	str	r1, [sp, #12]
1000dde0:	0c29      	lsrs	r1, r5, #16
1000dde2:	9104      	str	r1, [sp, #16]
1000dde4:	4641      	mov	r1, r8
1000dde6:	0409      	lsls	r1, r1, #16
1000dde8:	042d      	lsls	r5, r5, #16
1000ddea:	0c09      	lsrs	r1, r1, #16
1000ddec:	4688      	mov	r8, r1
1000ddee:	0029      	movs	r1, r5
1000ddf0:	0c25      	lsrs	r5, r4, #16
1000ddf2:	0424      	lsls	r4, r4, #16
1000ddf4:	4441      	add	r1, r8
1000ddf6:	0c24      	lsrs	r4, r4, #16
1000ddf8:	9105      	str	r1, [sp, #20]
1000ddfa:	0021      	movs	r1, r4
1000ddfc:	4341      	muls	r1, r0
1000ddfe:	4688      	mov	r8, r1
1000de00:	0021      	movs	r1, r4
1000de02:	4379      	muls	r1, r7
1000de04:	468a      	mov	sl, r1
1000de06:	4368      	muls	r0, r5
1000de08:	4641      	mov	r1, r8
1000de0a:	4450      	add	r0, sl
1000de0c:	4681      	mov	r9, r0
1000de0e:	0c08      	lsrs	r0, r1, #16
1000de10:	4448      	add	r0, r9
1000de12:	436f      	muls	r7, r5
1000de14:	4582      	cmp	sl, r0
1000de16:	d903      	bls.n	1000de20 <__aeabi_dmul+0x278>
1000de18:	2180      	movs	r1, #128	; 0x80
1000de1a:	0249      	lsls	r1, r1, #9
1000de1c:	4689      	mov	r9, r1
1000de1e:	444f      	add	r7, r9
1000de20:	0c01      	lsrs	r1, r0, #16
1000de22:	4689      	mov	r9, r1
1000de24:	0039      	movs	r1, r7
1000de26:	4449      	add	r1, r9
1000de28:	9102      	str	r1, [sp, #8]
1000de2a:	4641      	mov	r1, r8
1000de2c:	040f      	lsls	r7, r1, #16
1000de2e:	9904      	ldr	r1, [sp, #16]
1000de30:	0c3f      	lsrs	r7, r7, #16
1000de32:	4688      	mov	r8, r1
1000de34:	0400      	lsls	r0, r0, #16
1000de36:	19c0      	adds	r0, r0, r7
1000de38:	4480      	add	r8, r0
1000de3a:	4641      	mov	r1, r8
1000de3c:	9104      	str	r1, [sp, #16]
1000de3e:	4659      	mov	r1, fp
1000de40:	0c0f      	lsrs	r7, r1, #16
1000de42:	0409      	lsls	r1, r1, #16
1000de44:	0c09      	lsrs	r1, r1, #16
1000de46:	4688      	mov	r8, r1
1000de48:	4359      	muls	r1, r3
1000de4a:	468a      	mov	sl, r1
1000de4c:	0039      	movs	r1, r7
1000de4e:	4351      	muls	r1, r2
1000de50:	4689      	mov	r9, r1
1000de52:	4641      	mov	r1, r8
1000de54:	434a      	muls	r2, r1
1000de56:	4651      	mov	r1, sl
1000de58:	0c09      	lsrs	r1, r1, #16
1000de5a:	468b      	mov	fp, r1
1000de5c:	437b      	muls	r3, r7
1000de5e:	18d2      	adds	r2, r2, r3
1000de60:	445a      	add	r2, fp
1000de62:	4293      	cmp	r3, r2
1000de64:	d903      	bls.n	1000de6e <__aeabi_dmul+0x2c6>
1000de66:	2380      	movs	r3, #128	; 0x80
1000de68:	025b      	lsls	r3, r3, #9
1000de6a:	469b      	mov	fp, r3
1000de6c:	44d9      	add	r9, fp
1000de6e:	4651      	mov	r1, sl
1000de70:	0409      	lsls	r1, r1, #16
1000de72:	0c09      	lsrs	r1, r1, #16
1000de74:	468a      	mov	sl, r1
1000de76:	4641      	mov	r1, r8
1000de78:	4361      	muls	r1, r4
1000de7a:	437c      	muls	r4, r7
1000de7c:	0c13      	lsrs	r3, r2, #16
1000de7e:	0412      	lsls	r2, r2, #16
1000de80:	444b      	add	r3, r9
1000de82:	4452      	add	r2, sl
1000de84:	46a1      	mov	r9, r4
1000de86:	468a      	mov	sl, r1
1000de88:	003c      	movs	r4, r7
1000de8a:	4641      	mov	r1, r8
1000de8c:	436c      	muls	r4, r5
1000de8e:	434d      	muls	r5, r1
1000de90:	4651      	mov	r1, sl
1000de92:	444d      	add	r5, r9
1000de94:	0c0f      	lsrs	r7, r1, #16
1000de96:	197d      	adds	r5, r7, r5
1000de98:	45a9      	cmp	r9, r5
1000de9a:	d903      	bls.n	1000dea4 <__aeabi_dmul+0x2fc>
1000de9c:	2180      	movs	r1, #128	; 0x80
1000de9e:	0249      	lsls	r1, r1, #9
1000dea0:	4688      	mov	r8, r1
1000dea2:	4444      	add	r4, r8
1000dea4:	9f04      	ldr	r7, [sp, #16]
1000dea6:	9903      	ldr	r1, [sp, #12]
1000dea8:	46b8      	mov	r8, r7
1000deaa:	4441      	add	r1, r8
1000deac:	468b      	mov	fp, r1
1000deae:	4583      	cmp	fp, r0
1000deb0:	4180      	sbcs	r0, r0
1000deb2:	4241      	negs	r1, r0
1000deb4:	4688      	mov	r8, r1
1000deb6:	4651      	mov	r1, sl
1000deb8:	0408      	lsls	r0, r1, #16
1000deba:	042f      	lsls	r7, r5, #16
1000debc:	0c00      	lsrs	r0, r0, #16
1000debe:	183f      	adds	r7, r7, r0
1000dec0:	4658      	mov	r0, fp
1000dec2:	9902      	ldr	r1, [sp, #8]
1000dec4:	1810      	adds	r0, r2, r0
1000dec6:	4689      	mov	r9, r1
1000dec8:	4290      	cmp	r0, r2
1000deca:	4192      	sbcs	r2, r2
1000decc:	444f      	add	r7, r9
1000dece:	46ba      	mov	sl, r7
1000ded0:	4252      	negs	r2, r2
1000ded2:	4699      	mov	r9, r3
1000ded4:	4693      	mov	fp, r2
1000ded6:	44c2      	add	sl, r8
1000ded8:	44d1      	add	r9, sl
1000deda:	44cb      	add	fp, r9
1000dedc:	428f      	cmp	r7, r1
1000dede:	41bf      	sbcs	r7, r7
1000dee0:	45c2      	cmp	sl, r8
1000dee2:	4189      	sbcs	r1, r1
1000dee4:	4599      	cmp	r9, r3
1000dee6:	419b      	sbcs	r3, r3
1000dee8:	4593      	cmp	fp, r2
1000deea:	4192      	sbcs	r2, r2
1000deec:	427f      	negs	r7, r7
1000deee:	4249      	negs	r1, r1
1000def0:	0c2d      	lsrs	r5, r5, #16
1000def2:	4252      	negs	r2, r2
1000def4:	430f      	orrs	r7, r1
1000def6:	425b      	negs	r3, r3
1000def8:	4313      	orrs	r3, r2
1000defa:	197f      	adds	r7, r7, r5
1000defc:	18ff      	adds	r7, r7, r3
1000defe:	465b      	mov	r3, fp
1000df00:	193c      	adds	r4, r7, r4
1000df02:	0ddb      	lsrs	r3, r3, #23
1000df04:	9a05      	ldr	r2, [sp, #20]
1000df06:	0264      	lsls	r4, r4, #9
1000df08:	431c      	orrs	r4, r3
1000df0a:	0243      	lsls	r3, r0, #9
1000df0c:	4313      	orrs	r3, r2
1000df0e:	1e5d      	subs	r5, r3, #1
1000df10:	41ab      	sbcs	r3, r5
1000df12:	465a      	mov	r2, fp
1000df14:	0dc0      	lsrs	r0, r0, #23
1000df16:	4303      	orrs	r3, r0
1000df18:	0252      	lsls	r2, r2, #9
1000df1a:	4313      	orrs	r3, r2
1000df1c:	01e2      	lsls	r2, r4, #7
1000df1e:	d556      	bpl.n	1000dfce <__aeabi_dmul+0x426>
1000df20:	2001      	movs	r0, #1
1000df22:	085a      	lsrs	r2, r3, #1
1000df24:	4003      	ands	r3, r0
1000df26:	4313      	orrs	r3, r2
1000df28:	07e2      	lsls	r2, r4, #31
1000df2a:	4313      	orrs	r3, r2
1000df2c:	0864      	lsrs	r4, r4, #1
1000df2e:	485a      	ldr	r0, [pc, #360]	; (1000e098 <__aeabi_dmul+0x4f0>)
1000df30:	4460      	add	r0, ip
1000df32:	2800      	cmp	r0, #0
1000df34:	dd4d      	ble.n	1000dfd2 <__aeabi_dmul+0x42a>
1000df36:	075a      	lsls	r2, r3, #29
1000df38:	d009      	beq.n	1000df4e <__aeabi_dmul+0x3a6>
1000df3a:	220f      	movs	r2, #15
1000df3c:	401a      	ands	r2, r3
1000df3e:	2a04      	cmp	r2, #4
1000df40:	d005      	beq.n	1000df4e <__aeabi_dmul+0x3a6>
1000df42:	1d1a      	adds	r2, r3, #4
1000df44:	429a      	cmp	r2, r3
1000df46:	419b      	sbcs	r3, r3
1000df48:	425b      	negs	r3, r3
1000df4a:	18e4      	adds	r4, r4, r3
1000df4c:	0013      	movs	r3, r2
1000df4e:	01e2      	lsls	r2, r4, #7
1000df50:	d504      	bpl.n	1000df5c <__aeabi_dmul+0x3b4>
1000df52:	2080      	movs	r0, #128	; 0x80
1000df54:	4a51      	ldr	r2, [pc, #324]	; (1000e09c <__aeabi_dmul+0x4f4>)
1000df56:	00c0      	lsls	r0, r0, #3
1000df58:	4014      	ands	r4, r2
1000df5a:	4460      	add	r0, ip
1000df5c:	4a50      	ldr	r2, [pc, #320]	; (1000e0a0 <__aeabi_dmul+0x4f8>)
1000df5e:	4290      	cmp	r0, r2
1000df60:	dd00      	ble.n	1000df64 <__aeabi_dmul+0x3bc>
1000df62:	e6e3      	b.n	1000dd2c <__aeabi_dmul+0x184>
1000df64:	2501      	movs	r5, #1
1000df66:	08db      	lsrs	r3, r3, #3
1000df68:	0762      	lsls	r2, r4, #29
1000df6a:	431a      	orrs	r2, r3
1000df6c:	0264      	lsls	r4, r4, #9
1000df6e:	9b01      	ldr	r3, [sp, #4]
1000df70:	4691      	mov	r9, r2
1000df72:	0b22      	lsrs	r2, r4, #12
1000df74:	0544      	lsls	r4, r0, #21
1000df76:	0d64      	lsrs	r4, r4, #21
1000df78:	401d      	ands	r5, r3
1000df7a:	e67c      	b.n	1000dc76 <__aeabi_dmul+0xce>
1000df7c:	2280      	movs	r2, #128	; 0x80
1000df7e:	4659      	mov	r1, fp
1000df80:	0312      	lsls	r2, r2, #12
1000df82:	4211      	tst	r1, r2
1000df84:	d008      	beq.n	1000df98 <__aeabi_dmul+0x3f0>
1000df86:	4214      	tst	r4, r2
1000df88:	d106      	bne.n	1000df98 <__aeabi_dmul+0x3f0>
1000df8a:	4322      	orrs	r2, r4
1000df8c:	0312      	lsls	r2, r2, #12
1000df8e:	0b12      	lsrs	r2, r2, #12
1000df90:	4645      	mov	r5, r8
1000df92:	4699      	mov	r9, r3
1000df94:	4c43      	ldr	r4, [pc, #268]	; (1000e0a4 <__aeabi_dmul+0x4fc>)
1000df96:	e66e      	b.n	1000dc76 <__aeabi_dmul+0xce>
1000df98:	465b      	mov	r3, fp
1000df9a:	431a      	orrs	r2, r3
1000df9c:	0312      	lsls	r2, r2, #12
1000df9e:	0b12      	lsrs	r2, r2, #12
1000dfa0:	4c40      	ldr	r4, [pc, #256]	; (1000e0a4 <__aeabi_dmul+0x4fc>)
1000dfa2:	e668      	b.n	1000dc76 <__aeabi_dmul+0xce>
1000dfa4:	0003      	movs	r3, r0
1000dfa6:	4654      	mov	r4, sl
1000dfa8:	3b28      	subs	r3, #40	; 0x28
1000dfaa:	409c      	lsls	r4, r3
1000dfac:	2300      	movs	r3, #0
1000dfae:	e6b9      	b.n	1000dd24 <__aeabi_dmul+0x17c>
1000dfb0:	f000 fc3a 	bl	1000e828 <__clzsi2>
1000dfb4:	3020      	adds	r0, #32
1000dfb6:	e6a6      	b.n	1000dd06 <__aeabi_dmul+0x15e>
1000dfb8:	0003      	movs	r3, r0
1000dfba:	3b28      	subs	r3, #40	; 0x28
1000dfbc:	409f      	lsls	r7, r3
1000dfbe:	2300      	movs	r3, #0
1000dfc0:	46bb      	mov	fp, r7
1000dfc2:	4699      	mov	r9, r3
1000dfc4:	e68a      	b.n	1000dcdc <__aeabi_dmul+0x134>
1000dfc6:	f000 fc2f 	bl	1000e828 <__clzsi2>
1000dfca:	3020      	adds	r0, #32
1000dfcc:	e674      	b.n	1000dcb8 <__aeabi_dmul+0x110>
1000dfce:	46b4      	mov	ip, r6
1000dfd0:	e7ad      	b.n	1000df2e <__aeabi_dmul+0x386>
1000dfd2:	2501      	movs	r5, #1
1000dfd4:	1a2a      	subs	r2, r5, r0
1000dfd6:	2a38      	cmp	r2, #56	; 0x38
1000dfd8:	dd06      	ble.n	1000dfe8 <__aeabi_dmul+0x440>
1000dfda:	9b01      	ldr	r3, [sp, #4]
1000dfdc:	2400      	movs	r4, #0
1000dfde:	401d      	ands	r5, r3
1000dfe0:	2300      	movs	r3, #0
1000dfe2:	2200      	movs	r2, #0
1000dfe4:	4699      	mov	r9, r3
1000dfe6:	e646      	b.n	1000dc76 <__aeabi_dmul+0xce>
1000dfe8:	2a1f      	cmp	r2, #31
1000dfea:	dc21      	bgt.n	1000e030 <__aeabi_dmul+0x488>
1000dfec:	2520      	movs	r5, #32
1000dfee:	0020      	movs	r0, r4
1000dff0:	1aad      	subs	r5, r5, r2
1000dff2:	001e      	movs	r6, r3
1000dff4:	40ab      	lsls	r3, r5
1000dff6:	40a8      	lsls	r0, r5
1000dff8:	40d6      	lsrs	r6, r2
1000dffa:	1e5d      	subs	r5, r3, #1
1000dffc:	41ab      	sbcs	r3, r5
1000dffe:	4330      	orrs	r0, r6
1000e000:	4318      	orrs	r0, r3
1000e002:	40d4      	lsrs	r4, r2
1000e004:	0743      	lsls	r3, r0, #29
1000e006:	d009      	beq.n	1000e01c <__aeabi_dmul+0x474>
1000e008:	230f      	movs	r3, #15
1000e00a:	4003      	ands	r3, r0
1000e00c:	2b04      	cmp	r3, #4
1000e00e:	d005      	beq.n	1000e01c <__aeabi_dmul+0x474>
1000e010:	0003      	movs	r3, r0
1000e012:	1d18      	adds	r0, r3, #4
1000e014:	4298      	cmp	r0, r3
1000e016:	419b      	sbcs	r3, r3
1000e018:	425b      	negs	r3, r3
1000e01a:	18e4      	adds	r4, r4, r3
1000e01c:	0223      	lsls	r3, r4, #8
1000e01e:	d521      	bpl.n	1000e064 <__aeabi_dmul+0x4bc>
1000e020:	2501      	movs	r5, #1
1000e022:	9b01      	ldr	r3, [sp, #4]
1000e024:	2401      	movs	r4, #1
1000e026:	401d      	ands	r5, r3
1000e028:	2300      	movs	r3, #0
1000e02a:	2200      	movs	r2, #0
1000e02c:	4699      	mov	r9, r3
1000e02e:	e622      	b.n	1000dc76 <__aeabi_dmul+0xce>
1000e030:	251f      	movs	r5, #31
1000e032:	0021      	movs	r1, r4
1000e034:	426d      	negs	r5, r5
1000e036:	1a28      	subs	r0, r5, r0
1000e038:	40c1      	lsrs	r1, r0
1000e03a:	0008      	movs	r0, r1
1000e03c:	2a20      	cmp	r2, #32
1000e03e:	d01d      	beq.n	1000e07c <__aeabi_dmul+0x4d4>
1000e040:	355f      	adds	r5, #95	; 0x5f
1000e042:	1aaa      	subs	r2, r5, r2
1000e044:	4094      	lsls	r4, r2
1000e046:	4323      	orrs	r3, r4
1000e048:	1e5c      	subs	r4, r3, #1
1000e04a:	41a3      	sbcs	r3, r4
1000e04c:	2507      	movs	r5, #7
1000e04e:	4303      	orrs	r3, r0
1000e050:	401d      	ands	r5, r3
1000e052:	2200      	movs	r2, #0
1000e054:	2d00      	cmp	r5, #0
1000e056:	d009      	beq.n	1000e06c <__aeabi_dmul+0x4c4>
1000e058:	220f      	movs	r2, #15
1000e05a:	2400      	movs	r4, #0
1000e05c:	401a      	ands	r2, r3
1000e05e:	0018      	movs	r0, r3
1000e060:	2a04      	cmp	r2, #4
1000e062:	d1d6      	bne.n	1000e012 <__aeabi_dmul+0x46a>
1000e064:	0003      	movs	r3, r0
1000e066:	0765      	lsls	r5, r4, #29
1000e068:	0264      	lsls	r4, r4, #9
1000e06a:	0b22      	lsrs	r2, r4, #12
1000e06c:	08db      	lsrs	r3, r3, #3
1000e06e:	432b      	orrs	r3, r5
1000e070:	2501      	movs	r5, #1
1000e072:	4699      	mov	r9, r3
1000e074:	9b01      	ldr	r3, [sp, #4]
1000e076:	2400      	movs	r4, #0
1000e078:	401d      	ands	r5, r3
1000e07a:	e5fc      	b.n	1000dc76 <__aeabi_dmul+0xce>
1000e07c:	2400      	movs	r4, #0
1000e07e:	e7e2      	b.n	1000e046 <__aeabi_dmul+0x49e>
1000e080:	2280      	movs	r2, #128	; 0x80
1000e082:	2501      	movs	r5, #1
1000e084:	0312      	lsls	r2, r2, #12
1000e086:	4322      	orrs	r2, r4
1000e088:	9901      	ldr	r1, [sp, #4]
1000e08a:	0312      	lsls	r2, r2, #12
1000e08c:	0b12      	lsrs	r2, r2, #12
1000e08e:	400d      	ands	r5, r1
1000e090:	4699      	mov	r9, r3
1000e092:	4c04      	ldr	r4, [pc, #16]	; (1000e0a4 <__aeabi_dmul+0x4fc>)
1000e094:	e5ef      	b.n	1000dc76 <__aeabi_dmul+0xce>
1000e096:	46c0      	nop			; (mov r8, r8)
1000e098:	000003ff 	.word	0x000003ff
1000e09c:	feffffff 	.word	0xfeffffff
1000e0a0:	000007fe 	.word	0x000007fe
1000e0a4:	000007ff 	.word	0x000007ff

1000e0a8 <__aeabi_dsub>:
1000e0a8:	b5f0      	push	{r4, r5, r6, r7, lr}
1000e0aa:	4646      	mov	r6, r8
1000e0ac:	46d6      	mov	lr, sl
1000e0ae:	464f      	mov	r7, r9
1000e0b0:	030c      	lsls	r4, r1, #12
1000e0b2:	b5c0      	push	{r6, r7, lr}
1000e0b4:	0fcd      	lsrs	r5, r1, #31
1000e0b6:	004e      	lsls	r6, r1, #1
1000e0b8:	0a61      	lsrs	r1, r4, #9
1000e0ba:	0f44      	lsrs	r4, r0, #29
1000e0bc:	430c      	orrs	r4, r1
1000e0be:	00c1      	lsls	r1, r0, #3
1000e0c0:	0058      	lsls	r0, r3, #1
1000e0c2:	0d40      	lsrs	r0, r0, #21
1000e0c4:	4684      	mov	ip, r0
1000e0c6:	468a      	mov	sl, r1
1000e0c8:	000f      	movs	r7, r1
1000e0ca:	0319      	lsls	r1, r3, #12
1000e0cc:	0f50      	lsrs	r0, r2, #29
1000e0ce:	0a49      	lsrs	r1, r1, #9
1000e0d0:	4301      	orrs	r1, r0
1000e0d2:	48c6      	ldr	r0, [pc, #792]	; (1000e3ec <__aeabi_dsub+0x344>)
1000e0d4:	0d76      	lsrs	r6, r6, #21
1000e0d6:	46a8      	mov	r8, r5
1000e0d8:	0fdb      	lsrs	r3, r3, #31
1000e0da:	00d2      	lsls	r2, r2, #3
1000e0dc:	4584      	cmp	ip, r0
1000e0de:	d100      	bne.n	1000e0e2 <__aeabi_dsub+0x3a>
1000e0e0:	e0d8      	b.n	1000e294 <__aeabi_dsub+0x1ec>
1000e0e2:	2001      	movs	r0, #1
1000e0e4:	4043      	eors	r3, r0
1000e0e6:	42ab      	cmp	r3, r5
1000e0e8:	d100      	bne.n	1000e0ec <__aeabi_dsub+0x44>
1000e0ea:	e0a6      	b.n	1000e23a <__aeabi_dsub+0x192>
1000e0ec:	4660      	mov	r0, ip
1000e0ee:	1a35      	subs	r5, r6, r0
1000e0f0:	2d00      	cmp	r5, #0
1000e0f2:	dc00      	bgt.n	1000e0f6 <__aeabi_dsub+0x4e>
1000e0f4:	e105      	b.n	1000e302 <__aeabi_dsub+0x25a>
1000e0f6:	2800      	cmp	r0, #0
1000e0f8:	d110      	bne.n	1000e11c <__aeabi_dsub+0x74>
1000e0fa:	000b      	movs	r3, r1
1000e0fc:	4313      	orrs	r3, r2
1000e0fe:	d100      	bne.n	1000e102 <__aeabi_dsub+0x5a>
1000e100:	e0d7      	b.n	1000e2b2 <__aeabi_dsub+0x20a>
1000e102:	1e6b      	subs	r3, r5, #1
1000e104:	2b00      	cmp	r3, #0
1000e106:	d000      	beq.n	1000e10a <__aeabi_dsub+0x62>
1000e108:	e14b      	b.n	1000e3a2 <__aeabi_dsub+0x2fa>
1000e10a:	4653      	mov	r3, sl
1000e10c:	1a9f      	subs	r7, r3, r2
1000e10e:	45ba      	cmp	sl, r7
1000e110:	4180      	sbcs	r0, r0
1000e112:	1a64      	subs	r4, r4, r1
1000e114:	4240      	negs	r0, r0
1000e116:	1a24      	subs	r4, r4, r0
1000e118:	2601      	movs	r6, #1
1000e11a:	e01e      	b.n	1000e15a <__aeabi_dsub+0xb2>
1000e11c:	4bb3      	ldr	r3, [pc, #716]	; (1000e3ec <__aeabi_dsub+0x344>)
1000e11e:	429e      	cmp	r6, r3
1000e120:	d048      	beq.n	1000e1b4 <__aeabi_dsub+0x10c>
1000e122:	2380      	movs	r3, #128	; 0x80
1000e124:	041b      	lsls	r3, r3, #16
1000e126:	4319      	orrs	r1, r3
1000e128:	2d38      	cmp	r5, #56	; 0x38
1000e12a:	dd00      	ble.n	1000e12e <__aeabi_dsub+0x86>
1000e12c:	e119      	b.n	1000e362 <__aeabi_dsub+0x2ba>
1000e12e:	2d1f      	cmp	r5, #31
1000e130:	dd00      	ble.n	1000e134 <__aeabi_dsub+0x8c>
1000e132:	e14c      	b.n	1000e3ce <__aeabi_dsub+0x326>
1000e134:	2320      	movs	r3, #32
1000e136:	000f      	movs	r7, r1
1000e138:	1b5b      	subs	r3, r3, r5
1000e13a:	0010      	movs	r0, r2
1000e13c:	409a      	lsls	r2, r3
1000e13e:	409f      	lsls	r7, r3
1000e140:	40e8      	lsrs	r0, r5
1000e142:	1e53      	subs	r3, r2, #1
1000e144:	419a      	sbcs	r2, r3
1000e146:	40e9      	lsrs	r1, r5
1000e148:	4307      	orrs	r7, r0
1000e14a:	4317      	orrs	r7, r2
1000e14c:	4653      	mov	r3, sl
1000e14e:	1bdf      	subs	r7, r3, r7
1000e150:	1a61      	subs	r1, r4, r1
1000e152:	45ba      	cmp	sl, r7
1000e154:	41a4      	sbcs	r4, r4
1000e156:	4264      	negs	r4, r4
1000e158:	1b0c      	subs	r4, r1, r4
1000e15a:	0223      	lsls	r3, r4, #8
1000e15c:	d400      	bmi.n	1000e160 <__aeabi_dsub+0xb8>
1000e15e:	e0c5      	b.n	1000e2ec <__aeabi_dsub+0x244>
1000e160:	0264      	lsls	r4, r4, #9
1000e162:	0a65      	lsrs	r5, r4, #9
1000e164:	2d00      	cmp	r5, #0
1000e166:	d100      	bne.n	1000e16a <__aeabi_dsub+0xc2>
1000e168:	e0f6      	b.n	1000e358 <__aeabi_dsub+0x2b0>
1000e16a:	0028      	movs	r0, r5
1000e16c:	f000 fb5c 	bl	1000e828 <__clzsi2>
1000e170:	0003      	movs	r3, r0
1000e172:	3b08      	subs	r3, #8
1000e174:	2b1f      	cmp	r3, #31
1000e176:	dd00      	ble.n	1000e17a <__aeabi_dsub+0xd2>
1000e178:	e0e9      	b.n	1000e34e <__aeabi_dsub+0x2a6>
1000e17a:	2220      	movs	r2, #32
1000e17c:	003c      	movs	r4, r7
1000e17e:	1ad2      	subs	r2, r2, r3
1000e180:	409d      	lsls	r5, r3
1000e182:	40d4      	lsrs	r4, r2
1000e184:	409f      	lsls	r7, r3
1000e186:	4325      	orrs	r5, r4
1000e188:	429e      	cmp	r6, r3
1000e18a:	dd00      	ble.n	1000e18e <__aeabi_dsub+0xe6>
1000e18c:	e0db      	b.n	1000e346 <__aeabi_dsub+0x29e>
1000e18e:	1b9e      	subs	r6, r3, r6
1000e190:	1c73      	adds	r3, r6, #1
1000e192:	2b1f      	cmp	r3, #31
1000e194:	dd00      	ble.n	1000e198 <__aeabi_dsub+0xf0>
1000e196:	e10a      	b.n	1000e3ae <__aeabi_dsub+0x306>
1000e198:	2220      	movs	r2, #32
1000e19a:	0038      	movs	r0, r7
1000e19c:	1ad2      	subs	r2, r2, r3
1000e19e:	0029      	movs	r1, r5
1000e1a0:	4097      	lsls	r7, r2
1000e1a2:	002c      	movs	r4, r5
1000e1a4:	4091      	lsls	r1, r2
1000e1a6:	40d8      	lsrs	r0, r3
1000e1a8:	1e7a      	subs	r2, r7, #1
1000e1aa:	4197      	sbcs	r7, r2
1000e1ac:	40dc      	lsrs	r4, r3
1000e1ae:	2600      	movs	r6, #0
1000e1b0:	4301      	orrs	r1, r0
1000e1b2:	430f      	orrs	r7, r1
1000e1b4:	077b      	lsls	r3, r7, #29
1000e1b6:	d009      	beq.n	1000e1cc <__aeabi_dsub+0x124>
1000e1b8:	230f      	movs	r3, #15
1000e1ba:	403b      	ands	r3, r7
1000e1bc:	2b04      	cmp	r3, #4
1000e1be:	d005      	beq.n	1000e1cc <__aeabi_dsub+0x124>
1000e1c0:	1d3b      	adds	r3, r7, #4
1000e1c2:	42bb      	cmp	r3, r7
1000e1c4:	41bf      	sbcs	r7, r7
1000e1c6:	427f      	negs	r7, r7
1000e1c8:	19e4      	adds	r4, r4, r7
1000e1ca:	001f      	movs	r7, r3
1000e1cc:	0223      	lsls	r3, r4, #8
1000e1ce:	d525      	bpl.n	1000e21c <__aeabi_dsub+0x174>
1000e1d0:	4b86      	ldr	r3, [pc, #536]	; (1000e3ec <__aeabi_dsub+0x344>)
1000e1d2:	3601      	adds	r6, #1
1000e1d4:	429e      	cmp	r6, r3
1000e1d6:	d100      	bne.n	1000e1da <__aeabi_dsub+0x132>
1000e1d8:	e0af      	b.n	1000e33a <__aeabi_dsub+0x292>
1000e1da:	4b85      	ldr	r3, [pc, #532]	; (1000e3f0 <__aeabi_dsub+0x348>)
1000e1dc:	2501      	movs	r5, #1
1000e1de:	401c      	ands	r4, r3
1000e1e0:	4643      	mov	r3, r8
1000e1e2:	0762      	lsls	r2, r4, #29
1000e1e4:	08ff      	lsrs	r7, r7, #3
1000e1e6:	0264      	lsls	r4, r4, #9
1000e1e8:	0576      	lsls	r6, r6, #21
1000e1ea:	4317      	orrs	r7, r2
1000e1ec:	0b24      	lsrs	r4, r4, #12
1000e1ee:	0d76      	lsrs	r6, r6, #21
1000e1f0:	401d      	ands	r5, r3
1000e1f2:	2100      	movs	r1, #0
1000e1f4:	0324      	lsls	r4, r4, #12
1000e1f6:	0b23      	lsrs	r3, r4, #12
1000e1f8:	0d0c      	lsrs	r4, r1, #20
1000e1fa:	4a7e      	ldr	r2, [pc, #504]	; (1000e3f4 <__aeabi_dsub+0x34c>)
1000e1fc:	0524      	lsls	r4, r4, #20
1000e1fe:	431c      	orrs	r4, r3
1000e200:	4014      	ands	r4, r2
1000e202:	0533      	lsls	r3, r6, #20
1000e204:	4323      	orrs	r3, r4
1000e206:	005b      	lsls	r3, r3, #1
1000e208:	07ed      	lsls	r5, r5, #31
1000e20a:	085b      	lsrs	r3, r3, #1
1000e20c:	432b      	orrs	r3, r5
1000e20e:	0038      	movs	r0, r7
1000e210:	0019      	movs	r1, r3
1000e212:	bc1c      	pop	{r2, r3, r4}
1000e214:	4690      	mov	r8, r2
1000e216:	4699      	mov	r9, r3
1000e218:	46a2      	mov	sl, r4
1000e21a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000e21c:	2501      	movs	r5, #1
1000e21e:	4643      	mov	r3, r8
1000e220:	0762      	lsls	r2, r4, #29
1000e222:	08ff      	lsrs	r7, r7, #3
1000e224:	4317      	orrs	r7, r2
1000e226:	08e4      	lsrs	r4, r4, #3
1000e228:	401d      	ands	r5, r3
1000e22a:	4b70      	ldr	r3, [pc, #448]	; (1000e3ec <__aeabi_dsub+0x344>)
1000e22c:	429e      	cmp	r6, r3
1000e22e:	d036      	beq.n	1000e29e <__aeabi_dsub+0x1f6>
1000e230:	0324      	lsls	r4, r4, #12
1000e232:	0576      	lsls	r6, r6, #21
1000e234:	0b24      	lsrs	r4, r4, #12
1000e236:	0d76      	lsrs	r6, r6, #21
1000e238:	e7db      	b.n	1000e1f2 <__aeabi_dsub+0x14a>
1000e23a:	4663      	mov	r3, ip
1000e23c:	1af3      	subs	r3, r6, r3
1000e23e:	2b00      	cmp	r3, #0
1000e240:	dc00      	bgt.n	1000e244 <__aeabi_dsub+0x19c>
1000e242:	e094      	b.n	1000e36e <__aeabi_dsub+0x2c6>
1000e244:	4660      	mov	r0, ip
1000e246:	2800      	cmp	r0, #0
1000e248:	d035      	beq.n	1000e2b6 <__aeabi_dsub+0x20e>
1000e24a:	4868      	ldr	r0, [pc, #416]	; (1000e3ec <__aeabi_dsub+0x344>)
1000e24c:	4286      	cmp	r6, r0
1000e24e:	d0b1      	beq.n	1000e1b4 <__aeabi_dsub+0x10c>
1000e250:	2780      	movs	r7, #128	; 0x80
1000e252:	043f      	lsls	r7, r7, #16
1000e254:	4339      	orrs	r1, r7
1000e256:	2b38      	cmp	r3, #56	; 0x38
1000e258:	dc00      	bgt.n	1000e25c <__aeabi_dsub+0x1b4>
1000e25a:	e0fd      	b.n	1000e458 <__aeabi_dsub+0x3b0>
1000e25c:	430a      	orrs	r2, r1
1000e25e:	0017      	movs	r7, r2
1000e260:	2100      	movs	r1, #0
1000e262:	1e7a      	subs	r2, r7, #1
1000e264:	4197      	sbcs	r7, r2
1000e266:	4457      	add	r7, sl
1000e268:	4557      	cmp	r7, sl
1000e26a:	4180      	sbcs	r0, r0
1000e26c:	1909      	adds	r1, r1, r4
1000e26e:	4244      	negs	r4, r0
1000e270:	190c      	adds	r4, r1, r4
1000e272:	0223      	lsls	r3, r4, #8
1000e274:	d53a      	bpl.n	1000e2ec <__aeabi_dsub+0x244>
1000e276:	4b5d      	ldr	r3, [pc, #372]	; (1000e3ec <__aeabi_dsub+0x344>)
1000e278:	3601      	adds	r6, #1
1000e27a:	429e      	cmp	r6, r3
1000e27c:	d100      	bne.n	1000e280 <__aeabi_dsub+0x1d8>
1000e27e:	e14b      	b.n	1000e518 <__aeabi_dsub+0x470>
1000e280:	2201      	movs	r2, #1
1000e282:	4b5b      	ldr	r3, [pc, #364]	; (1000e3f0 <__aeabi_dsub+0x348>)
1000e284:	401c      	ands	r4, r3
1000e286:	087b      	lsrs	r3, r7, #1
1000e288:	4017      	ands	r7, r2
1000e28a:	431f      	orrs	r7, r3
1000e28c:	07e2      	lsls	r2, r4, #31
1000e28e:	4317      	orrs	r7, r2
1000e290:	0864      	lsrs	r4, r4, #1
1000e292:	e78f      	b.n	1000e1b4 <__aeabi_dsub+0x10c>
1000e294:	0008      	movs	r0, r1
1000e296:	4310      	orrs	r0, r2
1000e298:	d000      	beq.n	1000e29c <__aeabi_dsub+0x1f4>
1000e29a:	e724      	b.n	1000e0e6 <__aeabi_dsub+0x3e>
1000e29c:	e721      	b.n	1000e0e2 <__aeabi_dsub+0x3a>
1000e29e:	0023      	movs	r3, r4
1000e2a0:	433b      	orrs	r3, r7
1000e2a2:	d100      	bne.n	1000e2a6 <__aeabi_dsub+0x1fe>
1000e2a4:	e1b9      	b.n	1000e61a <__aeabi_dsub+0x572>
1000e2a6:	2280      	movs	r2, #128	; 0x80
1000e2a8:	0312      	lsls	r2, r2, #12
1000e2aa:	4314      	orrs	r4, r2
1000e2ac:	0324      	lsls	r4, r4, #12
1000e2ae:	0b24      	lsrs	r4, r4, #12
1000e2b0:	e79f      	b.n	1000e1f2 <__aeabi_dsub+0x14a>
1000e2b2:	002e      	movs	r6, r5
1000e2b4:	e77e      	b.n	1000e1b4 <__aeabi_dsub+0x10c>
1000e2b6:	0008      	movs	r0, r1
1000e2b8:	4310      	orrs	r0, r2
1000e2ba:	d100      	bne.n	1000e2be <__aeabi_dsub+0x216>
1000e2bc:	e0ca      	b.n	1000e454 <__aeabi_dsub+0x3ac>
1000e2be:	1e58      	subs	r0, r3, #1
1000e2c0:	4684      	mov	ip, r0
1000e2c2:	2800      	cmp	r0, #0
1000e2c4:	d000      	beq.n	1000e2c8 <__aeabi_dsub+0x220>
1000e2c6:	e0e7      	b.n	1000e498 <__aeabi_dsub+0x3f0>
1000e2c8:	4452      	add	r2, sl
1000e2ca:	4552      	cmp	r2, sl
1000e2cc:	4180      	sbcs	r0, r0
1000e2ce:	1864      	adds	r4, r4, r1
1000e2d0:	4240      	negs	r0, r0
1000e2d2:	1824      	adds	r4, r4, r0
1000e2d4:	0017      	movs	r7, r2
1000e2d6:	2601      	movs	r6, #1
1000e2d8:	0223      	lsls	r3, r4, #8
1000e2da:	d507      	bpl.n	1000e2ec <__aeabi_dsub+0x244>
1000e2dc:	2602      	movs	r6, #2
1000e2de:	e7cf      	b.n	1000e280 <__aeabi_dsub+0x1d8>
1000e2e0:	4664      	mov	r4, ip
1000e2e2:	432c      	orrs	r4, r5
1000e2e4:	d100      	bne.n	1000e2e8 <__aeabi_dsub+0x240>
1000e2e6:	e1b3      	b.n	1000e650 <__aeabi_dsub+0x5a8>
1000e2e8:	002c      	movs	r4, r5
1000e2ea:	4667      	mov	r7, ip
1000e2ec:	077b      	lsls	r3, r7, #29
1000e2ee:	d000      	beq.n	1000e2f2 <__aeabi_dsub+0x24a>
1000e2f0:	e762      	b.n	1000e1b8 <__aeabi_dsub+0x110>
1000e2f2:	0763      	lsls	r3, r4, #29
1000e2f4:	08ff      	lsrs	r7, r7, #3
1000e2f6:	431f      	orrs	r7, r3
1000e2f8:	2501      	movs	r5, #1
1000e2fa:	4643      	mov	r3, r8
1000e2fc:	08e4      	lsrs	r4, r4, #3
1000e2fe:	401d      	ands	r5, r3
1000e300:	e793      	b.n	1000e22a <__aeabi_dsub+0x182>
1000e302:	2d00      	cmp	r5, #0
1000e304:	d178      	bne.n	1000e3f8 <__aeabi_dsub+0x350>
1000e306:	1c75      	adds	r5, r6, #1
1000e308:	056d      	lsls	r5, r5, #21
1000e30a:	0d6d      	lsrs	r5, r5, #21
1000e30c:	2d01      	cmp	r5, #1
1000e30e:	dc00      	bgt.n	1000e312 <__aeabi_dsub+0x26a>
1000e310:	e0f2      	b.n	1000e4f8 <__aeabi_dsub+0x450>
1000e312:	4650      	mov	r0, sl
1000e314:	1a80      	subs	r0, r0, r2
1000e316:	4582      	cmp	sl, r0
1000e318:	41bf      	sbcs	r7, r7
1000e31a:	1a65      	subs	r5, r4, r1
1000e31c:	427f      	negs	r7, r7
1000e31e:	1bed      	subs	r5, r5, r7
1000e320:	4684      	mov	ip, r0
1000e322:	0228      	lsls	r0, r5, #8
1000e324:	d400      	bmi.n	1000e328 <__aeabi_dsub+0x280>
1000e326:	e08c      	b.n	1000e442 <__aeabi_dsub+0x39a>
1000e328:	4650      	mov	r0, sl
1000e32a:	1a17      	subs	r7, r2, r0
1000e32c:	42ba      	cmp	r2, r7
1000e32e:	4192      	sbcs	r2, r2
1000e330:	1b0c      	subs	r4, r1, r4
1000e332:	4255      	negs	r5, r2
1000e334:	1b65      	subs	r5, r4, r5
1000e336:	4698      	mov	r8, r3
1000e338:	e714      	b.n	1000e164 <__aeabi_dsub+0xbc>
1000e33a:	2501      	movs	r5, #1
1000e33c:	4643      	mov	r3, r8
1000e33e:	2400      	movs	r4, #0
1000e340:	401d      	ands	r5, r3
1000e342:	2700      	movs	r7, #0
1000e344:	e755      	b.n	1000e1f2 <__aeabi_dsub+0x14a>
1000e346:	4c2a      	ldr	r4, [pc, #168]	; (1000e3f0 <__aeabi_dsub+0x348>)
1000e348:	1af6      	subs	r6, r6, r3
1000e34a:	402c      	ands	r4, r5
1000e34c:	e732      	b.n	1000e1b4 <__aeabi_dsub+0x10c>
1000e34e:	003d      	movs	r5, r7
1000e350:	3828      	subs	r0, #40	; 0x28
1000e352:	4085      	lsls	r5, r0
1000e354:	2700      	movs	r7, #0
1000e356:	e717      	b.n	1000e188 <__aeabi_dsub+0xe0>
1000e358:	0038      	movs	r0, r7
1000e35a:	f000 fa65 	bl	1000e828 <__clzsi2>
1000e35e:	3020      	adds	r0, #32
1000e360:	e706      	b.n	1000e170 <__aeabi_dsub+0xc8>
1000e362:	430a      	orrs	r2, r1
1000e364:	0017      	movs	r7, r2
1000e366:	2100      	movs	r1, #0
1000e368:	1e7a      	subs	r2, r7, #1
1000e36a:	4197      	sbcs	r7, r2
1000e36c:	e6ee      	b.n	1000e14c <__aeabi_dsub+0xa4>
1000e36e:	2b00      	cmp	r3, #0
1000e370:	d000      	beq.n	1000e374 <__aeabi_dsub+0x2cc>
1000e372:	e0e5      	b.n	1000e540 <__aeabi_dsub+0x498>
1000e374:	1c73      	adds	r3, r6, #1
1000e376:	469c      	mov	ip, r3
1000e378:	055b      	lsls	r3, r3, #21
1000e37a:	0d5b      	lsrs	r3, r3, #21
1000e37c:	2b01      	cmp	r3, #1
1000e37e:	dc00      	bgt.n	1000e382 <__aeabi_dsub+0x2da>
1000e380:	e09f      	b.n	1000e4c2 <__aeabi_dsub+0x41a>
1000e382:	4b1a      	ldr	r3, [pc, #104]	; (1000e3ec <__aeabi_dsub+0x344>)
1000e384:	459c      	cmp	ip, r3
1000e386:	d100      	bne.n	1000e38a <__aeabi_dsub+0x2e2>
1000e388:	e0c5      	b.n	1000e516 <__aeabi_dsub+0x46e>
1000e38a:	4452      	add	r2, sl
1000e38c:	4552      	cmp	r2, sl
1000e38e:	4180      	sbcs	r0, r0
1000e390:	1864      	adds	r4, r4, r1
1000e392:	4240      	negs	r0, r0
1000e394:	1824      	adds	r4, r4, r0
1000e396:	07e7      	lsls	r7, r4, #31
1000e398:	0852      	lsrs	r2, r2, #1
1000e39a:	4317      	orrs	r7, r2
1000e39c:	0864      	lsrs	r4, r4, #1
1000e39e:	4666      	mov	r6, ip
1000e3a0:	e708      	b.n	1000e1b4 <__aeabi_dsub+0x10c>
1000e3a2:	4812      	ldr	r0, [pc, #72]	; (1000e3ec <__aeabi_dsub+0x344>)
1000e3a4:	4285      	cmp	r5, r0
1000e3a6:	d100      	bne.n	1000e3aa <__aeabi_dsub+0x302>
1000e3a8:	e085      	b.n	1000e4b6 <__aeabi_dsub+0x40e>
1000e3aa:	001d      	movs	r5, r3
1000e3ac:	e6bc      	b.n	1000e128 <__aeabi_dsub+0x80>
1000e3ae:	0029      	movs	r1, r5
1000e3b0:	3e1f      	subs	r6, #31
1000e3b2:	40f1      	lsrs	r1, r6
1000e3b4:	2b20      	cmp	r3, #32
1000e3b6:	d100      	bne.n	1000e3ba <__aeabi_dsub+0x312>
1000e3b8:	e07f      	b.n	1000e4ba <__aeabi_dsub+0x412>
1000e3ba:	2240      	movs	r2, #64	; 0x40
1000e3bc:	1ad3      	subs	r3, r2, r3
1000e3be:	409d      	lsls	r5, r3
1000e3c0:	432f      	orrs	r7, r5
1000e3c2:	1e7d      	subs	r5, r7, #1
1000e3c4:	41af      	sbcs	r7, r5
1000e3c6:	2400      	movs	r4, #0
1000e3c8:	430f      	orrs	r7, r1
1000e3ca:	2600      	movs	r6, #0
1000e3cc:	e78e      	b.n	1000e2ec <__aeabi_dsub+0x244>
1000e3ce:	002b      	movs	r3, r5
1000e3d0:	000f      	movs	r7, r1
1000e3d2:	3b20      	subs	r3, #32
1000e3d4:	40df      	lsrs	r7, r3
1000e3d6:	2d20      	cmp	r5, #32
1000e3d8:	d071      	beq.n	1000e4be <__aeabi_dsub+0x416>
1000e3da:	2340      	movs	r3, #64	; 0x40
1000e3dc:	1b5d      	subs	r5, r3, r5
1000e3de:	40a9      	lsls	r1, r5
1000e3e0:	430a      	orrs	r2, r1
1000e3e2:	1e51      	subs	r1, r2, #1
1000e3e4:	418a      	sbcs	r2, r1
1000e3e6:	2100      	movs	r1, #0
1000e3e8:	4317      	orrs	r7, r2
1000e3ea:	e6af      	b.n	1000e14c <__aeabi_dsub+0xa4>
1000e3ec:	000007ff 	.word	0x000007ff
1000e3f0:	ff7fffff 	.word	0xff7fffff
1000e3f4:	800fffff 	.word	0x800fffff
1000e3f8:	2e00      	cmp	r6, #0
1000e3fa:	d03e      	beq.n	1000e47a <__aeabi_dsub+0x3d2>
1000e3fc:	4eb3      	ldr	r6, [pc, #716]	; (1000e6cc <__aeabi_dsub+0x624>)
1000e3fe:	45b4      	cmp	ip, r6
1000e400:	d045      	beq.n	1000e48e <__aeabi_dsub+0x3e6>
1000e402:	2680      	movs	r6, #128	; 0x80
1000e404:	0436      	lsls	r6, r6, #16
1000e406:	426d      	negs	r5, r5
1000e408:	4334      	orrs	r4, r6
1000e40a:	2d38      	cmp	r5, #56	; 0x38
1000e40c:	dd00      	ble.n	1000e410 <__aeabi_dsub+0x368>
1000e40e:	e0a8      	b.n	1000e562 <__aeabi_dsub+0x4ba>
1000e410:	2d1f      	cmp	r5, #31
1000e412:	dd00      	ble.n	1000e416 <__aeabi_dsub+0x36e>
1000e414:	e11f      	b.n	1000e656 <__aeabi_dsub+0x5ae>
1000e416:	2620      	movs	r6, #32
1000e418:	0027      	movs	r7, r4
1000e41a:	4650      	mov	r0, sl
1000e41c:	1b76      	subs	r6, r6, r5
1000e41e:	40b7      	lsls	r7, r6
1000e420:	40e8      	lsrs	r0, r5
1000e422:	4307      	orrs	r7, r0
1000e424:	4650      	mov	r0, sl
1000e426:	40b0      	lsls	r0, r6
1000e428:	1e46      	subs	r6, r0, #1
1000e42a:	41b0      	sbcs	r0, r6
1000e42c:	40ec      	lsrs	r4, r5
1000e42e:	4338      	orrs	r0, r7
1000e430:	1a17      	subs	r7, r2, r0
1000e432:	42ba      	cmp	r2, r7
1000e434:	4192      	sbcs	r2, r2
1000e436:	1b0c      	subs	r4, r1, r4
1000e438:	4252      	negs	r2, r2
1000e43a:	1aa4      	subs	r4, r4, r2
1000e43c:	4666      	mov	r6, ip
1000e43e:	4698      	mov	r8, r3
1000e440:	e68b      	b.n	1000e15a <__aeabi_dsub+0xb2>
1000e442:	4664      	mov	r4, ip
1000e444:	4667      	mov	r7, ip
1000e446:	432c      	orrs	r4, r5
1000e448:	d000      	beq.n	1000e44c <__aeabi_dsub+0x3a4>
1000e44a:	e68b      	b.n	1000e164 <__aeabi_dsub+0xbc>
1000e44c:	2500      	movs	r5, #0
1000e44e:	2600      	movs	r6, #0
1000e450:	2700      	movs	r7, #0
1000e452:	e6ea      	b.n	1000e22a <__aeabi_dsub+0x182>
1000e454:	001e      	movs	r6, r3
1000e456:	e6ad      	b.n	1000e1b4 <__aeabi_dsub+0x10c>
1000e458:	2b1f      	cmp	r3, #31
1000e45a:	dc60      	bgt.n	1000e51e <__aeabi_dsub+0x476>
1000e45c:	2720      	movs	r7, #32
1000e45e:	1af8      	subs	r0, r7, r3
1000e460:	000f      	movs	r7, r1
1000e462:	4684      	mov	ip, r0
1000e464:	4087      	lsls	r7, r0
1000e466:	0010      	movs	r0, r2
1000e468:	40d8      	lsrs	r0, r3
1000e46a:	4307      	orrs	r7, r0
1000e46c:	4660      	mov	r0, ip
1000e46e:	4082      	lsls	r2, r0
1000e470:	1e50      	subs	r0, r2, #1
1000e472:	4182      	sbcs	r2, r0
1000e474:	40d9      	lsrs	r1, r3
1000e476:	4317      	orrs	r7, r2
1000e478:	e6f5      	b.n	1000e266 <__aeabi_dsub+0x1be>
1000e47a:	0026      	movs	r6, r4
1000e47c:	4650      	mov	r0, sl
1000e47e:	4306      	orrs	r6, r0
1000e480:	d005      	beq.n	1000e48e <__aeabi_dsub+0x3e6>
1000e482:	43ed      	mvns	r5, r5
1000e484:	2d00      	cmp	r5, #0
1000e486:	d0d3      	beq.n	1000e430 <__aeabi_dsub+0x388>
1000e488:	4e90      	ldr	r6, [pc, #576]	; (1000e6cc <__aeabi_dsub+0x624>)
1000e48a:	45b4      	cmp	ip, r6
1000e48c:	d1bd      	bne.n	1000e40a <__aeabi_dsub+0x362>
1000e48e:	000c      	movs	r4, r1
1000e490:	0017      	movs	r7, r2
1000e492:	4666      	mov	r6, ip
1000e494:	4698      	mov	r8, r3
1000e496:	e68d      	b.n	1000e1b4 <__aeabi_dsub+0x10c>
1000e498:	488c      	ldr	r0, [pc, #560]	; (1000e6cc <__aeabi_dsub+0x624>)
1000e49a:	4283      	cmp	r3, r0
1000e49c:	d00b      	beq.n	1000e4b6 <__aeabi_dsub+0x40e>
1000e49e:	4663      	mov	r3, ip
1000e4a0:	e6d9      	b.n	1000e256 <__aeabi_dsub+0x1ae>
1000e4a2:	2d00      	cmp	r5, #0
1000e4a4:	d000      	beq.n	1000e4a8 <__aeabi_dsub+0x400>
1000e4a6:	e096      	b.n	1000e5d6 <__aeabi_dsub+0x52e>
1000e4a8:	0008      	movs	r0, r1
1000e4aa:	4310      	orrs	r0, r2
1000e4ac:	d100      	bne.n	1000e4b0 <__aeabi_dsub+0x408>
1000e4ae:	e0e2      	b.n	1000e676 <__aeabi_dsub+0x5ce>
1000e4b0:	000c      	movs	r4, r1
1000e4b2:	0017      	movs	r7, r2
1000e4b4:	4698      	mov	r8, r3
1000e4b6:	4e85      	ldr	r6, [pc, #532]	; (1000e6cc <__aeabi_dsub+0x624>)
1000e4b8:	e67c      	b.n	1000e1b4 <__aeabi_dsub+0x10c>
1000e4ba:	2500      	movs	r5, #0
1000e4bc:	e780      	b.n	1000e3c0 <__aeabi_dsub+0x318>
1000e4be:	2100      	movs	r1, #0
1000e4c0:	e78e      	b.n	1000e3e0 <__aeabi_dsub+0x338>
1000e4c2:	0023      	movs	r3, r4
1000e4c4:	4650      	mov	r0, sl
1000e4c6:	4303      	orrs	r3, r0
1000e4c8:	2e00      	cmp	r6, #0
1000e4ca:	d000      	beq.n	1000e4ce <__aeabi_dsub+0x426>
1000e4cc:	e0a8      	b.n	1000e620 <__aeabi_dsub+0x578>
1000e4ce:	2b00      	cmp	r3, #0
1000e4d0:	d100      	bne.n	1000e4d4 <__aeabi_dsub+0x42c>
1000e4d2:	e0de      	b.n	1000e692 <__aeabi_dsub+0x5ea>
1000e4d4:	000b      	movs	r3, r1
1000e4d6:	4313      	orrs	r3, r2
1000e4d8:	d100      	bne.n	1000e4dc <__aeabi_dsub+0x434>
1000e4da:	e66b      	b.n	1000e1b4 <__aeabi_dsub+0x10c>
1000e4dc:	4452      	add	r2, sl
1000e4de:	4552      	cmp	r2, sl
1000e4e0:	4180      	sbcs	r0, r0
1000e4e2:	1864      	adds	r4, r4, r1
1000e4e4:	4240      	negs	r0, r0
1000e4e6:	1824      	adds	r4, r4, r0
1000e4e8:	0017      	movs	r7, r2
1000e4ea:	0223      	lsls	r3, r4, #8
1000e4ec:	d400      	bmi.n	1000e4f0 <__aeabi_dsub+0x448>
1000e4ee:	e6fd      	b.n	1000e2ec <__aeabi_dsub+0x244>
1000e4f0:	4b77      	ldr	r3, [pc, #476]	; (1000e6d0 <__aeabi_dsub+0x628>)
1000e4f2:	4666      	mov	r6, ip
1000e4f4:	401c      	ands	r4, r3
1000e4f6:	e65d      	b.n	1000e1b4 <__aeabi_dsub+0x10c>
1000e4f8:	0025      	movs	r5, r4
1000e4fa:	4650      	mov	r0, sl
1000e4fc:	4305      	orrs	r5, r0
1000e4fe:	2e00      	cmp	r6, #0
1000e500:	d1cf      	bne.n	1000e4a2 <__aeabi_dsub+0x3fa>
1000e502:	2d00      	cmp	r5, #0
1000e504:	d14f      	bne.n	1000e5a6 <__aeabi_dsub+0x4fe>
1000e506:	000c      	movs	r4, r1
1000e508:	4314      	orrs	r4, r2
1000e50a:	d100      	bne.n	1000e50e <__aeabi_dsub+0x466>
1000e50c:	e0a0      	b.n	1000e650 <__aeabi_dsub+0x5a8>
1000e50e:	000c      	movs	r4, r1
1000e510:	0017      	movs	r7, r2
1000e512:	4698      	mov	r8, r3
1000e514:	e64e      	b.n	1000e1b4 <__aeabi_dsub+0x10c>
1000e516:	4666      	mov	r6, ip
1000e518:	2400      	movs	r4, #0
1000e51a:	2700      	movs	r7, #0
1000e51c:	e685      	b.n	1000e22a <__aeabi_dsub+0x182>
1000e51e:	001f      	movs	r7, r3
1000e520:	0008      	movs	r0, r1
1000e522:	3f20      	subs	r7, #32
1000e524:	40f8      	lsrs	r0, r7
1000e526:	0007      	movs	r7, r0
1000e528:	2b20      	cmp	r3, #32
1000e52a:	d100      	bne.n	1000e52e <__aeabi_dsub+0x486>
1000e52c:	e08e      	b.n	1000e64c <__aeabi_dsub+0x5a4>
1000e52e:	2040      	movs	r0, #64	; 0x40
1000e530:	1ac3      	subs	r3, r0, r3
1000e532:	4099      	lsls	r1, r3
1000e534:	430a      	orrs	r2, r1
1000e536:	1e51      	subs	r1, r2, #1
1000e538:	418a      	sbcs	r2, r1
1000e53a:	2100      	movs	r1, #0
1000e53c:	4317      	orrs	r7, r2
1000e53e:	e692      	b.n	1000e266 <__aeabi_dsub+0x1be>
1000e540:	2e00      	cmp	r6, #0
1000e542:	d114      	bne.n	1000e56e <__aeabi_dsub+0x4c6>
1000e544:	0026      	movs	r6, r4
1000e546:	4650      	mov	r0, sl
1000e548:	4306      	orrs	r6, r0
1000e54a:	d062      	beq.n	1000e612 <__aeabi_dsub+0x56a>
1000e54c:	43db      	mvns	r3, r3
1000e54e:	2b00      	cmp	r3, #0
1000e550:	d15c      	bne.n	1000e60c <__aeabi_dsub+0x564>
1000e552:	1887      	adds	r7, r0, r2
1000e554:	4297      	cmp	r7, r2
1000e556:	4192      	sbcs	r2, r2
1000e558:	1864      	adds	r4, r4, r1
1000e55a:	4252      	negs	r2, r2
1000e55c:	18a4      	adds	r4, r4, r2
1000e55e:	4666      	mov	r6, ip
1000e560:	e687      	b.n	1000e272 <__aeabi_dsub+0x1ca>
1000e562:	4650      	mov	r0, sl
1000e564:	4320      	orrs	r0, r4
1000e566:	1e44      	subs	r4, r0, #1
1000e568:	41a0      	sbcs	r0, r4
1000e56a:	2400      	movs	r4, #0
1000e56c:	e760      	b.n	1000e430 <__aeabi_dsub+0x388>
1000e56e:	4e57      	ldr	r6, [pc, #348]	; (1000e6cc <__aeabi_dsub+0x624>)
1000e570:	45b4      	cmp	ip, r6
1000e572:	d04e      	beq.n	1000e612 <__aeabi_dsub+0x56a>
1000e574:	2680      	movs	r6, #128	; 0x80
1000e576:	0436      	lsls	r6, r6, #16
1000e578:	425b      	negs	r3, r3
1000e57a:	4334      	orrs	r4, r6
1000e57c:	2b38      	cmp	r3, #56	; 0x38
1000e57e:	dd00      	ble.n	1000e582 <__aeabi_dsub+0x4da>
1000e580:	e07f      	b.n	1000e682 <__aeabi_dsub+0x5da>
1000e582:	2b1f      	cmp	r3, #31
1000e584:	dd00      	ble.n	1000e588 <__aeabi_dsub+0x4e0>
1000e586:	e08b      	b.n	1000e6a0 <__aeabi_dsub+0x5f8>
1000e588:	2620      	movs	r6, #32
1000e58a:	0027      	movs	r7, r4
1000e58c:	4650      	mov	r0, sl
1000e58e:	1af6      	subs	r6, r6, r3
1000e590:	40b7      	lsls	r7, r6
1000e592:	40d8      	lsrs	r0, r3
1000e594:	4307      	orrs	r7, r0
1000e596:	4650      	mov	r0, sl
1000e598:	40b0      	lsls	r0, r6
1000e59a:	1e46      	subs	r6, r0, #1
1000e59c:	41b0      	sbcs	r0, r6
1000e59e:	4307      	orrs	r7, r0
1000e5a0:	40dc      	lsrs	r4, r3
1000e5a2:	18bf      	adds	r7, r7, r2
1000e5a4:	e7d6      	b.n	1000e554 <__aeabi_dsub+0x4ac>
1000e5a6:	000d      	movs	r5, r1
1000e5a8:	4315      	orrs	r5, r2
1000e5aa:	d100      	bne.n	1000e5ae <__aeabi_dsub+0x506>
1000e5ac:	e602      	b.n	1000e1b4 <__aeabi_dsub+0x10c>
1000e5ae:	4650      	mov	r0, sl
1000e5b0:	1a80      	subs	r0, r0, r2
1000e5b2:	4582      	cmp	sl, r0
1000e5b4:	41bf      	sbcs	r7, r7
1000e5b6:	1a65      	subs	r5, r4, r1
1000e5b8:	427f      	negs	r7, r7
1000e5ba:	1bed      	subs	r5, r5, r7
1000e5bc:	4684      	mov	ip, r0
1000e5be:	0228      	lsls	r0, r5, #8
1000e5c0:	d400      	bmi.n	1000e5c4 <__aeabi_dsub+0x51c>
1000e5c2:	e68d      	b.n	1000e2e0 <__aeabi_dsub+0x238>
1000e5c4:	4650      	mov	r0, sl
1000e5c6:	1a17      	subs	r7, r2, r0
1000e5c8:	42ba      	cmp	r2, r7
1000e5ca:	4192      	sbcs	r2, r2
1000e5cc:	1b0c      	subs	r4, r1, r4
1000e5ce:	4252      	negs	r2, r2
1000e5d0:	1aa4      	subs	r4, r4, r2
1000e5d2:	4698      	mov	r8, r3
1000e5d4:	e5ee      	b.n	1000e1b4 <__aeabi_dsub+0x10c>
1000e5d6:	000d      	movs	r5, r1
1000e5d8:	4315      	orrs	r5, r2
1000e5da:	d100      	bne.n	1000e5de <__aeabi_dsub+0x536>
1000e5dc:	e76b      	b.n	1000e4b6 <__aeabi_dsub+0x40e>
1000e5de:	4650      	mov	r0, sl
1000e5e0:	0767      	lsls	r7, r4, #29
1000e5e2:	08c0      	lsrs	r0, r0, #3
1000e5e4:	4307      	orrs	r7, r0
1000e5e6:	2080      	movs	r0, #128	; 0x80
1000e5e8:	08e4      	lsrs	r4, r4, #3
1000e5ea:	0300      	lsls	r0, r0, #12
1000e5ec:	4204      	tst	r4, r0
1000e5ee:	d007      	beq.n	1000e600 <__aeabi_dsub+0x558>
1000e5f0:	08cd      	lsrs	r5, r1, #3
1000e5f2:	4205      	tst	r5, r0
1000e5f4:	d104      	bne.n	1000e600 <__aeabi_dsub+0x558>
1000e5f6:	002c      	movs	r4, r5
1000e5f8:	4698      	mov	r8, r3
1000e5fa:	08d7      	lsrs	r7, r2, #3
1000e5fc:	0749      	lsls	r1, r1, #29
1000e5fe:	430f      	orrs	r7, r1
1000e600:	0f7b      	lsrs	r3, r7, #29
1000e602:	00e4      	lsls	r4, r4, #3
1000e604:	431c      	orrs	r4, r3
1000e606:	00ff      	lsls	r7, r7, #3
1000e608:	4e30      	ldr	r6, [pc, #192]	; (1000e6cc <__aeabi_dsub+0x624>)
1000e60a:	e5d3      	b.n	1000e1b4 <__aeabi_dsub+0x10c>
1000e60c:	4e2f      	ldr	r6, [pc, #188]	; (1000e6cc <__aeabi_dsub+0x624>)
1000e60e:	45b4      	cmp	ip, r6
1000e610:	d1b4      	bne.n	1000e57c <__aeabi_dsub+0x4d4>
1000e612:	000c      	movs	r4, r1
1000e614:	0017      	movs	r7, r2
1000e616:	4666      	mov	r6, ip
1000e618:	e5cc      	b.n	1000e1b4 <__aeabi_dsub+0x10c>
1000e61a:	2700      	movs	r7, #0
1000e61c:	2400      	movs	r4, #0
1000e61e:	e5e8      	b.n	1000e1f2 <__aeabi_dsub+0x14a>
1000e620:	2b00      	cmp	r3, #0
1000e622:	d039      	beq.n	1000e698 <__aeabi_dsub+0x5f0>
1000e624:	000b      	movs	r3, r1
1000e626:	4313      	orrs	r3, r2
1000e628:	d100      	bne.n	1000e62c <__aeabi_dsub+0x584>
1000e62a:	e744      	b.n	1000e4b6 <__aeabi_dsub+0x40e>
1000e62c:	08c0      	lsrs	r0, r0, #3
1000e62e:	0767      	lsls	r7, r4, #29
1000e630:	4307      	orrs	r7, r0
1000e632:	2080      	movs	r0, #128	; 0x80
1000e634:	08e4      	lsrs	r4, r4, #3
1000e636:	0300      	lsls	r0, r0, #12
1000e638:	4204      	tst	r4, r0
1000e63a:	d0e1      	beq.n	1000e600 <__aeabi_dsub+0x558>
1000e63c:	08cb      	lsrs	r3, r1, #3
1000e63e:	4203      	tst	r3, r0
1000e640:	d1de      	bne.n	1000e600 <__aeabi_dsub+0x558>
1000e642:	08d7      	lsrs	r7, r2, #3
1000e644:	0749      	lsls	r1, r1, #29
1000e646:	430f      	orrs	r7, r1
1000e648:	001c      	movs	r4, r3
1000e64a:	e7d9      	b.n	1000e600 <__aeabi_dsub+0x558>
1000e64c:	2100      	movs	r1, #0
1000e64e:	e771      	b.n	1000e534 <__aeabi_dsub+0x48c>
1000e650:	2500      	movs	r5, #0
1000e652:	2700      	movs	r7, #0
1000e654:	e5e9      	b.n	1000e22a <__aeabi_dsub+0x182>
1000e656:	002e      	movs	r6, r5
1000e658:	0027      	movs	r7, r4
1000e65a:	3e20      	subs	r6, #32
1000e65c:	40f7      	lsrs	r7, r6
1000e65e:	2d20      	cmp	r5, #32
1000e660:	d02f      	beq.n	1000e6c2 <__aeabi_dsub+0x61a>
1000e662:	2640      	movs	r6, #64	; 0x40
1000e664:	1b75      	subs	r5, r6, r5
1000e666:	40ac      	lsls	r4, r5
1000e668:	4650      	mov	r0, sl
1000e66a:	4320      	orrs	r0, r4
1000e66c:	1e44      	subs	r4, r0, #1
1000e66e:	41a0      	sbcs	r0, r4
1000e670:	2400      	movs	r4, #0
1000e672:	4338      	orrs	r0, r7
1000e674:	e6dc      	b.n	1000e430 <__aeabi_dsub+0x388>
1000e676:	2480      	movs	r4, #128	; 0x80
1000e678:	2500      	movs	r5, #0
1000e67a:	0324      	lsls	r4, r4, #12
1000e67c:	4e13      	ldr	r6, [pc, #76]	; (1000e6cc <__aeabi_dsub+0x624>)
1000e67e:	2700      	movs	r7, #0
1000e680:	e5d3      	b.n	1000e22a <__aeabi_dsub+0x182>
1000e682:	4650      	mov	r0, sl
1000e684:	4320      	orrs	r0, r4
1000e686:	0007      	movs	r7, r0
1000e688:	1e78      	subs	r0, r7, #1
1000e68a:	4187      	sbcs	r7, r0
1000e68c:	2400      	movs	r4, #0
1000e68e:	18bf      	adds	r7, r7, r2
1000e690:	e760      	b.n	1000e554 <__aeabi_dsub+0x4ac>
1000e692:	000c      	movs	r4, r1
1000e694:	0017      	movs	r7, r2
1000e696:	e58d      	b.n	1000e1b4 <__aeabi_dsub+0x10c>
1000e698:	000c      	movs	r4, r1
1000e69a:	0017      	movs	r7, r2
1000e69c:	4e0b      	ldr	r6, [pc, #44]	; (1000e6cc <__aeabi_dsub+0x624>)
1000e69e:	e589      	b.n	1000e1b4 <__aeabi_dsub+0x10c>
1000e6a0:	001e      	movs	r6, r3
1000e6a2:	0027      	movs	r7, r4
1000e6a4:	3e20      	subs	r6, #32
1000e6a6:	40f7      	lsrs	r7, r6
1000e6a8:	2b20      	cmp	r3, #32
1000e6aa:	d00c      	beq.n	1000e6c6 <__aeabi_dsub+0x61e>
1000e6ac:	2640      	movs	r6, #64	; 0x40
1000e6ae:	1af3      	subs	r3, r6, r3
1000e6b0:	409c      	lsls	r4, r3
1000e6b2:	4650      	mov	r0, sl
1000e6b4:	4320      	orrs	r0, r4
1000e6b6:	1e44      	subs	r4, r0, #1
1000e6b8:	41a0      	sbcs	r0, r4
1000e6ba:	4307      	orrs	r7, r0
1000e6bc:	2400      	movs	r4, #0
1000e6be:	18bf      	adds	r7, r7, r2
1000e6c0:	e748      	b.n	1000e554 <__aeabi_dsub+0x4ac>
1000e6c2:	2400      	movs	r4, #0
1000e6c4:	e7d0      	b.n	1000e668 <__aeabi_dsub+0x5c0>
1000e6c6:	2400      	movs	r4, #0
1000e6c8:	e7f3      	b.n	1000e6b2 <__aeabi_dsub+0x60a>
1000e6ca:	46c0      	nop			; (mov r8, r8)
1000e6cc:	000007ff 	.word	0x000007ff
1000e6d0:	ff7fffff 	.word	0xff7fffff

1000e6d4 <__aeabi_d2iz>:
1000e6d4:	b530      	push	{r4, r5, lr}
1000e6d6:	4d13      	ldr	r5, [pc, #76]	; (1000e724 <__aeabi_d2iz+0x50>)
1000e6d8:	030a      	lsls	r2, r1, #12
1000e6da:	004b      	lsls	r3, r1, #1
1000e6dc:	0b12      	lsrs	r2, r2, #12
1000e6de:	0d5b      	lsrs	r3, r3, #21
1000e6e0:	0fc9      	lsrs	r1, r1, #31
1000e6e2:	2400      	movs	r4, #0
1000e6e4:	42ab      	cmp	r3, r5
1000e6e6:	dd10      	ble.n	1000e70a <__aeabi_d2iz+0x36>
1000e6e8:	4c0f      	ldr	r4, [pc, #60]	; (1000e728 <__aeabi_d2iz+0x54>)
1000e6ea:	42a3      	cmp	r3, r4
1000e6ec:	dc0f      	bgt.n	1000e70e <__aeabi_d2iz+0x3a>
1000e6ee:	2480      	movs	r4, #128	; 0x80
1000e6f0:	4d0e      	ldr	r5, [pc, #56]	; (1000e72c <__aeabi_d2iz+0x58>)
1000e6f2:	0364      	lsls	r4, r4, #13
1000e6f4:	4322      	orrs	r2, r4
1000e6f6:	1aed      	subs	r5, r5, r3
1000e6f8:	2d1f      	cmp	r5, #31
1000e6fa:	dd0b      	ble.n	1000e714 <__aeabi_d2iz+0x40>
1000e6fc:	480c      	ldr	r0, [pc, #48]	; (1000e730 <__aeabi_d2iz+0x5c>)
1000e6fe:	1ac3      	subs	r3, r0, r3
1000e700:	40da      	lsrs	r2, r3
1000e702:	4254      	negs	r4, r2
1000e704:	2900      	cmp	r1, #0
1000e706:	d100      	bne.n	1000e70a <__aeabi_d2iz+0x36>
1000e708:	0014      	movs	r4, r2
1000e70a:	0020      	movs	r0, r4
1000e70c:	bd30      	pop	{r4, r5, pc}
1000e70e:	4b09      	ldr	r3, [pc, #36]	; (1000e734 <__aeabi_d2iz+0x60>)
1000e710:	18cc      	adds	r4, r1, r3
1000e712:	e7fa      	b.n	1000e70a <__aeabi_d2iz+0x36>
1000e714:	4c08      	ldr	r4, [pc, #32]	; (1000e738 <__aeabi_d2iz+0x64>)
1000e716:	40e8      	lsrs	r0, r5
1000e718:	46a4      	mov	ip, r4
1000e71a:	4463      	add	r3, ip
1000e71c:	409a      	lsls	r2, r3
1000e71e:	4302      	orrs	r2, r0
1000e720:	e7ef      	b.n	1000e702 <__aeabi_d2iz+0x2e>
1000e722:	46c0      	nop			; (mov r8, r8)
1000e724:	000003fe 	.word	0x000003fe
1000e728:	0000041d 	.word	0x0000041d
1000e72c:	00000433 	.word	0x00000433
1000e730:	00000413 	.word	0x00000413
1000e734:	7fffffff 	.word	0x7fffffff
1000e738:	fffffbed 	.word	0xfffffbed

1000e73c <__aeabi_ui2d>:
1000e73c:	b510      	push	{r4, lr}
1000e73e:	1e04      	subs	r4, r0, #0
1000e740:	d028      	beq.n	1000e794 <__aeabi_ui2d+0x58>
1000e742:	f000 f871 	bl	1000e828 <__clzsi2>
1000e746:	4b15      	ldr	r3, [pc, #84]	; (1000e79c <__aeabi_ui2d+0x60>)
1000e748:	4a15      	ldr	r2, [pc, #84]	; (1000e7a0 <__aeabi_ui2d+0x64>)
1000e74a:	1a1b      	subs	r3, r3, r0
1000e74c:	1ad2      	subs	r2, r2, r3
1000e74e:	2a1f      	cmp	r2, #31
1000e750:	dd15      	ble.n	1000e77e <__aeabi_ui2d+0x42>
1000e752:	4a14      	ldr	r2, [pc, #80]	; (1000e7a4 <__aeabi_ui2d+0x68>)
1000e754:	1ad2      	subs	r2, r2, r3
1000e756:	4094      	lsls	r4, r2
1000e758:	2200      	movs	r2, #0
1000e75a:	0324      	lsls	r4, r4, #12
1000e75c:	055b      	lsls	r3, r3, #21
1000e75e:	0b24      	lsrs	r4, r4, #12
1000e760:	0d5b      	lsrs	r3, r3, #21
1000e762:	2100      	movs	r1, #0
1000e764:	0010      	movs	r0, r2
1000e766:	0324      	lsls	r4, r4, #12
1000e768:	0d0a      	lsrs	r2, r1, #20
1000e76a:	0b24      	lsrs	r4, r4, #12
1000e76c:	0512      	lsls	r2, r2, #20
1000e76e:	4322      	orrs	r2, r4
1000e770:	4c0d      	ldr	r4, [pc, #52]	; (1000e7a8 <__aeabi_ui2d+0x6c>)
1000e772:	051b      	lsls	r3, r3, #20
1000e774:	4022      	ands	r2, r4
1000e776:	4313      	orrs	r3, r2
1000e778:	005b      	lsls	r3, r3, #1
1000e77a:	0859      	lsrs	r1, r3, #1
1000e77c:	bd10      	pop	{r4, pc}
1000e77e:	0021      	movs	r1, r4
1000e780:	4091      	lsls	r1, r2
1000e782:	000a      	movs	r2, r1
1000e784:	210b      	movs	r1, #11
1000e786:	1a08      	subs	r0, r1, r0
1000e788:	40c4      	lsrs	r4, r0
1000e78a:	055b      	lsls	r3, r3, #21
1000e78c:	0324      	lsls	r4, r4, #12
1000e78e:	0b24      	lsrs	r4, r4, #12
1000e790:	0d5b      	lsrs	r3, r3, #21
1000e792:	e7e6      	b.n	1000e762 <__aeabi_ui2d+0x26>
1000e794:	2300      	movs	r3, #0
1000e796:	2400      	movs	r4, #0
1000e798:	2200      	movs	r2, #0
1000e79a:	e7e2      	b.n	1000e762 <__aeabi_ui2d+0x26>
1000e79c:	0000041e 	.word	0x0000041e
1000e7a0:	00000433 	.word	0x00000433
1000e7a4:	00000413 	.word	0x00000413
1000e7a8:	800fffff 	.word	0x800fffff

1000e7ac <__aeabi_cdrcmple>:
1000e7ac:	4684      	mov	ip, r0
1000e7ae:	1c10      	adds	r0, r2, #0
1000e7b0:	4662      	mov	r2, ip
1000e7b2:	468c      	mov	ip, r1
1000e7b4:	1c19      	adds	r1, r3, #0
1000e7b6:	4663      	mov	r3, ip
1000e7b8:	e000      	b.n	1000e7bc <__aeabi_cdcmpeq>
1000e7ba:	46c0      	nop			; (mov r8, r8)

1000e7bc <__aeabi_cdcmpeq>:
1000e7bc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
1000e7be:	f000 f8ef 	bl	1000e9a0 <__ledf2>
1000e7c2:	2800      	cmp	r0, #0
1000e7c4:	d401      	bmi.n	1000e7ca <__aeabi_cdcmpeq+0xe>
1000e7c6:	2100      	movs	r1, #0
1000e7c8:	42c8      	cmn	r0, r1
1000e7ca:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

1000e7cc <__aeabi_dcmpeq>:
1000e7cc:	b510      	push	{r4, lr}
1000e7ce:	f000 f849 	bl	1000e864 <__eqdf2>
1000e7d2:	4240      	negs	r0, r0
1000e7d4:	3001      	adds	r0, #1
1000e7d6:	bd10      	pop	{r4, pc}

1000e7d8 <__aeabi_dcmplt>:
1000e7d8:	b510      	push	{r4, lr}
1000e7da:	f000 f8e1 	bl	1000e9a0 <__ledf2>
1000e7de:	2800      	cmp	r0, #0
1000e7e0:	db01      	blt.n	1000e7e6 <__aeabi_dcmplt+0xe>
1000e7e2:	2000      	movs	r0, #0
1000e7e4:	bd10      	pop	{r4, pc}
1000e7e6:	2001      	movs	r0, #1
1000e7e8:	bd10      	pop	{r4, pc}
1000e7ea:	46c0      	nop			; (mov r8, r8)

1000e7ec <__aeabi_dcmple>:
1000e7ec:	b510      	push	{r4, lr}
1000e7ee:	f000 f8d7 	bl	1000e9a0 <__ledf2>
1000e7f2:	2800      	cmp	r0, #0
1000e7f4:	dd01      	ble.n	1000e7fa <__aeabi_dcmple+0xe>
1000e7f6:	2000      	movs	r0, #0
1000e7f8:	bd10      	pop	{r4, pc}
1000e7fa:	2001      	movs	r0, #1
1000e7fc:	bd10      	pop	{r4, pc}
1000e7fe:	46c0      	nop			; (mov r8, r8)

1000e800 <__aeabi_dcmpgt>:
1000e800:	b510      	push	{r4, lr}
1000e802:	f000 f869 	bl	1000e8d8 <__gedf2>
1000e806:	2800      	cmp	r0, #0
1000e808:	dc01      	bgt.n	1000e80e <__aeabi_dcmpgt+0xe>
1000e80a:	2000      	movs	r0, #0
1000e80c:	bd10      	pop	{r4, pc}
1000e80e:	2001      	movs	r0, #1
1000e810:	bd10      	pop	{r4, pc}
1000e812:	46c0      	nop			; (mov r8, r8)

1000e814 <__aeabi_dcmpge>:
1000e814:	b510      	push	{r4, lr}
1000e816:	f000 f85f 	bl	1000e8d8 <__gedf2>
1000e81a:	2800      	cmp	r0, #0
1000e81c:	da01      	bge.n	1000e822 <__aeabi_dcmpge+0xe>
1000e81e:	2000      	movs	r0, #0
1000e820:	bd10      	pop	{r4, pc}
1000e822:	2001      	movs	r0, #1
1000e824:	bd10      	pop	{r4, pc}
1000e826:	46c0      	nop			; (mov r8, r8)

1000e828 <__clzsi2>:
1000e828:	211c      	movs	r1, #28
1000e82a:	2301      	movs	r3, #1
1000e82c:	041b      	lsls	r3, r3, #16
1000e82e:	4298      	cmp	r0, r3
1000e830:	d301      	bcc.n	1000e836 <__clzsi2+0xe>
1000e832:	0c00      	lsrs	r0, r0, #16
1000e834:	3910      	subs	r1, #16
1000e836:	0a1b      	lsrs	r3, r3, #8
1000e838:	4298      	cmp	r0, r3
1000e83a:	d301      	bcc.n	1000e840 <__clzsi2+0x18>
1000e83c:	0a00      	lsrs	r0, r0, #8
1000e83e:	3908      	subs	r1, #8
1000e840:	091b      	lsrs	r3, r3, #4
1000e842:	4298      	cmp	r0, r3
1000e844:	d301      	bcc.n	1000e84a <__clzsi2+0x22>
1000e846:	0900      	lsrs	r0, r0, #4
1000e848:	3904      	subs	r1, #4
1000e84a:	a202      	add	r2, pc, #8	; (adr r2, 1000e854 <__clzsi2+0x2c>)
1000e84c:	5c10      	ldrb	r0, [r2, r0]
1000e84e:	1840      	adds	r0, r0, r1
1000e850:	4770      	bx	lr
1000e852:	46c0      	nop			; (mov r8, r8)
1000e854:	02020304 	.word	0x02020304
1000e858:	01010101 	.word	0x01010101
	...

1000e864 <__eqdf2>:
1000e864:	b5f0      	push	{r4, r5, r6, r7, lr}
1000e866:	464f      	mov	r7, r9
1000e868:	4646      	mov	r6, r8
1000e86a:	46d6      	mov	lr, sl
1000e86c:	005c      	lsls	r4, r3, #1
1000e86e:	b5c0      	push	{r6, r7, lr}
1000e870:	031f      	lsls	r7, r3, #12
1000e872:	0fdb      	lsrs	r3, r3, #31
1000e874:	469a      	mov	sl, r3
1000e876:	4b17      	ldr	r3, [pc, #92]	; (1000e8d4 <__eqdf2+0x70>)
1000e878:	030e      	lsls	r6, r1, #12
1000e87a:	004d      	lsls	r5, r1, #1
1000e87c:	4684      	mov	ip, r0
1000e87e:	4680      	mov	r8, r0
1000e880:	0b36      	lsrs	r6, r6, #12
1000e882:	0d6d      	lsrs	r5, r5, #21
1000e884:	0fc9      	lsrs	r1, r1, #31
1000e886:	4691      	mov	r9, r2
1000e888:	0b3f      	lsrs	r7, r7, #12
1000e88a:	0d64      	lsrs	r4, r4, #21
1000e88c:	2001      	movs	r0, #1
1000e88e:	429d      	cmp	r5, r3
1000e890:	d008      	beq.n	1000e8a4 <__eqdf2+0x40>
1000e892:	429c      	cmp	r4, r3
1000e894:	d001      	beq.n	1000e89a <__eqdf2+0x36>
1000e896:	42a5      	cmp	r5, r4
1000e898:	d00b      	beq.n	1000e8b2 <__eqdf2+0x4e>
1000e89a:	bc1c      	pop	{r2, r3, r4}
1000e89c:	4690      	mov	r8, r2
1000e89e:	4699      	mov	r9, r3
1000e8a0:	46a2      	mov	sl, r4
1000e8a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000e8a4:	4663      	mov	r3, ip
1000e8a6:	4333      	orrs	r3, r6
1000e8a8:	d1f7      	bne.n	1000e89a <__eqdf2+0x36>
1000e8aa:	42ac      	cmp	r4, r5
1000e8ac:	d1f5      	bne.n	1000e89a <__eqdf2+0x36>
1000e8ae:	433a      	orrs	r2, r7
1000e8b0:	d1f3      	bne.n	1000e89a <__eqdf2+0x36>
1000e8b2:	2001      	movs	r0, #1
1000e8b4:	42be      	cmp	r6, r7
1000e8b6:	d1f0      	bne.n	1000e89a <__eqdf2+0x36>
1000e8b8:	45c8      	cmp	r8, r9
1000e8ba:	d1ee      	bne.n	1000e89a <__eqdf2+0x36>
1000e8bc:	4551      	cmp	r1, sl
1000e8be:	d007      	beq.n	1000e8d0 <__eqdf2+0x6c>
1000e8c0:	2d00      	cmp	r5, #0
1000e8c2:	d1ea      	bne.n	1000e89a <__eqdf2+0x36>
1000e8c4:	4663      	mov	r3, ip
1000e8c6:	431e      	orrs	r6, r3
1000e8c8:	0030      	movs	r0, r6
1000e8ca:	1e46      	subs	r6, r0, #1
1000e8cc:	41b0      	sbcs	r0, r6
1000e8ce:	e7e4      	b.n	1000e89a <__eqdf2+0x36>
1000e8d0:	2000      	movs	r0, #0
1000e8d2:	e7e2      	b.n	1000e89a <__eqdf2+0x36>
1000e8d4:	000007ff 	.word	0x000007ff

1000e8d8 <__gedf2>:
1000e8d8:	b5f0      	push	{r4, r5, r6, r7, lr}
1000e8da:	4645      	mov	r5, r8
1000e8dc:	46de      	mov	lr, fp
1000e8de:	4657      	mov	r7, sl
1000e8e0:	464e      	mov	r6, r9
1000e8e2:	b5e0      	push	{r5, r6, r7, lr}
1000e8e4:	031f      	lsls	r7, r3, #12
1000e8e6:	0b3d      	lsrs	r5, r7, #12
1000e8e8:	4f2c      	ldr	r7, [pc, #176]	; (1000e99c <__gedf2+0xc4>)
1000e8ea:	030e      	lsls	r6, r1, #12
1000e8ec:	004c      	lsls	r4, r1, #1
1000e8ee:	46ab      	mov	fp, r5
1000e8f0:	005d      	lsls	r5, r3, #1
1000e8f2:	4684      	mov	ip, r0
1000e8f4:	0b36      	lsrs	r6, r6, #12
1000e8f6:	0d64      	lsrs	r4, r4, #21
1000e8f8:	0fc9      	lsrs	r1, r1, #31
1000e8fa:	4690      	mov	r8, r2
1000e8fc:	0d6d      	lsrs	r5, r5, #21
1000e8fe:	0fdb      	lsrs	r3, r3, #31
1000e900:	42bc      	cmp	r4, r7
1000e902:	d02a      	beq.n	1000e95a <__gedf2+0x82>
1000e904:	4f25      	ldr	r7, [pc, #148]	; (1000e99c <__gedf2+0xc4>)
1000e906:	42bd      	cmp	r5, r7
1000e908:	d02d      	beq.n	1000e966 <__gedf2+0x8e>
1000e90a:	2c00      	cmp	r4, #0
1000e90c:	d10f      	bne.n	1000e92e <__gedf2+0x56>
1000e90e:	4330      	orrs	r0, r6
1000e910:	0007      	movs	r7, r0
1000e912:	4681      	mov	r9, r0
1000e914:	4278      	negs	r0, r7
1000e916:	4178      	adcs	r0, r7
1000e918:	b2c0      	uxtb	r0, r0
1000e91a:	2d00      	cmp	r5, #0
1000e91c:	d117      	bne.n	1000e94e <__gedf2+0x76>
1000e91e:	465f      	mov	r7, fp
1000e920:	433a      	orrs	r2, r7
1000e922:	d114      	bne.n	1000e94e <__gedf2+0x76>
1000e924:	464b      	mov	r3, r9
1000e926:	2000      	movs	r0, #0
1000e928:	2b00      	cmp	r3, #0
1000e92a:	d00a      	beq.n	1000e942 <__gedf2+0x6a>
1000e92c:	e006      	b.n	1000e93c <__gedf2+0x64>
1000e92e:	2d00      	cmp	r5, #0
1000e930:	d102      	bne.n	1000e938 <__gedf2+0x60>
1000e932:	4658      	mov	r0, fp
1000e934:	4302      	orrs	r2, r0
1000e936:	d001      	beq.n	1000e93c <__gedf2+0x64>
1000e938:	4299      	cmp	r1, r3
1000e93a:	d018      	beq.n	1000e96e <__gedf2+0x96>
1000e93c:	4248      	negs	r0, r1
1000e93e:	2101      	movs	r1, #1
1000e940:	4308      	orrs	r0, r1
1000e942:	bc3c      	pop	{r2, r3, r4, r5}
1000e944:	4690      	mov	r8, r2
1000e946:	4699      	mov	r9, r3
1000e948:	46a2      	mov	sl, r4
1000e94a:	46ab      	mov	fp, r5
1000e94c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000e94e:	2800      	cmp	r0, #0
1000e950:	d0f2      	beq.n	1000e938 <__gedf2+0x60>
1000e952:	2001      	movs	r0, #1
1000e954:	3b01      	subs	r3, #1
1000e956:	4318      	orrs	r0, r3
1000e958:	e7f3      	b.n	1000e942 <__gedf2+0x6a>
1000e95a:	0037      	movs	r7, r6
1000e95c:	4307      	orrs	r7, r0
1000e95e:	d0d1      	beq.n	1000e904 <__gedf2+0x2c>
1000e960:	2002      	movs	r0, #2
1000e962:	4240      	negs	r0, r0
1000e964:	e7ed      	b.n	1000e942 <__gedf2+0x6a>
1000e966:	465f      	mov	r7, fp
1000e968:	4317      	orrs	r7, r2
1000e96a:	d0ce      	beq.n	1000e90a <__gedf2+0x32>
1000e96c:	e7f8      	b.n	1000e960 <__gedf2+0x88>
1000e96e:	42ac      	cmp	r4, r5
1000e970:	dce4      	bgt.n	1000e93c <__gedf2+0x64>
1000e972:	da03      	bge.n	1000e97c <__gedf2+0xa4>
1000e974:	1e48      	subs	r0, r1, #1
1000e976:	2101      	movs	r1, #1
1000e978:	4308      	orrs	r0, r1
1000e97a:	e7e2      	b.n	1000e942 <__gedf2+0x6a>
1000e97c:	455e      	cmp	r6, fp
1000e97e:	d8dd      	bhi.n	1000e93c <__gedf2+0x64>
1000e980:	d006      	beq.n	1000e990 <__gedf2+0xb8>
1000e982:	2000      	movs	r0, #0
1000e984:	455e      	cmp	r6, fp
1000e986:	d2dc      	bcs.n	1000e942 <__gedf2+0x6a>
1000e988:	2301      	movs	r3, #1
1000e98a:	1e48      	subs	r0, r1, #1
1000e98c:	4318      	orrs	r0, r3
1000e98e:	e7d8      	b.n	1000e942 <__gedf2+0x6a>
1000e990:	45c4      	cmp	ip, r8
1000e992:	d8d3      	bhi.n	1000e93c <__gedf2+0x64>
1000e994:	2000      	movs	r0, #0
1000e996:	45c4      	cmp	ip, r8
1000e998:	d3f6      	bcc.n	1000e988 <__gedf2+0xb0>
1000e99a:	e7d2      	b.n	1000e942 <__gedf2+0x6a>
1000e99c:	000007ff 	.word	0x000007ff

1000e9a0 <__ledf2>:
1000e9a0:	b5f0      	push	{r4, r5, r6, r7, lr}
1000e9a2:	464e      	mov	r6, r9
1000e9a4:	4645      	mov	r5, r8
1000e9a6:	46de      	mov	lr, fp
1000e9a8:	4657      	mov	r7, sl
1000e9aa:	005c      	lsls	r4, r3, #1
1000e9ac:	b5e0      	push	{r5, r6, r7, lr}
1000e9ae:	031f      	lsls	r7, r3, #12
1000e9b0:	0fdb      	lsrs	r3, r3, #31
1000e9b2:	4699      	mov	r9, r3
1000e9b4:	4b2a      	ldr	r3, [pc, #168]	; (1000ea60 <__ledf2+0xc0>)
1000e9b6:	030e      	lsls	r6, r1, #12
1000e9b8:	004d      	lsls	r5, r1, #1
1000e9ba:	0fc9      	lsrs	r1, r1, #31
1000e9bc:	4684      	mov	ip, r0
1000e9be:	0b36      	lsrs	r6, r6, #12
1000e9c0:	0d6d      	lsrs	r5, r5, #21
1000e9c2:	468b      	mov	fp, r1
1000e9c4:	4690      	mov	r8, r2
1000e9c6:	0b3f      	lsrs	r7, r7, #12
1000e9c8:	0d64      	lsrs	r4, r4, #21
1000e9ca:	429d      	cmp	r5, r3
1000e9cc:	d020      	beq.n	1000ea10 <__ledf2+0x70>
1000e9ce:	4b24      	ldr	r3, [pc, #144]	; (1000ea60 <__ledf2+0xc0>)
1000e9d0:	429c      	cmp	r4, r3
1000e9d2:	d022      	beq.n	1000ea1a <__ledf2+0x7a>
1000e9d4:	2d00      	cmp	r5, #0
1000e9d6:	d112      	bne.n	1000e9fe <__ledf2+0x5e>
1000e9d8:	4330      	orrs	r0, r6
1000e9da:	4243      	negs	r3, r0
1000e9dc:	4143      	adcs	r3, r0
1000e9de:	b2db      	uxtb	r3, r3
1000e9e0:	2c00      	cmp	r4, #0
1000e9e2:	d01f      	beq.n	1000ea24 <__ledf2+0x84>
1000e9e4:	2b00      	cmp	r3, #0
1000e9e6:	d00c      	beq.n	1000ea02 <__ledf2+0x62>
1000e9e8:	464b      	mov	r3, r9
1000e9ea:	2001      	movs	r0, #1
1000e9ec:	3b01      	subs	r3, #1
1000e9ee:	4303      	orrs	r3, r0
1000e9f0:	0018      	movs	r0, r3
1000e9f2:	bc3c      	pop	{r2, r3, r4, r5}
1000e9f4:	4690      	mov	r8, r2
1000e9f6:	4699      	mov	r9, r3
1000e9f8:	46a2      	mov	sl, r4
1000e9fa:	46ab      	mov	fp, r5
1000e9fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000e9fe:	2c00      	cmp	r4, #0
1000ea00:	d016      	beq.n	1000ea30 <__ledf2+0x90>
1000ea02:	45cb      	cmp	fp, r9
1000ea04:	d017      	beq.n	1000ea36 <__ledf2+0x96>
1000ea06:	465b      	mov	r3, fp
1000ea08:	4259      	negs	r1, r3
1000ea0a:	2301      	movs	r3, #1
1000ea0c:	430b      	orrs	r3, r1
1000ea0e:	e7ef      	b.n	1000e9f0 <__ledf2+0x50>
1000ea10:	0031      	movs	r1, r6
1000ea12:	2302      	movs	r3, #2
1000ea14:	4301      	orrs	r1, r0
1000ea16:	d1eb      	bne.n	1000e9f0 <__ledf2+0x50>
1000ea18:	e7d9      	b.n	1000e9ce <__ledf2+0x2e>
1000ea1a:	0039      	movs	r1, r7
1000ea1c:	2302      	movs	r3, #2
1000ea1e:	4311      	orrs	r1, r2
1000ea20:	d1e6      	bne.n	1000e9f0 <__ledf2+0x50>
1000ea22:	e7d7      	b.n	1000e9d4 <__ledf2+0x34>
1000ea24:	433a      	orrs	r2, r7
1000ea26:	d1dd      	bne.n	1000e9e4 <__ledf2+0x44>
1000ea28:	2300      	movs	r3, #0
1000ea2a:	2800      	cmp	r0, #0
1000ea2c:	d0e0      	beq.n	1000e9f0 <__ledf2+0x50>
1000ea2e:	e7ea      	b.n	1000ea06 <__ledf2+0x66>
1000ea30:	433a      	orrs	r2, r7
1000ea32:	d1e6      	bne.n	1000ea02 <__ledf2+0x62>
1000ea34:	e7e7      	b.n	1000ea06 <__ledf2+0x66>
1000ea36:	42a5      	cmp	r5, r4
1000ea38:	dce5      	bgt.n	1000ea06 <__ledf2+0x66>
1000ea3a:	db05      	blt.n	1000ea48 <__ledf2+0xa8>
1000ea3c:	42be      	cmp	r6, r7
1000ea3e:	d8e2      	bhi.n	1000ea06 <__ledf2+0x66>
1000ea40:	d007      	beq.n	1000ea52 <__ledf2+0xb2>
1000ea42:	2300      	movs	r3, #0
1000ea44:	42be      	cmp	r6, r7
1000ea46:	d2d3      	bcs.n	1000e9f0 <__ledf2+0x50>
1000ea48:	4659      	mov	r1, fp
1000ea4a:	2301      	movs	r3, #1
1000ea4c:	3901      	subs	r1, #1
1000ea4e:	430b      	orrs	r3, r1
1000ea50:	e7ce      	b.n	1000e9f0 <__ledf2+0x50>
1000ea52:	45c4      	cmp	ip, r8
1000ea54:	d8d7      	bhi.n	1000ea06 <__ledf2+0x66>
1000ea56:	2300      	movs	r3, #0
1000ea58:	45c4      	cmp	ip, r8
1000ea5a:	d3f5      	bcc.n	1000ea48 <__ledf2+0xa8>
1000ea5c:	e7c8      	b.n	1000e9f0 <__ledf2+0x50>
1000ea5e:	46c0      	nop			; (mov r8, r8)
1000ea60:	000007ff 	.word	0x000007ff

1000ea64 <__libc_init_array>:
1000ea64:	b570      	push	{r4, r5, r6, lr}
1000ea66:	2600      	movs	r6, #0
1000ea68:	4d0c      	ldr	r5, [pc, #48]	; (1000ea9c <__libc_init_array+0x38>)
1000ea6a:	4c0d      	ldr	r4, [pc, #52]	; (1000eaa0 <__libc_init_array+0x3c>)
1000ea6c:	1b64      	subs	r4, r4, r5
1000ea6e:	10a4      	asrs	r4, r4, #2
1000ea70:	42a6      	cmp	r6, r4
1000ea72:	d109      	bne.n	1000ea88 <__libc_init_array+0x24>
1000ea74:	2600      	movs	r6, #0
1000ea76:	f001 fefb 	bl	10010870 <_init>
1000ea7a:	4d0a      	ldr	r5, [pc, #40]	; (1000eaa4 <__libc_init_array+0x40>)
1000ea7c:	4c0a      	ldr	r4, [pc, #40]	; (1000eaa8 <__libc_init_array+0x44>)
1000ea7e:	1b64      	subs	r4, r4, r5
1000ea80:	10a4      	asrs	r4, r4, #2
1000ea82:	42a6      	cmp	r6, r4
1000ea84:	d105      	bne.n	1000ea92 <__libc_init_array+0x2e>
1000ea86:	bd70      	pop	{r4, r5, r6, pc}
1000ea88:	00b3      	lsls	r3, r6, #2
1000ea8a:	58eb      	ldr	r3, [r5, r3]
1000ea8c:	4798      	blx	r3
1000ea8e:	3601      	adds	r6, #1
1000ea90:	e7ee      	b.n	1000ea70 <__libc_init_array+0xc>
1000ea92:	00b3      	lsls	r3, r6, #2
1000ea94:	58eb      	ldr	r3, [r5, r3]
1000ea96:	4798      	blx	r3
1000ea98:	3601      	adds	r6, #1
1000ea9a:	e7f2      	b.n	1000ea82 <__libc_init_array+0x1e>
1000ea9c:	1001087c 	.word	0x1001087c
1000eaa0:	1001087c 	.word	0x1001087c
1000eaa4:	1001087c 	.word	0x1001087c
1000eaa8:	10010880 	.word	0x10010880

1000eaac <memcmp>:
1000eaac:	b530      	push	{r4, r5, lr}
1000eaae:	2400      	movs	r4, #0
1000eab0:	42a2      	cmp	r2, r4
1000eab2:	d101      	bne.n	1000eab8 <memcmp+0xc>
1000eab4:	2000      	movs	r0, #0
1000eab6:	e005      	b.n	1000eac4 <memcmp+0x18>
1000eab8:	5d03      	ldrb	r3, [r0, r4]
1000eaba:	1c65      	adds	r5, r4, #1
1000eabc:	5d0c      	ldrb	r4, [r1, r4]
1000eabe:	42a3      	cmp	r3, r4
1000eac0:	d001      	beq.n	1000eac6 <memcmp+0x1a>
1000eac2:	1b18      	subs	r0, r3, r4
1000eac4:	bd30      	pop	{r4, r5, pc}
1000eac6:	002c      	movs	r4, r5
1000eac8:	e7f2      	b.n	1000eab0 <memcmp+0x4>

1000eaca <memcpy>:
1000eaca:	2300      	movs	r3, #0
1000eacc:	b510      	push	{r4, lr}
1000eace:	429a      	cmp	r2, r3
1000ead0:	d100      	bne.n	1000ead4 <memcpy+0xa>
1000ead2:	bd10      	pop	{r4, pc}
1000ead4:	5ccc      	ldrb	r4, [r1, r3]
1000ead6:	54c4      	strb	r4, [r0, r3]
1000ead8:	3301      	adds	r3, #1
1000eada:	e7f8      	b.n	1000eace <memcpy+0x4>

1000eadc <memset>:
1000eadc:	0003      	movs	r3, r0
1000eade:	1882      	adds	r2, r0, r2
1000eae0:	4293      	cmp	r3, r2
1000eae2:	d100      	bne.n	1000eae6 <memset+0xa>
1000eae4:	4770      	bx	lr
1000eae6:	7019      	strb	r1, [r3, #0]
1000eae8:	3301      	adds	r3, #1
1000eaea:	e7f9      	b.n	1000eae0 <memset+0x4>

1000eaec <iprintf>:
1000eaec:	b40f      	push	{r0, r1, r2, r3}
1000eaee:	4b0b      	ldr	r3, [pc, #44]	; (1000eb1c <iprintf+0x30>)
1000eaf0:	b513      	push	{r0, r1, r4, lr}
1000eaf2:	681c      	ldr	r4, [r3, #0]
1000eaf4:	2c00      	cmp	r4, #0
1000eaf6:	d005      	beq.n	1000eb04 <iprintf+0x18>
1000eaf8:	69a3      	ldr	r3, [r4, #24]
1000eafa:	2b00      	cmp	r3, #0
1000eafc:	d102      	bne.n	1000eb04 <iprintf+0x18>
1000eafe:	0020      	movs	r0, r4
1000eb00:	f000 fb42 	bl	1000f188 <__sinit>
1000eb04:	ab05      	add	r3, sp, #20
1000eb06:	9a04      	ldr	r2, [sp, #16]
1000eb08:	68a1      	ldr	r1, [r4, #8]
1000eb0a:	0020      	movs	r0, r4
1000eb0c:	9301      	str	r3, [sp, #4]
1000eb0e:	f000 fd17 	bl	1000f540 <_vfiprintf_r>
1000eb12:	bc16      	pop	{r1, r2, r4}
1000eb14:	bc08      	pop	{r3}
1000eb16:	b004      	add	sp, #16
1000eb18:	4718      	bx	r3
1000eb1a:	46c0      	nop			; (mov r8, r8)
1000eb1c:	1001089c 	.word	0x1001089c

1000eb20 <putchar>:
1000eb20:	4b08      	ldr	r3, [pc, #32]	; (1000eb44 <putchar+0x24>)
1000eb22:	b570      	push	{r4, r5, r6, lr}
1000eb24:	681c      	ldr	r4, [r3, #0]
1000eb26:	0005      	movs	r5, r0
1000eb28:	2c00      	cmp	r4, #0
1000eb2a:	d005      	beq.n	1000eb38 <putchar+0x18>
1000eb2c:	69a3      	ldr	r3, [r4, #24]
1000eb2e:	2b00      	cmp	r3, #0
1000eb30:	d102      	bne.n	1000eb38 <putchar+0x18>
1000eb32:	0020      	movs	r0, r4
1000eb34:	f000 fb28 	bl	1000f188 <__sinit>
1000eb38:	0029      	movs	r1, r5
1000eb3a:	68a2      	ldr	r2, [r4, #8]
1000eb3c:	0020      	movs	r0, r4
1000eb3e:	f000 ffa3 	bl	1000fa88 <_putc_r>
1000eb42:	bd70      	pop	{r4, r5, r6, pc}
1000eb44:	1001089c 	.word	0x1001089c

1000eb48 <_puts_r>:
1000eb48:	b570      	push	{r4, r5, r6, lr}
1000eb4a:	0005      	movs	r5, r0
1000eb4c:	000e      	movs	r6, r1
1000eb4e:	2800      	cmp	r0, #0
1000eb50:	d004      	beq.n	1000eb5c <_puts_r+0x14>
1000eb52:	6983      	ldr	r3, [r0, #24]
1000eb54:	2b00      	cmp	r3, #0
1000eb56:	d101      	bne.n	1000eb5c <_puts_r+0x14>
1000eb58:	f000 fb16 	bl	1000f188 <__sinit>
1000eb5c:	69ab      	ldr	r3, [r5, #24]
1000eb5e:	68ac      	ldr	r4, [r5, #8]
1000eb60:	2b00      	cmp	r3, #0
1000eb62:	d102      	bne.n	1000eb6a <_puts_r+0x22>
1000eb64:	0028      	movs	r0, r5
1000eb66:	f000 fb0f 	bl	1000f188 <__sinit>
1000eb6a:	4b24      	ldr	r3, [pc, #144]	; (1000ebfc <_puts_r+0xb4>)
1000eb6c:	429c      	cmp	r4, r3
1000eb6e:	d10f      	bne.n	1000eb90 <_puts_r+0x48>
1000eb70:	686c      	ldr	r4, [r5, #4]
1000eb72:	89a3      	ldrh	r3, [r4, #12]
1000eb74:	071b      	lsls	r3, r3, #28
1000eb76:	d502      	bpl.n	1000eb7e <_puts_r+0x36>
1000eb78:	6923      	ldr	r3, [r4, #16]
1000eb7a:	2b00      	cmp	r3, #0
1000eb7c:	d120      	bne.n	1000ebc0 <_puts_r+0x78>
1000eb7e:	0021      	movs	r1, r4
1000eb80:	0028      	movs	r0, r5
1000eb82:	f000 f993 	bl	1000eeac <__swsetup_r>
1000eb86:	2800      	cmp	r0, #0
1000eb88:	d01a      	beq.n	1000ebc0 <_puts_r+0x78>
1000eb8a:	2001      	movs	r0, #1
1000eb8c:	4240      	negs	r0, r0
1000eb8e:	bd70      	pop	{r4, r5, r6, pc}
1000eb90:	4b1b      	ldr	r3, [pc, #108]	; (1000ec00 <_puts_r+0xb8>)
1000eb92:	429c      	cmp	r4, r3
1000eb94:	d101      	bne.n	1000eb9a <_puts_r+0x52>
1000eb96:	68ac      	ldr	r4, [r5, #8]
1000eb98:	e7eb      	b.n	1000eb72 <_puts_r+0x2a>
1000eb9a:	4b1a      	ldr	r3, [pc, #104]	; (1000ec04 <_puts_r+0xbc>)
1000eb9c:	429c      	cmp	r4, r3
1000eb9e:	d1e8      	bne.n	1000eb72 <_puts_r+0x2a>
1000eba0:	68ec      	ldr	r4, [r5, #12]
1000eba2:	e7e6      	b.n	1000eb72 <_puts_r+0x2a>
1000eba4:	3b01      	subs	r3, #1
1000eba6:	3601      	adds	r6, #1
1000eba8:	60a3      	str	r3, [r4, #8]
1000ebaa:	2b00      	cmp	r3, #0
1000ebac:	da04      	bge.n	1000ebb8 <_puts_r+0x70>
1000ebae:	69a2      	ldr	r2, [r4, #24]
1000ebb0:	4293      	cmp	r3, r2
1000ebb2:	db16      	blt.n	1000ebe2 <_puts_r+0x9a>
1000ebb4:	290a      	cmp	r1, #10
1000ebb6:	d014      	beq.n	1000ebe2 <_puts_r+0x9a>
1000ebb8:	6823      	ldr	r3, [r4, #0]
1000ebba:	1c5a      	adds	r2, r3, #1
1000ebbc:	6022      	str	r2, [r4, #0]
1000ebbe:	7019      	strb	r1, [r3, #0]
1000ebc0:	7831      	ldrb	r1, [r6, #0]
1000ebc2:	68a3      	ldr	r3, [r4, #8]
1000ebc4:	2900      	cmp	r1, #0
1000ebc6:	d1ed      	bne.n	1000eba4 <_puts_r+0x5c>
1000ebc8:	3b01      	subs	r3, #1
1000ebca:	60a3      	str	r3, [r4, #8]
1000ebcc:	2b00      	cmp	r3, #0
1000ebce:	da0f      	bge.n	1000ebf0 <_puts_r+0xa8>
1000ebd0:	0022      	movs	r2, r4
1000ebd2:	310a      	adds	r1, #10
1000ebd4:	0028      	movs	r0, r5
1000ebd6:	f000 f913 	bl	1000ee00 <__swbuf_r>
1000ebda:	1c43      	adds	r3, r0, #1
1000ebdc:	d0d5      	beq.n	1000eb8a <_puts_r+0x42>
1000ebde:	200a      	movs	r0, #10
1000ebe0:	e7d5      	b.n	1000eb8e <_puts_r+0x46>
1000ebe2:	0022      	movs	r2, r4
1000ebe4:	0028      	movs	r0, r5
1000ebe6:	f000 f90b 	bl	1000ee00 <__swbuf_r>
1000ebea:	1c43      	adds	r3, r0, #1
1000ebec:	d1e8      	bne.n	1000ebc0 <_puts_r+0x78>
1000ebee:	e7cc      	b.n	1000eb8a <_puts_r+0x42>
1000ebf0:	200a      	movs	r0, #10
1000ebf2:	6823      	ldr	r3, [r4, #0]
1000ebf4:	1c5a      	adds	r2, r3, #1
1000ebf6:	6022      	str	r2, [r4, #0]
1000ebf8:	7018      	strb	r0, [r3, #0]
1000ebfa:	e7c8      	b.n	1000eb8e <_puts_r+0x46>
1000ebfc:	100107fc 	.word	0x100107fc
1000ec00:	1001081c 	.word	0x1001081c
1000ec04:	100107dc 	.word	0x100107dc

1000ec08 <puts>:
1000ec08:	b510      	push	{r4, lr}
1000ec0a:	4b03      	ldr	r3, [pc, #12]	; (1000ec18 <puts+0x10>)
1000ec0c:	0001      	movs	r1, r0
1000ec0e:	6818      	ldr	r0, [r3, #0]
1000ec10:	f7ff ff9a 	bl	1000eb48 <_puts_r>
1000ec14:	bd10      	pop	{r4, pc}
1000ec16:	46c0      	nop			; (mov r8, r8)
1000ec18:	1001089c 	.word	0x1001089c

1000ec1c <rand>:
1000ec1c:	4b15      	ldr	r3, [pc, #84]	; (1000ec74 <rand+0x58>)
1000ec1e:	b510      	push	{r4, lr}
1000ec20:	681c      	ldr	r4, [r3, #0]
1000ec22:	6ba3      	ldr	r3, [r4, #56]	; 0x38
1000ec24:	2b00      	cmp	r3, #0
1000ec26:	d115      	bne.n	1000ec54 <rand+0x38>
1000ec28:	2018      	movs	r0, #24
1000ec2a:	f000 fbaf 	bl	1000f38c <malloc>
1000ec2e:	4b12      	ldr	r3, [pc, #72]	; (1000ec78 <rand+0x5c>)
1000ec30:	63a0      	str	r0, [r4, #56]	; 0x38
1000ec32:	8003      	strh	r3, [r0, #0]
1000ec34:	4b11      	ldr	r3, [pc, #68]	; (1000ec7c <rand+0x60>)
1000ec36:	2201      	movs	r2, #1
1000ec38:	8043      	strh	r3, [r0, #2]
1000ec3a:	4b11      	ldr	r3, [pc, #68]	; (1000ec80 <rand+0x64>)
1000ec3c:	8083      	strh	r3, [r0, #4]
1000ec3e:	4b11      	ldr	r3, [pc, #68]	; (1000ec84 <rand+0x68>)
1000ec40:	80c3      	strh	r3, [r0, #6]
1000ec42:	4b11      	ldr	r3, [pc, #68]	; (1000ec88 <rand+0x6c>)
1000ec44:	8103      	strh	r3, [r0, #8]
1000ec46:	2305      	movs	r3, #5
1000ec48:	8143      	strh	r3, [r0, #10]
1000ec4a:	3306      	adds	r3, #6
1000ec4c:	8183      	strh	r3, [r0, #12]
1000ec4e:	2300      	movs	r3, #0
1000ec50:	6102      	str	r2, [r0, #16]
1000ec52:	6143      	str	r3, [r0, #20]
1000ec54:	6ba4      	ldr	r4, [r4, #56]	; 0x38
1000ec56:	4a0d      	ldr	r2, [pc, #52]	; (1000ec8c <rand+0x70>)
1000ec58:	6920      	ldr	r0, [r4, #16]
1000ec5a:	6961      	ldr	r1, [r4, #20]
1000ec5c:	4b0c      	ldr	r3, [pc, #48]	; (1000ec90 <rand+0x74>)
1000ec5e:	f001 f827 	bl	1000fcb0 <__aeabi_lmul>
1000ec62:	2201      	movs	r2, #1
1000ec64:	2300      	movs	r3, #0
1000ec66:	1880      	adds	r0, r0, r2
1000ec68:	4159      	adcs	r1, r3
1000ec6a:	6120      	str	r0, [r4, #16]
1000ec6c:	6161      	str	r1, [r4, #20]
1000ec6e:	0048      	lsls	r0, r1, #1
1000ec70:	0840      	lsrs	r0, r0, #1
1000ec72:	bd10      	pop	{r4, pc}
1000ec74:	1001089c 	.word	0x1001089c
1000ec78:	0000330e 	.word	0x0000330e
1000ec7c:	ffffabcd 	.word	0xffffabcd
1000ec80:	00001234 	.word	0x00001234
1000ec84:	ffffe66d 	.word	0xffffe66d
1000ec88:	ffffdeec 	.word	0xffffdeec
1000ec8c:	4c957f2d 	.word	0x4c957f2d
1000ec90:	5851f42d 	.word	0x5851f42d

1000ec94 <setbuf>:
1000ec94:	424a      	negs	r2, r1
1000ec96:	414a      	adcs	r2, r1
1000ec98:	2380      	movs	r3, #128	; 0x80
1000ec9a:	b510      	push	{r4, lr}
1000ec9c:	0052      	lsls	r2, r2, #1
1000ec9e:	00db      	lsls	r3, r3, #3
1000eca0:	f000 f802 	bl	1000eca8 <setvbuf>
1000eca4:	bd10      	pop	{r4, pc}
	...

1000eca8 <setvbuf>:
1000eca8:	b5f0      	push	{r4, r5, r6, r7, lr}
1000ecaa:	001d      	movs	r5, r3
1000ecac:	4b4f      	ldr	r3, [pc, #316]	; (1000edec <setvbuf+0x144>)
1000ecae:	b085      	sub	sp, #20
1000ecb0:	681e      	ldr	r6, [r3, #0]
1000ecb2:	0004      	movs	r4, r0
1000ecb4:	000f      	movs	r7, r1
1000ecb6:	9200      	str	r2, [sp, #0]
1000ecb8:	2e00      	cmp	r6, #0
1000ecba:	d005      	beq.n	1000ecc8 <setvbuf+0x20>
1000ecbc:	69b3      	ldr	r3, [r6, #24]
1000ecbe:	2b00      	cmp	r3, #0
1000ecc0:	d102      	bne.n	1000ecc8 <setvbuf+0x20>
1000ecc2:	0030      	movs	r0, r6
1000ecc4:	f000 fa60 	bl	1000f188 <__sinit>
1000ecc8:	4b49      	ldr	r3, [pc, #292]	; (1000edf0 <setvbuf+0x148>)
1000ecca:	429c      	cmp	r4, r3
1000eccc:	d150      	bne.n	1000ed70 <setvbuf+0xc8>
1000ecce:	6874      	ldr	r4, [r6, #4]
1000ecd0:	9b00      	ldr	r3, [sp, #0]
1000ecd2:	2b02      	cmp	r3, #2
1000ecd4:	d005      	beq.n	1000ece2 <setvbuf+0x3a>
1000ecd6:	2b01      	cmp	r3, #1
1000ecd8:	d900      	bls.n	1000ecdc <setvbuf+0x34>
1000ecda:	e084      	b.n	1000ede6 <setvbuf+0x13e>
1000ecdc:	2d00      	cmp	r5, #0
1000ecde:	da00      	bge.n	1000ece2 <setvbuf+0x3a>
1000ece0:	e081      	b.n	1000ede6 <setvbuf+0x13e>
1000ece2:	0021      	movs	r1, r4
1000ece4:	0030      	movs	r0, r6
1000ece6:	f000 f9e1 	bl	1000f0ac <_fflush_r>
1000ecea:	6b61      	ldr	r1, [r4, #52]	; 0x34
1000ecec:	2900      	cmp	r1, #0
1000ecee:	d008      	beq.n	1000ed02 <setvbuf+0x5a>
1000ecf0:	0023      	movs	r3, r4
1000ecf2:	3344      	adds	r3, #68	; 0x44
1000ecf4:	4299      	cmp	r1, r3
1000ecf6:	d002      	beq.n	1000ecfe <setvbuf+0x56>
1000ecf8:	0030      	movs	r0, r6
1000ecfa:	f000 fb51 	bl	1000f3a0 <_free_r>
1000ecfe:	2300      	movs	r3, #0
1000ed00:	6363      	str	r3, [r4, #52]	; 0x34
1000ed02:	2300      	movs	r3, #0
1000ed04:	61a3      	str	r3, [r4, #24]
1000ed06:	6063      	str	r3, [r4, #4]
1000ed08:	89a3      	ldrh	r3, [r4, #12]
1000ed0a:	061b      	lsls	r3, r3, #24
1000ed0c:	d503      	bpl.n	1000ed16 <setvbuf+0x6e>
1000ed0e:	6921      	ldr	r1, [r4, #16]
1000ed10:	0030      	movs	r0, r6
1000ed12:	f000 fb45 	bl	1000f3a0 <_free_r>
1000ed16:	89a3      	ldrh	r3, [r4, #12]
1000ed18:	4a36      	ldr	r2, [pc, #216]	; (1000edf4 <setvbuf+0x14c>)
1000ed1a:	4013      	ands	r3, r2
1000ed1c:	81a3      	strh	r3, [r4, #12]
1000ed1e:	9b00      	ldr	r3, [sp, #0]
1000ed20:	2b02      	cmp	r3, #2
1000ed22:	d05a      	beq.n	1000edda <setvbuf+0x132>
1000ed24:	ab03      	add	r3, sp, #12
1000ed26:	aa02      	add	r2, sp, #8
1000ed28:	0021      	movs	r1, r4
1000ed2a:	0030      	movs	r0, r6
1000ed2c:	f000 fac2 	bl	1000f2b4 <__swhatbuf_r>
1000ed30:	89a3      	ldrh	r3, [r4, #12]
1000ed32:	4318      	orrs	r0, r3
1000ed34:	81a0      	strh	r0, [r4, #12]
1000ed36:	2d00      	cmp	r5, #0
1000ed38:	d124      	bne.n	1000ed84 <setvbuf+0xdc>
1000ed3a:	9d02      	ldr	r5, [sp, #8]
1000ed3c:	0028      	movs	r0, r5
1000ed3e:	f000 fb25 	bl	1000f38c <malloc>
1000ed42:	9501      	str	r5, [sp, #4]
1000ed44:	1e07      	subs	r7, r0, #0
1000ed46:	d142      	bne.n	1000edce <setvbuf+0x126>
1000ed48:	9b02      	ldr	r3, [sp, #8]
1000ed4a:	9301      	str	r3, [sp, #4]
1000ed4c:	42ab      	cmp	r3, r5
1000ed4e:	d139      	bne.n	1000edc4 <setvbuf+0x11c>
1000ed50:	2001      	movs	r0, #1
1000ed52:	4240      	negs	r0, r0
1000ed54:	2302      	movs	r3, #2
1000ed56:	89a2      	ldrh	r2, [r4, #12]
1000ed58:	4313      	orrs	r3, r2
1000ed5a:	81a3      	strh	r3, [r4, #12]
1000ed5c:	2300      	movs	r3, #0
1000ed5e:	60a3      	str	r3, [r4, #8]
1000ed60:	0023      	movs	r3, r4
1000ed62:	3347      	adds	r3, #71	; 0x47
1000ed64:	6023      	str	r3, [r4, #0]
1000ed66:	6123      	str	r3, [r4, #16]
1000ed68:	2301      	movs	r3, #1
1000ed6a:	6163      	str	r3, [r4, #20]
1000ed6c:	b005      	add	sp, #20
1000ed6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000ed70:	4b21      	ldr	r3, [pc, #132]	; (1000edf8 <setvbuf+0x150>)
1000ed72:	429c      	cmp	r4, r3
1000ed74:	d101      	bne.n	1000ed7a <setvbuf+0xd2>
1000ed76:	68b4      	ldr	r4, [r6, #8]
1000ed78:	e7aa      	b.n	1000ecd0 <setvbuf+0x28>
1000ed7a:	4b20      	ldr	r3, [pc, #128]	; (1000edfc <setvbuf+0x154>)
1000ed7c:	429c      	cmp	r4, r3
1000ed7e:	d1a7      	bne.n	1000ecd0 <setvbuf+0x28>
1000ed80:	68f4      	ldr	r4, [r6, #12]
1000ed82:	e7a5      	b.n	1000ecd0 <setvbuf+0x28>
1000ed84:	2f00      	cmp	r7, #0
1000ed86:	d0d9      	beq.n	1000ed3c <setvbuf+0x94>
1000ed88:	69b3      	ldr	r3, [r6, #24]
1000ed8a:	2b00      	cmp	r3, #0
1000ed8c:	d102      	bne.n	1000ed94 <setvbuf+0xec>
1000ed8e:	0030      	movs	r0, r6
1000ed90:	f000 f9fa 	bl	1000f188 <__sinit>
1000ed94:	9b00      	ldr	r3, [sp, #0]
1000ed96:	2b01      	cmp	r3, #1
1000ed98:	d103      	bne.n	1000eda2 <setvbuf+0xfa>
1000ed9a:	89a3      	ldrh	r3, [r4, #12]
1000ed9c:	9a00      	ldr	r2, [sp, #0]
1000ed9e:	431a      	orrs	r2, r3
1000eda0:	81a2      	strh	r2, [r4, #12]
1000eda2:	2008      	movs	r0, #8
1000eda4:	89a3      	ldrh	r3, [r4, #12]
1000eda6:	6027      	str	r7, [r4, #0]
1000eda8:	6127      	str	r7, [r4, #16]
1000edaa:	6165      	str	r5, [r4, #20]
1000edac:	4018      	ands	r0, r3
1000edae:	d018      	beq.n	1000ede2 <setvbuf+0x13a>
1000edb0:	2001      	movs	r0, #1
1000edb2:	4018      	ands	r0, r3
1000edb4:	2300      	movs	r3, #0
1000edb6:	4298      	cmp	r0, r3
1000edb8:	d011      	beq.n	1000edde <setvbuf+0x136>
1000edba:	426d      	negs	r5, r5
1000edbc:	60a3      	str	r3, [r4, #8]
1000edbe:	61a5      	str	r5, [r4, #24]
1000edc0:	0018      	movs	r0, r3
1000edc2:	e7d3      	b.n	1000ed6c <setvbuf+0xc4>
1000edc4:	9801      	ldr	r0, [sp, #4]
1000edc6:	f000 fae1 	bl	1000f38c <malloc>
1000edca:	1e07      	subs	r7, r0, #0
1000edcc:	d0c0      	beq.n	1000ed50 <setvbuf+0xa8>
1000edce:	2380      	movs	r3, #128	; 0x80
1000edd0:	89a2      	ldrh	r2, [r4, #12]
1000edd2:	9d01      	ldr	r5, [sp, #4]
1000edd4:	4313      	orrs	r3, r2
1000edd6:	81a3      	strh	r3, [r4, #12]
1000edd8:	e7d6      	b.n	1000ed88 <setvbuf+0xe0>
1000edda:	2000      	movs	r0, #0
1000eddc:	e7ba      	b.n	1000ed54 <setvbuf+0xac>
1000edde:	60a5      	str	r5, [r4, #8]
1000ede0:	e7c4      	b.n	1000ed6c <setvbuf+0xc4>
1000ede2:	60a0      	str	r0, [r4, #8]
1000ede4:	e7c2      	b.n	1000ed6c <setvbuf+0xc4>
1000ede6:	2001      	movs	r0, #1
1000ede8:	4240      	negs	r0, r0
1000edea:	e7bf      	b.n	1000ed6c <setvbuf+0xc4>
1000edec:	1001089c 	.word	0x1001089c
1000edf0:	100107fc 	.word	0x100107fc
1000edf4:	fffff35c 	.word	0xfffff35c
1000edf8:	1001081c 	.word	0x1001081c
1000edfc:	100107dc 	.word	0x100107dc

1000ee00 <__swbuf_r>:
1000ee00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000ee02:	0005      	movs	r5, r0
1000ee04:	000e      	movs	r6, r1
1000ee06:	0014      	movs	r4, r2
1000ee08:	2800      	cmp	r0, #0
1000ee0a:	d004      	beq.n	1000ee16 <__swbuf_r+0x16>
1000ee0c:	6983      	ldr	r3, [r0, #24]
1000ee0e:	2b00      	cmp	r3, #0
1000ee10:	d101      	bne.n	1000ee16 <__swbuf_r+0x16>
1000ee12:	f000 f9b9 	bl	1000f188 <__sinit>
1000ee16:	4b22      	ldr	r3, [pc, #136]	; (1000eea0 <__swbuf_r+0xa0>)
1000ee18:	429c      	cmp	r4, r3
1000ee1a:	d12d      	bne.n	1000ee78 <__swbuf_r+0x78>
1000ee1c:	686c      	ldr	r4, [r5, #4]
1000ee1e:	69a3      	ldr	r3, [r4, #24]
1000ee20:	60a3      	str	r3, [r4, #8]
1000ee22:	89a3      	ldrh	r3, [r4, #12]
1000ee24:	071b      	lsls	r3, r3, #28
1000ee26:	d531      	bpl.n	1000ee8c <__swbuf_r+0x8c>
1000ee28:	6923      	ldr	r3, [r4, #16]
1000ee2a:	2b00      	cmp	r3, #0
1000ee2c:	d02e      	beq.n	1000ee8c <__swbuf_r+0x8c>
1000ee2e:	6823      	ldr	r3, [r4, #0]
1000ee30:	6922      	ldr	r2, [r4, #16]
1000ee32:	b2f7      	uxtb	r7, r6
1000ee34:	1a98      	subs	r0, r3, r2
1000ee36:	6963      	ldr	r3, [r4, #20]
1000ee38:	b2f6      	uxtb	r6, r6
1000ee3a:	4298      	cmp	r0, r3
1000ee3c:	db05      	blt.n	1000ee4a <__swbuf_r+0x4a>
1000ee3e:	0021      	movs	r1, r4
1000ee40:	0028      	movs	r0, r5
1000ee42:	f000 f933 	bl	1000f0ac <_fflush_r>
1000ee46:	2800      	cmp	r0, #0
1000ee48:	d126      	bne.n	1000ee98 <__swbuf_r+0x98>
1000ee4a:	68a3      	ldr	r3, [r4, #8]
1000ee4c:	3001      	adds	r0, #1
1000ee4e:	3b01      	subs	r3, #1
1000ee50:	60a3      	str	r3, [r4, #8]
1000ee52:	6823      	ldr	r3, [r4, #0]
1000ee54:	1c5a      	adds	r2, r3, #1
1000ee56:	6022      	str	r2, [r4, #0]
1000ee58:	701f      	strb	r7, [r3, #0]
1000ee5a:	6963      	ldr	r3, [r4, #20]
1000ee5c:	4298      	cmp	r0, r3
1000ee5e:	d004      	beq.n	1000ee6a <__swbuf_r+0x6a>
1000ee60:	89a3      	ldrh	r3, [r4, #12]
1000ee62:	07db      	lsls	r3, r3, #31
1000ee64:	d51a      	bpl.n	1000ee9c <__swbuf_r+0x9c>
1000ee66:	2e0a      	cmp	r6, #10
1000ee68:	d118      	bne.n	1000ee9c <__swbuf_r+0x9c>
1000ee6a:	0021      	movs	r1, r4
1000ee6c:	0028      	movs	r0, r5
1000ee6e:	f000 f91d 	bl	1000f0ac <_fflush_r>
1000ee72:	2800      	cmp	r0, #0
1000ee74:	d012      	beq.n	1000ee9c <__swbuf_r+0x9c>
1000ee76:	e00f      	b.n	1000ee98 <__swbuf_r+0x98>
1000ee78:	4b0a      	ldr	r3, [pc, #40]	; (1000eea4 <__swbuf_r+0xa4>)
1000ee7a:	429c      	cmp	r4, r3
1000ee7c:	d101      	bne.n	1000ee82 <__swbuf_r+0x82>
1000ee7e:	68ac      	ldr	r4, [r5, #8]
1000ee80:	e7cd      	b.n	1000ee1e <__swbuf_r+0x1e>
1000ee82:	4b09      	ldr	r3, [pc, #36]	; (1000eea8 <__swbuf_r+0xa8>)
1000ee84:	429c      	cmp	r4, r3
1000ee86:	d1ca      	bne.n	1000ee1e <__swbuf_r+0x1e>
1000ee88:	68ec      	ldr	r4, [r5, #12]
1000ee8a:	e7c8      	b.n	1000ee1e <__swbuf_r+0x1e>
1000ee8c:	0021      	movs	r1, r4
1000ee8e:	0028      	movs	r0, r5
1000ee90:	f000 f80c 	bl	1000eeac <__swsetup_r>
1000ee94:	2800      	cmp	r0, #0
1000ee96:	d0ca      	beq.n	1000ee2e <__swbuf_r+0x2e>
1000ee98:	2601      	movs	r6, #1
1000ee9a:	4276      	negs	r6, r6
1000ee9c:	0030      	movs	r0, r6
1000ee9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000eea0:	100107fc 	.word	0x100107fc
1000eea4:	1001081c 	.word	0x1001081c
1000eea8:	100107dc 	.word	0x100107dc

1000eeac <__swsetup_r>:
1000eeac:	4b36      	ldr	r3, [pc, #216]	; (1000ef88 <__swsetup_r+0xdc>)
1000eeae:	b570      	push	{r4, r5, r6, lr}
1000eeb0:	681d      	ldr	r5, [r3, #0]
1000eeb2:	0006      	movs	r6, r0
1000eeb4:	000c      	movs	r4, r1
1000eeb6:	2d00      	cmp	r5, #0
1000eeb8:	d005      	beq.n	1000eec6 <__swsetup_r+0x1a>
1000eeba:	69ab      	ldr	r3, [r5, #24]
1000eebc:	2b00      	cmp	r3, #0
1000eebe:	d102      	bne.n	1000eec6 <__swsetup_r+0x1a>
1000eec0:	0028      	movs	r0, r5
1000eec2:	f000 f961 	bl	1000f188 <__sinit>
1000eec6:	4b31      	ldr	r3, [pc, #196]	; (1000ef8c <__swsetup_r+0xe0>)
1000eec8:	429c      	cmp	r4, r3
1000eeca:	d10f      	bne.n	1000eeec <__swsetup_r+0x40>
1000eecc:	686c      	ldr	r4, [r5, #4]
1000eece:	230c      	movs	r3, #12
1000eed0:	5ee2      	ldrsh	r2, [r4, r3]
1000eed2:	b293      	uxth	r3, r2
1000eed4:	0719      	lsls	r1, r3, #28
1000eed6:	d42d      	bmi.n	1000ef34 <__swsetup_r+0x88>
1000eed8:	06d9      	lsls	r1, r3, #27
1000eeda:	d411      	bmi.n	1000ef00 <__swsetup_r+0x54>
1000eedc:	2309      	movs	r3, #9
1000eede:	2001      	movs	r0, #1
1000eee0:	6033      	str	r3, [r6, #0]
1000eee2:	3337      	adds	r3, #55	; 0x37
1000eee4:	4313      	orrs	r3, r2
1000eee6:	81a3      	strh	r3, [r4, #12]
1000eee8:	4240      	negs	r0, r0
1000eeea:	bd70      	pop	{r4, r5, r6, pc}
1000eeec:	4b28      	ldr	r3, [pc, #160]	; (1000ef90 <__swsetup_r+0xe4>)
1000eeee:	429c      	cmp	r4, r3
1000eef0:	d101      	bne.n	1000eef6 <__swsetup_r+0x4a>
1000eef2:	68ac      	ldr	r4, [r5, #8]
1000eef4:	e7eb      	b.n	1000eece <__swsetup_r+0x22>
1000eef6:	4b27      	ldr	r3, [pc, #156]	; (1000ef94 <__swsetup_r+0xe8>)
1000eef8:	429c      	cmp	r4, r3
1000eefa:	d1e8      	bne.n	1000eece <__swsetup_r+0x22>
1000eefc:	68ec      	ldr	r4, [r5, #12]
1000eefe:	e7e6      	b.n	1000eece <__swsetup_r+0x22>
1000ef00:	075b      	lsls	r3, r3, #29
1000ef02:	d513      	bpl.n	1000ef2c <__swsetup_r+0x80>
1000ef04:	6b61      	ldr	r1, [r4, #52]	; 0x34
1000ef06:	2900      	cmp	r1, #0
1000ef08:	d008      	beq.n	1000ef1c <__swsetup_r+0x70>
1000ef0a:	0023      	movs	r3, r4
1000ef0c:	3344      	adds	r3, #68	; 0x44
1000ef0e:	4299      	cmp	r1, r3
1000ef10:	d002      	beq.n	1000ef18 <__swsetup_r+0x6c>
1000ef12:	0030      	movs	r0, r6
1000ef14:	f000 fa44 	bl	1000f3a0 <_free_r>
1000ef18:	2300      	movs	r3, #0
1000ef1a:	6363      	str	r3, [r4, #52]	; 0x34
1000ef1c:	2224      	movs	r2, #36	; 0x24
1000ef1e:	89a3      	ldrh	r3, [r4, #12]
1000ef20:	4393      	bics	r3, r2
1000ef22:	81a3      	strh	r3, [r4, #12]
1000ef24:	2300      	movs	r3, #0
1000ef26:	6063      	str	r3, [r4, #4]
1000ef28:	6923      	ldr	r3, [r4, #16]
1000ef2a:	6023      	str	r3, [r4, #0]
1000ef2c:	2308      	movs	r3, #8
1000ef2e:	89a2      	ldrh	r2, [r4, #12]
1000ef30:	4313      	orrs	r3, r2
1000ef32:	81a3      	strh	r3, [r4, #12]
1000ef34:	6923      	ldr	r3, [r4, #16]
1000ef36:	2b00      	cmp	r3, #0
1000ef38:	d10b      	bne.n	1000ef52 <__swsetup_r+0xa6>
1000ef3a:	21a0      	movs	r1, #160	; 0xa0
1000ef3c:	2280      	movs	r2, #128	; 0x80
1000ef3e:	89a3      	ldrh	r3, [r4, #12]
1000ef40:	0089      	lsls	r1, r1, #2
1000ef42:	0092      	lsls	r2, r2, #2
1000ef44:	400b      	ands	r3, r1
1000ef46:	4293      	cmp	r3, r2
1000ef48:	d003      	beq.n	1000ef52 <__swsetup_r+0xa6>
1000ef4a:	0021      	movs	r1, r4
1000ef4c:	0030      	movs	r0, r6
1000ef4e:	f000 f9d9 	bl	1000f304 <__smakebuf_r>
1000ef52:	2301      	movs	r3, #1
1000ef54:	89a2      	ldrh	r2, [r4, #12]
1000ef56:	4013      	ands	r3, r2
1000ef58:	d011      	beq.n	1000ef7e <__swsetup_r+0xd2>
1000ef5a:	2300      	movs	r3, #0
1000ef5c:	60a3      	str	r3, [r4, #8]
1000ef5e:	6963      	ldr	r3, [r4, #20]
1000ef60:	425b      	negs	r3, r3
1000ef62:	61a3      	str	r3, [r4, #24]
1000ef64:	2000      	movs	r0, #0
1000ef66:	6923      	ldr	r3, [r4, #16]
1000ef68:	4283      	cmp	r3, r0
1000ef6a:	d1be      	bne.n	1000eeea <__swsetup_r+0x3e>
1000ef6c:	230c      	movs	r3, #12
1000ef6e:	5ee2      	ldrsh	r2, [r4, r3]
1000ef70:	0613      	lsls	r3, r2, #24
1000ef72:	d5ba      	bpl.n	1000eeea <__swsetup_r+0x3e>
1000ef74:	2340      	movs	r3, #64	; 0x40
1000ef76:	4313      	orrs	r3, r2
1000ef78:	81a3      	strh	r3, [r4, #12]
1000ef7a:	3801      	subs	r0, #1
1000ef7c:	e7b5      	b.n	1000eeea <__swsetup_r+0x3e>
1000ef7e:	0792      	lsls	r2, r2, #30
1000ef80:	d400      	bmi.n	1000ef84 <__swsetup_r+0xd8>
1000ef82:	6963      	ldr	r3, [r4, #20]
1000ef84:	60a3      	str	r3, [r4, #8]
1000ef86:	e7ed      	b.n	1000ef64 <__swsetup_r+0xb8>
1000ef88:	1001089c 	.word	0x1001089c
1000ef8c:	100107fc 	.word	0x100107fc
1000ef90:	1001081c 	.word	0x1001081c
1000ef94:	100107dc 	.word	0x100107dc

1000ef98 <__sflush_r>:
1000ef98:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000ef9a:	898a      	ldrh	r2, [r1, #12]
1000ef9c:	0005      	movs	r5, r0
1000ef9e:	000c      	movs	r4, r1
1000efa0:	0713      	lsls	r3, r2, #28
1000efa2:	d460      	bmi.n	1000f066 <__sflush_r+0xce>
1000efa4:	684b      	ldr	r3, [r1, #4]
1000efa6:	2b00      	cmp	r3, #0
1000efa8:	dc04      	bgt.n	1000efb4 <__sflush_r+0x1c>
1000efaa:	6c0b      	ldr	r3, [r1, #64]	; 0x40
1000efac:	2b00      	cmp	r3, #0
1000efae:	dc01      	bgt.n	1000efb4 <__sflush_r+0x1c>
1000efb0:	2000      	movs	r0, #0
1000efb2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1000efb4:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
1000efb6:	2f00      	cmp	r7, #0
1000efb8:	d0fa      	beq.n	1000efb0 <__sflush_r+0x18>
1000efba:	2300      	movs	r3, #0
1000efbc:	682e      	ldr	r6, [r5, #0]
1000efbe:	602b      	str	r3, [r5, #0]
1000efc0:	2380      	movs	r3, #128	; 0x80
1000efc2:	015b      	lsls	r3, r3, #5
1000efc4:	401a      	ands	r2, r3
1000efc6:	d034      	beq.n	1000f032 <__sflush_r+0x9a>
1000efc8:	6d60      	ldr	r0, [r4, #84]	; 0x54
1000efca:	89a3      	ldrh	r3, [r4, #12]
1000efcc:	075b      	lsls	r3, r3, #29
1000efce:	d506      	bpl.n	1000efde <__sflush_r+0x46>
1000efd0:	6863      	ldr	r3, [r4, #4]
1000efd2:	1ac0      	subs	r0, r0, r3
1000efd4:	6b63      	ldr	r3, [r4, #52]	; 0x34
1000efd6:	2b00      	cmp	r3, #0
1000efd8:	d001      	beq.n	1000efde <__sflush_r+0x46>
1000efda:	6c23      	ldr	r3, [r4, #64]	; 0x40
1000efdc:	1ac0      	subs	r0, r0, r3
1000efde:	0002      	movs	r2, r0
1000efe0:	6a21      	ldr	r1, [r4, #32]
1000efe2:	2300      	movs	r3, #0
1000efe4:	0028      	movs	r0, r5
1000efe6:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
1000efe8:	47b8      	blx	r7
1000efea:	89a1      	ldrh	r1, [r4, #12]
1000efec:	1c43      	adds	r3, r0, #1
1000efee:	d106      	bne.n	1000effe <__sflush_r+0x66>
1000eff0:	682b      	ldr	r3, [r5, #0]
1000eff2:	2b1d      	cmp	r3, #29
1000eff4:	d831      	bhi.n	1000f05a <__sflush_r+0xc2>
1000eff6:	4a2c      	ldr	r2, [pc, #176]	; (1000f0a8 <__sflush_r+0x110>)
1000eff8:	40da      	lsrs	r2, r3
1000effa:	07d3      	lsls	r3, r2, #31
1000effc:	d52d      	bpl.n	1000f05a <__sflush_r+0xc2>
1000effe:	2300      	movs	r3, #0
1000f000:	6063      	str	r3, [r4, #4]
1000f002:	6923      	ldr	r3, [r4, #16]
1000f004:	6023      	str	r3, [r4, #0]
1000f006:	04cb      	lsls	r3, r1, #19
1000f008:	d505      	bpl.n	1000f016 <__sflush_r+0x7e>
1000f00a:	1c43      	adds	r3, r0, #1
1000f00c:	d102      	bne.n	1000f014 <__sflush_r+0x7c>
1000f00e:	682b      	ldr	r3, [r5, #0]
1000f010:	2b00      	cmp	r3, #0
1000f012:	d100      	bne.n	1000f016 <__sflush_r+0x7e>
1000f014:	6560      	str	r0, [r4, #84]	; 0x54
1000f016:	6b61      	ldr	r1, [r4, #52]	; 0x34
1000f018:	602e      	str	r6, [r5, #0]
1000f01a:	2900      	cmp	r1, #0
1000f01c:	d0c8      	beq.n	1000efb0 <__sflush_r+0x18>
1000f01e:	0023      	movs	r3, r4
1000f020:	3344      	adds	r3, #68	; 0x44
1000f022:	4299      	cmp	r1, r3
1000f024:	d002      	beq.n	1000f02c <__sflush_r+0x94>
1000f026:	0028      	movs	r0, r5
1000f028:	f000 f9ba 	bl	1000f3a0 <_free_r>
1000f02c:	2000      	movs	r0, #0
1000f02e:	6360      	str	r0, [r4, #52]	; 0x34
1000f030:	e7bf      	b.n	1000efb2 <__sflush_r+0x1a>
1000f032:	2301      	movs	r3, #1
1000f034:	6a21      	ldr	r1, [r4, #32]
1000f036:	0028      	movs	r0, r5
1000f038:	47b8      	blx	r7
1000f03a:	1c43      	adds	r3, r0, #1
1000f03c:	d1c5      	bne.n	1000efca <__sflush_r+0x32>
1000f03e:	682b      	ldr	r3, [r5, #0]
1000f040:	2b00      	cmp	r3, #0
1000f042:	d0c2      	beq.n	1000efca <__sflush_r+0x32>
1000f044:	2b1d      	cmp	r3, #29
1000f046:	d001      	beq.n	1000f04c <__sflush_r+0xb4>
1000f048:	2b16      	cmp	r3, #22
1000f04a:	d101      	bne.n	1000f050 <__sflush_r+0xb8>
1000f04c:	602e      	str	r6, [r5, #0]
1000f04e:	e7af      	b.n	1000efb0 <__sflush_r+0x18>
1000f050:	2340      	movs	r3, #64	; 0x40
1000f052:	89a2      	ldrh	r2, [r4, #12]
1000f054:	4313      	orrs	r3, r2
1000f056:	81a3      	strh	r3, [r4, #12]
1000f058:	e7ab      	b.n	1000efb2 <__sflush_r+0x1a>
1000f05a:	2340      	movs	r3, #64	; 0x40
1000f05c:	430b      	orrs	r3, r1
1000f05e:	2001      	movs	r0, #1
1000f060:	81a3      	strh	r3, [r4, #12]
1000f062:	4240      	negs	r0, r0
1000f064:	e7a5      	b.n	1000efb2 <__sflush_r+0x1a>
1000f066:	690f      	ldr	r7, [r1, #16]
1000f068:	2f00      	cmp	r7, #0
1000f06a:	d0a1      	beq.n	1000efb0 <__sflush_r+0x18>
1000f06c:	680b      	ldr	r3, [r1, #0]
1000f06e:	600f      	str	r7, [r1, #0]
1000f070:	1bdb      	subs	r3, r3, r7
1000f072:	9301      	str	r3, [sp, #4]
1000f074:	2300      	movs	r3, #0
1000f076:	0792      	lsls	r2, r2, #30
1000f078:	d100      	bne.n	1000f07c <__sflush_r+0xe4>
1000f07a:	694b      	ldr	r3, [r1, #20]
1000f07c:	60a3      	str	r3, [r4, #8]
1000f07e:	9b01      	ldr	r3, [sp, #4]
1000f080:	2b00      	cmp	r3, #0
1000f082:	dc00      	bgt.n	1000f086 <__sflush_r+0xee>
1000f084:	e794      	b.n	1000efb0 <__sflush_r+0x18>
1000f086:	9b01      	ldr	r3, [sp, #4]
1000f088:	003a      	movs	r2, r7
1000f08a:	6a21      	ldr	r1, [r4, #32]
1000f08c:	0028      	movs	r0, r5
1000f08e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
1000f090:	47b0      	blx	r6
1000f092:	2800      	cmp	r0, #0
1000f094:	dc03      	bgt.n	1000f09e <__sflush_r+0x106>
1000f096:	2340      	movs	r3, #64	; 0x40
1000f098:	89a2      	ldrh	r2, [r4, #12]
1000f09a:	4313      	orrs	r3, r2
1000f09c:	e7df      	b.n	1000f05e <__sflush_r+0xc6>
1000f09e:	9b01      	ldr	r3, [sp, #4]
1000f0a0:	183f      	adds	r7, r7, r0
1000f0a2:	1a1b      	subs	r3, r3, r0
1000f0a4:	9301      	str	r3, [sp, #4]
1000f0a6:	e7ea      	b.n	1000f07e <__sflush_r+0xe6>
1000f0a8:	20400001 	.word	0x20400001

1000f0ac <_fflush_r>:
1000f0ac:	690b      	ldr	r3, [r1, #16]
1000f0ae:	b570      	push	{r4, r5, r6, lr}
1000f0b0:	0005      	movs	r5, r0
1000f0b2:	000c      	movs	r4, r1
1000f0b4:	2b00      	cmp	r3, #0
1000f0b6:	d101      	bne.n	1000f0bc <_fflush_r+0x10>
1000f0b8:	2000      	movs	r0, #0
1000f0ba:	bd70      	pop	{r4, r5, r6, pc}
1000f0bc:	2800      	cmp	r0, #0
1000f0be:	d004      	beq.n	1000f0ca <_fflush_r+0x1e>
1000f0c0:	6983      	ldr	r3, [r0, #24]
1000f0c2:	2b00      	cmp	r3, #0
1000f0c4:	d101      	bne.n	1000f0ca <_fflush_r+0x1e>
1000f0c6:	f000 f85f 	bl	1000f188 <__sinit>
1000f0ca:	4b0b      	ldr	r3, [pc, #44]	; (1000f0f8 <_fflush_r+0x4c>)
1000f0cc:	429c      	cmp	r4, r3
1000f0ce:	d109      	bne.n	1000f0e4 <_fflush_r+0x38>
1000f0d0:	686c      	ldr	r4, [r5, #4]
1000f0d2:	220c      	movs	r2, #12
1000f0d4:	5ea3      	ldrsh	r3, [r4, r2]
1000f0d6:	2b00      	cmp	r3, #0
1000f0d8:	d0ee      	beq.n	1000f0b8 <_fflush_r+0xc>
1000f0da:	0021      	movs	r1, r4
1000f0dc:	0028      	movs	r0, r5
1000f0de:	f7ff ff5b 	bl	1000ef98 <__sflush_r>
1000f0e2:	e7ea      	b.n	1000f0ba <_fflush_r+0xe>
1000f0e4:	4b05      	ldr	r3, [pc, #20]	; (1000f0fc <_fflush_r+0x50>)
1000f0e6:	429c      	cmp	r4, r3
1000f0e8:	d101      	bne.n	1000f0ee <_fflush_r+0x42>
1000f0ea:	68ac      	ldr	r4, [r5, #8]
1000f0ec:	e7f1      	b.n	1000f0d2 <_fflush_r+0x26>
1000f0ee:	4b04      	ldr	r3, [pc, #16]	; (1000f100 <_fflush_r+0x54>)
1000f0f0:	429c      	cmp	r4, r3
1000f0f2:	d1ee      	bne.n	1000f0d2 <_fflush_r+0x26>
1000f0f4:	68ec      	ldr	r4, [r5, #12]
1000f0f6:	e7ec      	b.n	1000f0d2 <_fflush_r+0x26>
1000f0f8:	100107fc 	.word	0x100107fc
1000f0fc:	1001081c 	.word	0x1001081c
1000f100:	100107dc 	.word	0x100107dc

1000f104 <_cleanup_r>:
1000f104:	b510      	push	{r4, lr}
1000f106:	4902      	ldr	r1, [pc, #8]	; (1000f110 <_cleanup_r+0xc>)
1000f108:	f000 f8b2 	bl	1000f270 <_fwalk_reent>
1000f10c:	bd10      	pop	{r4, pc}
1000f10e:	46c0      	nop			; (mov r8, r8)
1000f110:	1000f0ad 	.word	0x1000f0ad

1000f114 <std.isra.0>:
1000f114:	2300      	movs	r3, #0
1000f116:	b510      	push	{r4, lr}
1000f118:	0004      	movs	r4, r0
1000f11a:	6003      	str	r3, [r0, #0]
1000f11c:	6043      	str	r3, [r0, #4]
1000f11e:	6083      	str	r3, [r0, #8]
1000f120:	8181      	strh	r1, [r0, #12]
1000f122:	6643      	str	r3, [r0, #100]	; 0x64
1000f124:	81c2      	strh	r2, [r0, #14]
1000f126:	6103      	str	r3, [r0, #16]
1000f128:	6143      	str	r3, [r0, #20]
1000f12a:	6183      	str	r3, [r0, #24]
1000f12c:	0019      	movs	r1, r3
1000f12e:	2208      	movs	r2, #8
1000f130:	305c      	adds	r0, #92	; 0x5c
1000f132:	f7ff fcd3 	bl	1000eadc <memset>
1000f136:	4b05      	ldr	r3, [pc, #20]	; (1000f14c <std.isra.0+0x38>)
1000f138:	6224      	str	r4, [r4, #32]
1000f13a:	6263      	str	r3, [r4, #36]	; 0x24
1000f13c:	4b04      	ldr	r3, [pc, #16]	; (1000f150 <std.isra.0+0x3c>)
1000f13e:	62a3      	str	r3, [r4, #40]	; 0x28
1000f140:	4b04      	ldr	r3, [pc, #16]	; (1000f154 <std.isra.0+0x40>)
1000f142:	62e3      	str	r3, [r4, #44]	; 0x2c
1000f144:	4b04      	ldr	r3, [pc, #16]	; (1000f158 <std.isra.0+0x44>)
1000f146:	6323      	str	r3, [r4, #48]	; 0x30
1000f148:	bd10      	pop	{r4, pc}
1000f14a:	46c0      	nop			; (mov r8, r8)
1000f14c:	1000fb19 	.word	0x1000fb19
1000f150:	1000fb41 	.word	0x1000fb41
1000f154:	1000fb79 	.word	0x1000fb79
1000f158:	1000fba5 	.word	0x1000fba5

1000f15c <__sfmoreglue>:
1000f15c:	b570      	push	{r4, r5, r6, lr}
1000f15e:	2568      	movs	r5, #104	; 0x68
1000f160:	1e4a      	subs	r2, r1, #1
1000f162:	4355      	muls	r5, r2
1000f164:	000e      	movs	r6, r1
1000f166:	0029      	movs	r1, r5
1000f168:	3174      	adds	r1, #116	; 0x74
1000f16a:	f000 f963 	bl	1000f434 <_malloc_r>
1000f16e:	1e04      	subs	r4, r0, #0
1000f170:	d008      	beq.n	1000f184 <__sfmoreglue+0x28>
1000f172:	2100      	movs	r1, #0
1000f174:	002a      	movs	r2, r5
1000f176:	6001      	str	r1, [r0, #0]
1000f178:	6046      	str	r6, [r0, #4]
1000f17a:	300c      	adds	r0, #12
1000f17c:	60a0      	str	r0, [r4, #8]
1000f17e:	3268      	adds	r2, #104	; 0x68
1000f180:	f7ff fcac 	bl	1000eadc <memset>
1000f184:	0020      	movs	r0, r4
1000f186:	bd70      	pop	{r4, r5, r6, pc}

1000f188 <__sinit>:
1000f188:	6983      	ldr	r3, [r0, #24]
1000f18a:	b513      	push	{r0, r1, r4, lr}
1000f18c:	0004      	movs	r4, r0
1000f18e:	2b00      	cmp	r3, #0
1000f190:	d128      	bne.n	1000f1e4 <__sinit+0x5c>
1000f192:	6483      	str	r3, [r0, #72]	; 0x48
1000f194:	64c3      	str	r3, [r0, #76]	; 0x4c
1000f196:	6503      	str	r3, [r0, #80]	; 0x50
1000f198:	4b13      	ldr	r3, [pc, #76]	; (1000f1e8 <__sinit+0x60>)
1000f19a:	4a14      	ldr	r2, [pc, #80]	; (1000f1ec <__sinit+0x64>)
1000f19c:	681b      	ldr	r3, [r3, #0]
1000f19e:	6282      	str	r2, [r0, #40]	; 0x28
1000f1a0:	9301      	str	r3, [sp, #4]
1000f1a2:	4298      	cmp	r0, r3
1000f1a4:	d101      	bne.n	1000f1aa <__sinit+0x22>
1000f1a6:	2301      	movs	r3, #1
1000f1a8:	6183      	str	r3, [r0, #24]
1000f1aa:	0020      	movs	r0, r4
1000f1ac:	f000 f820 	bl	1000f1f0 <__sfp>
1000f1b0:	6060      	str	r0, [r4, #4]
1000f1b2:	0020      	movs	r0, r4
1000f1b4:	f000 f81c 	bl	1000f1f0 <__sfp>
1000f1b8:	60a0      	str	r0, [r4, #8]
1000f1ba:	0020      	movs	r0, r4
1000f1bc:	f000 f818 	bl	1000f1f0 <__sfp>
1000f1c0:	2200      	movs	r2, #0
1000f1c2:	60e0      	str	r0, [r4, #12]
1000f1c4:	2104      	movs	r1, #4
1000f1c6:	6860      	ldr	r0, [r4, #4]
1000f1c8:	f7ff ffa4 	bl	1000f114 <std.isra.0>
1000f1cc:	2201      	movs	r2, #1
1000f1ce:	2109      	movs	r1, #9
1000f1d0:	68a0      	ldr	r0, [r4, #8]
1000f1d2:	f7ff ff9f 	bl	1000f114 <std.isra.0>
1000f1d6:	2202      	movs	r2, #2
1000f1d8:	2112      	movs	r1, #18
1000f1da:	68e0      	ldr	r0, [r4, #12]
1000f1dc:	f7ff ff9a 	bl	1000f114 <std.isra.0>
1000f1e0:	2301      	movs	r3, #1
1000f1e2:	61a3      	str	r3, [r4, #24]
1000f1e4:	bd13      	pop	{r0, r1, r4, pc}
1000f1e6:	46c0      	nop			; (mov r8, r8)
1000f1e8:	100107d8 	.word	0x100107d8
1000f1ec:	1000f105 	.word	0x1000f105

1000f1f0 <__sfp>:
1000f1f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000f1f2:	4b1e      	ldr	r3, [pc, #120]	; (1000f26c <__sfp+0x7c>)
1000f1f4:	0007      	movs	r7, r0
1000f1f6:	681e      	ldr	r6, [r3, #0]
1000f1f8:	69b3      	ldr	r3, [r6, #24]
1000f1fa:	2b00      	cmp	r3, #0
1000f1fc:	d102      	bne.n	1000f204 <__sfp+0x14>
1000f1fe:	0030      	movs	r0, r6
1000f200:	f7ff ffc2 	bl	1000f188 <__sinit>
1000f204:	3648      	adds	r6, #72	; 0x48
1000f206:	68b4      	ldr	r4, [r6, #8]
1000f208:	6873      	ldr	r3, [r6, #4]
1000f20a:	3b01      	subs	r3, #1
1000f20c:	d504      	bpl.n	1000f218 <__sfp+0x28>
1000f20e:	6833      	ldr	r3, [r6, #0]
1000f210:	2b00      	cmp	r3, #0
1000f212:	d007      	beq.n	1000f224 <__sfp+0x34>
1000f214:	6836      	ldr	r6, [r6, #0]
1000f216:	e7f6      	b.n	1000f206 <__sfp+0x16>
1000f218:	220c      	movs	r2, #12
1000f21a:	5ea5      	ldrsh	r5, [r4, r2]
1000f21c:	2d00      	cmp	r5, #0
1000f21e:	d00d      	beq.n	1000f23c <__sfp+0x4c>
1000f220:	3468      	adds	r4, #104	; 0x68
1000f222:	e7f2      	b.n	1000f20a <__sfp+0x1a>
1000f224:	2104      	movs	r1, #4
1000f226:	0038      	movs	r0, r7
1000f228:	f7ff ff98 	bl	1000f15c <__sfmoreglue>
1000f22c:	6030      	str	r0, [r6, #0]
1000f22e:	2800      	cmp	r0, #0
1000f230:	d1f0      	bne.n	1000f214 <__sfp+0x24>
1000f232:	230c      	movs	r3, #12
1000f234:	0004      	movs	r4, r0
1000f236:	603b      	str	r3, [r7, #0]
1000f238:	0020      	movs	r0, r4
1000f23a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000f23c:	2301      	movs	r3, #1
1000f23e:	0020      	movs	r0, r4
1000f240:	425b      	negs	r3, r3
1000f242:	81e3      	strh	r3, [r4, #14]
1000f244:	3302      	adds	r3, #2
1000f246:	81a3      	strh	r3, [r4, #12]
1000f248:	6665      	str	r5, [r4, #100]	; 0x64
1000f24a:	6025      	str	r5, [r4, #0]
1000f24c:	60a5      	str	r5, [r4, #8]
1000f24e:	6065      	str	r5, [r4, #4]
1000f250:	6125      	str	r5, [r4, #16]
1000f252:	6165      	str	r5, [r4, #20]
1000f254:	61a5      	str	r5, [r4, #24]
1000f256:	2208      	movs	r2, #8
1000f258:	0029      	movs	r1, r5
1000f25a:	305c      	adds	r0, #92	; 0x5c
1000f25c:	f7ff fc3e 	bl	1000eadc <memset>
1000f260:	6365      	str	r5, [r4, #52]	; 0x34
1000f262:	63a5      	str	r5, [r4, #56]	; 0x38
1000f264:	64a5      	str	r5, [r4, #72]	; 0x48
1000f266:	64e5      	str	r5, [r4, #76]	; 0x4c
1000f268:	e7e6      	b.n	1000f238 <__sfp+0x48>
1000f26a:	46c0      	nop			; (mov r8, r8)
1000f26c:	100107d8 	.word	0x100107d8

1000f270 <_fwalk_reent>:
1000f270:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000f272:	0004      	movs	r4, r0
1000f274:	0007      	movs	r7, r0
1000f276:	2600      	movs	r6, #0
1000f278:	9101      	str	r1, [sp, #4]
1000f27a:	3448      	adds	r4, #72	; 0x48
1000f27c:	2c00      	cmp	r4, #0
1000f27e:	d101      	bne.n	1000f284 <_fwalk_reent+0x14>
1000f280:	0030      	movs	r0, r6
1000f282:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1000f284:	6863      	ldr	r3, [r4, #4]
1000f286:	68a5      	ldr	r5, [r4, #8]
1000f288:	9300      	str	r3, [sp, #0]
1000f28a:	9b00      	ldr	r3, [sp, #0]
1000f28c:	3b01      	subs	r3, #1
1000f28e:	9300      	str	r3, [sp, #0]
1000f290:	d501      	bpl.n	1000f296 <_fwalk_reent+0x26>
1000f292:	6824      	ldr	r4, [r4, #0]
1000f294:	e7f2      	b.n	1000f27c <_fwalk_reent+0xc>
1000f296:	89ab      	ldrh	r3, [r5, #12]
1000f298:	2b01      	cmp	r3, #1
1000f29a:	d908      	bls.n	1000f2ae <_fwalk_reent+0x3e>
1000f29c:	220e      	movs	r2, #14
1000f29e:	5eab      	ldrsh	r3, [r5, r2]
1000f2a0:	3301      	adds	r3, #1
1000f2a2:	d004      	beq.n	1000f2ae <_fwalk_reent+0x3e>
1000f2a4:	0029      	movs	r1, r5
1000f2a6:	0038      	movs	r0, r7
1000f2a8:	9b01      	ldr	r3, [sp, #4]
1000f2aa:	4798      	blx	r3
1000f2ac:	4306      	orrs	r6, r0
1000f2ae:	3568      	adds	r5, #104	; 0x68
1000f2b0:	e7eb      	b.n	1000f28a <_fwalk_reent+0x1a>
	...

1000f2b4 <__swhatbuf_r>:
1000f2b4:	b570      	push	{r4, r5, r6, lr}
1000f2b6:	000e      	movs	r6, r1
1000f2b8:	001d      	movs	r5, r3
1000f2ba:	230e      	movs	r3, #14
1000f2bc:	5ec9      	ldrsh	r1, [r1, r3]
1000f2be:	b090      	sub	sp, #64	; 0x40
1000f2c0:	0014      	movs	r4, r2
1000f2c2:	2900      	cmp	r1, #0
1000f2c4:	da07      	bge.n	1000f2d6 <__swhatbuf_r+0x22>
1000f2c6:	2300      	movs	r3, #0
1000f2c8:	602b      	str	r3, [r5, #0]
1000f2ca:	89b3      	ldrh	r3, [r6, #12]
1000f2cc:	061b      	lsls	r3, r3, #24
1000f2ce:	d411      	bmi.n	1000f2f4 <__swhatbuf_r+0x40>
1000f2d0:	2380      	movs	r3, #128	; 0x80
1000f2d2:	00db      	lsls	r3, r3, #3
1000f2d4:	e00f      	b.n	1000f2f6 <__swhatbuf_r+0x42>
1000f2d6:	aa01      	add	r2, sp, #4
1000f2d8:	f000 fc90 	bl	1000fbfc <_fstat_r>
1000f2dc:	2800      	cmp	r0, #0
1000f2de:	dbf2      	blt.n	1000f2c6 <__swhatbuf_r+0x12>
1000f2e0:	22f0      	movs	r2, #240	; 0xf0
1000f2e2:	9b02      	ldr	r3, [sp, #8]
1000f2e4:	0212      	lsls	r2, r2, #8
1000f2e6:	4013      	ands	r3, r2
1000f2e8:	4a05      	ldr	r2, [pc, #20]	; (1000f300 <__swhatbuf_r+0x4c>)
1000f2ea:	189b      	adds	r3, r3, r2
1000f2ec:	425a      	negs	r2, r3
1000f2ee:	4153      	adcs	r3, r2
1000f2f0:	602b      	str	r3, [r5, #0]
1000f2f2:	e7ed      	b.n	1000f2d0 <__swhatbuf_r+0x1c>
1000f2f4:	2340      	movs	r3, #64	; 0x40
1000f2f6:	2000      	movs	r0, #0
1000f2f8:	6023      	str	r3, [r4, #0]
1000f2fa:	b010      	add	sp, #64	; 0x40
1000f2fc:	bd70      	pop	{r4, r5, r6, pc}
1000f2fe:	46c0      	nop			; (mov r8, r8)
1000f300:	ffffe000 	.word	0xffffe000

1000f304 <__smakebuf_r>:
1000f304:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000f306:	2602      	movs	r6, #2
1000f308:	898b      	ldrh	r3, [r1, #12]
1000f30a:	0005      	movs	r5, r0
1000f30c:	000c      	movs	r4, r1
1000f30e:	4233      	tst	r3, r6
1000f310:	d006      	beq.n	1000f320 <__smakebuf_r+0x1c>
1000f312:	0023      	movs	r3, r4
1000f314:	3347      	adds	r3, #71	; 0x47
1000f316:	6023      	str	r3, [r4, #0]
1000f318:	6123      	str	r3, [r4, #16]
1000f31a:	2301      	movs	r3, #1
1000f31c:	6163      	str	r3, [r4, #20]
1000f31e:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
1000f320:	ab01      	add	r3, sp, #4
1000f322:	466a      	mov	r2, sp
1000f324:	f7ff ffc6 	bl	1000f2b4 <__swhatbuf_r>
1000f328:	9900      	ldr	r1, [sp, #0]
1000f32a:	0007      	movs	r7, r0
1000f32c:	0028      	movs	r0, r5
1000f32e:	f000 f881 	bl	1000f434 <_malloc_r>
1000f332:	2800      	cmp	r0, #0
1000f334:	d108      	bne.n	1000f348 <__smakebuf_r+0x44>
1000f336:	220c      	movs	r2, #12
1000f338:	5ea3      	ldrsh	r3, [r4, r2]
1000f33a:	059a      	lsls	r2, r3, #22
1000f33c:	d4ef      	bmi.n	1000f31e <__smakebuf_r+0x1a>
1000f33e:	2203      	movs	r2, #3
1000f340:	4393      	bics	r3, r2
1000f342:	431e      	orrs	r6, r3
1000f344:	81a6      	strh	r6, [r4, #12]
1000f346:	e7e4      	b.n	1000f312 <__smakebuf_r+0xe>
1000f348:	4b0f      	ldr	r3, [pc, #60]	; (1000f388 <__smakebuf_r+0x84>)
1000f34a:	62ab      	str	r3, [r5, #40]	; 0x28
1000f34c:	2380      	movs	r3, #128	; 0x80
1000f34e:	89a2      	ldrh	r2, [r4, #12]
1000f350:	6020      	str	r0, [r4, #0]
1000f352:	4313      	orrs	r3, r2
1000f354:	81a3      	strh	r3, [r4, #12]
1000f356:	9b00      	ldr	r3, [sp, #0]
1000f358:	6120      	str	r0, [r4, #16]
1000f35a:	6163      	str	r3, [r4, #20]
1000f35c:	9b01      	ldr	r3, [sp, #4]
1000f35e:	2b00      	cmp	r3, #0
1000f360:	d00d      	beq.n	1000f37e <__smakebuf_r+0x7a>
1000f362:	230e      	movs	r3, #14
1000f364:	5ee1      	ldrsh	r1, [r4, r3]
1000f366:	0028      	movs	r0, r5
1000f368:	f000 fc5a 	bl	1000fc20 <_isatty_r>
1000f36c:	2800      	cmp	r0, #0
1000f36e:	d006      	beq.n	1000f37e <__smakebuf_r+0x7a>
1000f370:	2203      	movs	r2, #3
1000f372:	89a3      	ldrh	r3, [r4, #12]
1000f374:	4393      	bics	r3, r2
1000f376:	001a      	movs	r2, r3
1000f378:	2301      	movs	r3, #1
1000f37a:	4313      	orrs	r3, r2
1000f37c:	81a3      	strh	r3, [r4, #12]
1000f37e:	89a0      	ldrh	r0, [r4, #12]
1000f380:	4338      	orrs	r0, r7
1000f382:	81a0      	strh	r0, [r4, #12]
1000f384:	e7cb      	b.n	1000f31e <__smakebuf_r+0x1a>
1000f386:	46c0      	nop			; (mov r8, r8)
1000f388:	1000f105 	.word	0x1000f105

1000f38c <malloc>:
1000f38c:	b510      	push	{r4, lr}
1000f38e:	4b03      	ldr	r3, [pc, #12]	; (1000f39c <malloc+0x10>)
1000f390:	0001      	movs	r1, r0
1000f392:	6818      	ldr	r0, [r3, #0]
1000f394:	f000 f84e 	bl	1000f434 <_malloc_r>
1000f398:	bd10      	pop	{r4, pc}
1000f39a:	46c0      	nop			; (mov r8, r8)
1000f39c:	1001089c 	.word	0x1001089c

1000f3a0 <_free_r>:
1000f3a0:	b570      	push	{r4, r5, r6, lr}
1000f3a2:	0005      	movs	r5, r0
1000f3a4:	2900      	cmp	r1, #0
1000f3a6:	d010      	beq.n	1000f3ca <_free_r+0x2a>
1000f3a8:	1f0c      	subs	r4, r1, #4
1000f3aa:	6823      	ldr	r3, [r4, #0]
1000f3ac:	2b00      	cmp	r3, #0
1000f3ae:	da00      	bge.n	1000f3b2 <_free_r+0x12>
1000f3b0:	18e4      	adds	r4, r4, r3
1000f3b2:	0028      	movs	r0, r5
1000f3b4:	f000 fc65 	bl	1000fc82 <__malloc_lock>
1000f3b8:	4a1d      	ldr	r2, [pc, #116]	; (1000f430 <_free_r+0x90>)
1000f3ba:	6813      	ldr	r3, [r2, #0]
1000f3bc:	2b00      	cmp	r3, #0
1000f3be:	d105      	bne.n	1000f3cc <_free_r+0x2c>
1000f3c0:	6063      	str	r3, [r4, #4]
1000f3c2:	6014      	str	r4, [r2, #0]
1000f3c4:	0028      	movs	r0, r5
1000f3c6:	f000 fc5d 	bl	1000fc84 <__malloc_unlock>
1000f3ca:	bd70      	pop	{r4, r5, r6, pc}
1000f3cc:	42a3      	cmp	r3, r4
1000f3ce:	d909      	bls.n	1000f3e4 <_free_r+0x44>
1000f3d0:	6821      	ldr	r1, [r4, #0]
1000f3d2:	1860      	adds	r0, r4, r1
1000f3d4:	4283      	cmp	r3, r0
1000f3d6:	d1f3      	bne.n	1000f3c0 <_free_r+0x20>
1000f3d8:	6818      	ldr	r0, [r3, #0]
1000f3da:	685b      	ldr	r3, [r3, #4]
1000f3dc:	1841      	adds	r1, r0, r1
1000f3de:	6021      	str	r1, [r4, #0]
1000f3e0:	e7ee      	b.n	1000f3c0 <_free_r+0x20>
1000f3e2:	0013      	movs	r3, r2
1000f3e4:	685a      	ldr	r2, [r3, #4]
1000f3e6:	2a00      	cmp	r2, #0
1000f3e8:	d001      	beq.n	1000f3ee <_free_r+0x4e>
1000f3ea:	42a2      	cmp	r2, r4
1000f3ec:	d9f9      	bls.n	1000f3e2 <_free_r+0x42>
1000f3ee:	6819      	ldr	r1, [r3, #0]
1000f3f0:	1858      	adds	r0, r3, r1
1000f3f2:	42a0      	cmp	r0, r4
1000f3f4:	d10b      	bne.n	1000f40e <_free_r+0x6e>
1000f3f6:	6820      	ldr	r0, [r4, #0]
1000f3f8:	1809      	adds	r1, r1, r0
1000f3fa:	1858      	adds	r0, r3, r1
1000f3fc:	6019      	str	r1, [r3, #0]
1000f3fe:	4282      	cmp	r2, r0
1000f400:	d1e0      	bne.n	1000f3c4 <_free_r+0x24>
1000f402:	6810      	ldr	r0, [r2, #0]
1000f404:	6852      	ldr	r2, [r2, #4]
1000f406:	1841      	adds	r1, r0, r1
1000f408:	6019      	str	r1, [r3, #0]
1000f40a:	605a      	str	r2, [r3, #4]
1000f40c:	e7da      	b.n	1000f3c4 <_free_r+0x24>
1000f40e:	42a0      	cmp	r0, r4
1000f410:	d902      	bls.n	1000f418 <_free_r+0x78>
1000f412:	230c      	movs	r3, #12
1000f414:	602b      	str	r3, [r5, #0]
1000f416:	e7d5      	b.n	1000f3c4 <_free_r+0x24>
1000f418:	6821      	ldr	r1, [r4, #0]
1000f41a:	1860      	adds	r0, r4, r1
1000f41c:	4282      	cmp	r2, r0
1000f41e:	d103      	bne.n	1000f428 <_free_r+0x88>
1000f420:	6810      	ldr	r0, [r2, #0]
1000f422:	6852      	ldr	r2, [r2, #4]
1000f424:	1841      	adds	r1, r0, r1
1000f426:	6021      	str	r1, [r4, #0]
1000f428:	6062      	str	r2, [r4, #4]
1000f42a:	605c      	str	r4, [r3, #4]
1000f42c:	e7ca      	b.n	1000f3c4 <_free_r+0x24>
1000f42e:	46c0      	nop			; (mov r8, r8)
1000f430:	10011ed0 	.word	0x10011ed0

1000f434 <_malloc_r>:
1000f434:	2303      	movs	r3, #3
1000f436:	b570      	push	{r4, r5, r6, lr}
1000f438:	1ccd      	adds	r5, r1, #3
1000f43a:	439d      	bics	r5, r3
1000f43c:	3508      	adds	r5, #8
1000f43e:	0006      	movs	r6, r0
1000f440:	2d0c      	cmp	r5, #12
1000f442:	d21e      	bcs.n	1000f482 <_malloc_r+0x4e>
1000f444:	250c      	movs	r5, #12
1000f446:	42a9      	cmp	r1, r5
1000f448:	d81d      	bhi.n	1000f486 <_malloc_r+0x52>
1000f44a:	0030      	movs	r0, r6
1000f44c:	f000 fc19 	bl	1000fc82 <__malloc_lock>
1000f450:	4a25      	ldr	r2, [pc, #148]	; (1000f4e8 <_malloc_r+0xb4>)
1000f452:	6814      	ldr	r4, [r2, #0]
1000f454:	0021      	movs	r1, r4
1000f456:	2900      	cmp	r1, #0
1000f458:	d119      	bne.n	1000f48e <_malloc_r+0x5a>
1000f45a:	4c24      	ldr	r4, [pc, #144]	; (1000f4ec <_malloc_r+0xb8>)
1000f45c:	6823      	ldr	r3, [r4, #0]
1000f45e:	2b00      	cmp	r3, #0
1000f460:	d103      	bne.n	1000f46a <_malloc_r+0x36>
1000f462:	0030      	movs	r0, r6
1000f464:	f000 fb46 	bl	1000faf4 <_sbrk_r>
1000f468:	6020      	str	r0, [r4, #0]
1000f46a:	0029      	movs	r1, r5
1000f46c:	0030      	movs	r0, r6
1000f46e:	f000 fb41 	bl	1000faf4 <_sbrk_r>
1000f472:	1c43      	adds	r3, r0, #1
1000f474:	d12c      	bne.n	1000f4d0 <_malloc_r+0x9c>
1000f476:	230c      	movs	r3, #12
1000f478:	0030      	movs	r0, r6
1000f47a:	6033      	str	r3, [r6, #0]
1000f47c:	f000 fc02 	bl	1000fc84 <__malloc_unlock>
1000f480:	e003      	b.n	1000f48a <_malloc_r+0x56>
1000f482:	2d00      	cmp	r5, #0
1000f484:	dadf      	bge.n	1000f446 <_malloc_r+0x12>
1000f486:	230c      	movs	r3, #12
1000f488:	6033      	str	r3, [r6, #0]
1000f48a:	2000      	movs	r0, #0
1000f48c:	bd70      	pop	{r4, r5, r6, pc}
1000f48e:	680b      	ldr	r3, [r1, #0]
1000f490:	1b5b      	subs	r3, r3, r5
1000f492:	d41a      	bmi.n	1000f4ca <_malloc_r+0x96>
1000f494:	2b0b      	cmp	r3, #11
1000f496:	d903      	bls.n	1000f4a0 <_malloc_r+0x6c>
1000f498:	600b      	str	r3, [r1, #0]
1000f49a:	18cc      	adds	r4, r1, r3
1000f49c:	6025      	str	r5, [r4, #0]
1000f49e:	e003      	b.n	1000f4a8 <_malloc_r+0x74>
1000f4a0:	428c      	cmp	r4, r1
1000f4a2:	d10e      	bne.n	1000f4c2 <_malloc_r+0x8e>
1000f4a4:	6863      	ldr	r3, [r4, #4]
1000f4a6:	6013      	str	r3, [r2, #0]
1000f4a8:	0030      	movs	r0, r6
1000f4aa:	f000 fbeb 	bl	1000fc84 <__malloc_unlock>
1000f4ae:	0020      	movs	r0, r4
1000f4b0:	2207      	movs	r2, #7
1000f4b2:	300b      	adds	r0, #11
1000f4b4:	1d23      	adds	r3, r4, #4
1000f4b6:	4390      	bics	r0, r2
1000f4b8:	1ac3      	subs	r3, r0, r3
1000f4ba:	d0e7      	beq.n	1000f48c <_malloc_r+0x58>
1000f4bc:	425a      	negs	r2, r3
1000f4be:	50e2      	str	r2, [r4, r3]
1000f4c0:	e7e4      	b.n	1000f48c <_malloc_r+0x58>
1000f4c2:	684b      	ldr	r3, [r1, #4]
1000f4c4:	6063      	str	r3, [r4, #4]
1000f4c6:	000c      	movs	r4, r1
1000f4c8:	e7ee      	b.n	1000f4a8 <_malloc_r+0x74>
1000f4ca:	000c      	movs	r4, r1
1000f4cc:	6849      	ldr	r1, [r1, #4]
1000f4ce:	e7c2      	b.n	1000f456 <_malloc_r+0x22>
1000f4d0:	2303      	movs	r3, #3
1000f4d2:	1cc4      	adds	r4, r0, #3
1000f4d4:	439c      	bics	r4, r3
1000f4d6:	42a0      	cmp	r0, r4
1000f4d8:	d0e0      	beq.n	1000f49c <_malloc_r+0x68>
1000f4da:	1a21      	subs	r1, r4, r0
1000f4dc:	0030      	movs	r0, r6
1000f4de:	f000 fb09 	bl	1000faf4 <_sbrk_r>
1000f4e2:	1c43      	adds	r3, r0, #1
1000f4e4:	d1da      	bne.n	1000f49c <_malloc_r+0x68>
1000f4e6:	e7c6      	b.n	1000f476 <_malloc_r+0x42>
1000f4e8:	10011ed0 	.word	0x10011ed0
1000f4ec:	10011ed4 	.word	0x10011ed4

1000f4f0 <__sfputc_r>:
1000f4f0:	6893      	ldr	r3, [r2, #8]
1000f4f2:	b510      	push	{r4, lr}
1000f4f4:	3b01      	subs	r3, #1
1000f4f6:	6093      	str	r3, [r2, #8]
1000f4f8:	2b00      	cmp	r3, #0
1000f4fa:	da05      	bge.n	1000f508 <__sfputc_r+0x18>
1000f4fc:	6994      	ldr	r4, [r2, #24]
1000f4fe:	42a3      	cmp	r3, r4
1000f500:	db08      	blt.n	1000f514 <__sfputc_r+0x24>
1000f502:	b2cb      	uxtb	r3, r1
1000f504:	2b0a      	cmp	r3, #10
1000f506:	d005      	beq.n	1000f514 <__sfputc_r+0x24>
1000f508:	6813      	ldr	r3, [r2, #0]
1000f50a:	1c58      	adds	r0, r3, #1
1000f50c:	6010      	str	r0, [r2, #0]
1000f50e:	7019      	strb	r1, [r3, #0]
1000f510:	b2c8      	uxtb	r0, r1
1000f512:	bd10      	pop	{r4, pc}
1000f514:	f7ff fc74 	bl	1000ee00 <__swbuf_r>
1000f518:	e7fb      	b.n	1000f512 <__sfputc_r+0x22>

1000f51a <__sfputs_r>:
1000f51a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000f51c:	0006      	movs	r6, r0
1000f51e:	000f      	movs	r7, r1
1000f520:	0014      	movs	r4, r2
1000f522:	18d5      	adds	r5, r2, r3
1000f524:	42ac      	cmp	r4, r5
1000f526:	d101      	bne.n	1000f52c <__sfputs_r+0x12>
1000f528:	2000      	movs	r0, #0
1000f52a:	e007      	b.n	1000f53c <__sfputs_r+0x22>
1000f52c:	7821      	ldrb	r1, [r4, #0]
1000f52e:	003a      	movs	r2, r7
1000f530:	0030      	movs	r0, r6
1000f532:	f7ff ffdd 	bl	1000f4f0 <__sfputc_r>
1000f536:	3401      	adds	r4, #1
1000f538:	1c43      	adds	r3, r0, #1
1000f53a:	d1f3      	bne.n	1000f524 <__sfputs_r+0xa>
1000f53c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

1000f540 <_vfiprintf_r>:
1000f540:	b5f0      	push	{r4, r5, r6, r7, lr}
1000f542:	b09f      	sub	sp, #124	; 0x7c
1000f544:	0006      	movs	r6, r0
1000f546:	000f      	movs	r7, r1
1000f548:	0014      	movs	r4, r2
1000f54a:	9305      	str	r3, [sp, #20]
1000f54c:	2800      	cmp	r0, #0
1000f54e:	d004      	beq.n	1000f55a <_vfiprintf_r+0x1a>
1000f550:	6983      	ldr	r3, [r0, #24]
1000f552:	2b00      	cmp	r3, #0
1000f554:	d101      	bne.n	1000f55a <_vfiprintf_r+0x1a>
1000f556:	f7ff fe17 	bl	1000f188 <__sinit>
1000f55a:	4b7f      	ldr	r3, [pc, #508]	; (1000f758 <_vfiprintf_r+0x218>)
1000f55c:	429f      	cmp	r7, r3
1000f55e:	d15c      	bne.n	1000f61a <_vfiprintf_r+0xda>
1000f560:	6877      	ldr	r7, [r6, #4]
1000f562:	89bb      	ldrh	r3, [r7, #12]
1000f564:	071b      	lsls	r3, r3, #28
1000f566:	d562      	bpl.n	1000f62e <_vfiprintf_r+0xee>
1000f568:	693b      	ldr	r3, [r7, #16]
1000f56a:	2b00      	cmp	r3, #0
1000f56c:	d05f      	beq.n	1000f62e <_vfiprintf_r+0xee>
1000f56e:	2300      	movs	r3, #0
1000f570:	ad06      	add	r5, sp, #24
1000f572:	616b      	str	r3, [r5, #20]
1000f574:	3320      	adds	r3, #32
1000f576:	766b      	strb	r3, [r5, #25]
1000f578:	3310      	adds	r3, #16
1000f57a:	76ab      	strb	r3, [r5, #26]
1000f57c:	9402      	str	r4, [sp, #8]
1000f57e:	9c02      	ldr	r4, [sp, #8]
1000f580:	7823      	ldrb	r3, [r4, #0]
1000f582:	2b00      	cmp	r3, #0
1000f584:	d15d      	bne.n	1000f642 <_vfiprintf_r+0x102>
1000f586:	9b02      	ldr	r3, [sp, #8]
1000f588:	1ae3      	subs	r3, r4, r3
1000f58a:	9304      	str	r3, [sp, #16]
1000f58c:	d00d      	beq.n	1000f5aa <_vfiprintf_r+0x6a>
1000f58e:	9b04      	ldr	r3, [sp, #16]
1000f590:	9a02      	ldr	r2, [sp, #8]
1000f592:	0039      	movs	r1, r7
1000f594:	0030      	movs	r0, r6
1000f596:	f7ff ffc0 	bl	1000f51a <__sfputs_r>
1000f59a:	1c43      	adds	r3, r0, #1
1000f59c:	d100      	bne.n	1000f5a0 <_vfiprintf_r+0x60>
1000f59e:	e0cc      	b.n	1000f73a <_vfiprintf_r+0x1fa>
1000f5a0:	696a      	ldr	r2, [r5, #20]
1000f5a2:	9b04      	ldr	r3, [sp, #16]
1000f5a4:	4694      	mov	ip, r2
1000f5a6:	4463      	add	r3, ip
1000f5a8:	616b      	str	r3, [r5, #20]
1000f5aa:	7823      	ldrb	r3, [r4, #0]
1000f5ac:	2b00      	cmp	r3, #0
1000f5ae:	d100      	bne.n	1000f5b2 <_vfiprintf_r+0x72>
1000f5b0:	e0c3      	b.n	1000f73a <_vfiprintf_r+0x1fa>
1000f5b2:	2201      	movs	r2, #1
1000f5b4:	2300      	movs	r3, #0
1000f5b6:	4252      	negs	r2, r2
1000f5b8:	606a      	str	r2, [r5, #4]
1000f5ba:	a902      	add	r1, sp, #8
1000f5bc:	3254      	adds	r2, #84	; 0x54
1000f5be:	1852      	adds	r2, r2, r1
1000f5c0:	3401      	adds	r4, #1
1000f5c2:	602b      	str	r3, [r5, #0]
1000f5c4:	60eb      	str	r3, [r5, #12]
1000f5c6:	60ab      	str	r3, [r5, #8]
1000f5c8:	7013      	strb	r3, [r2, #0]
1000f5ca:	65ab      	str	r3, [r5, #88]	; 0x58
1000f5cc:	7821      	ldrb	r1, [r4, #0]
1000f5ce:	2205      	movs	r2, #5
1000f5d0:	4862      	ldr	r0, [pc, #392]	; (1000f75c <_vfiprintf_r+0x21c>)
1000f5d2:	f000 fb4b 	bl	1000fc6c <memchr>
1000f5d6:	1c63      	adds	r3, r4, #1
1000f5d8:	469c      	mov	ip, r3
1000f5da:	2800      	cmp	r0, #0
1000f5dc:	d135      	bne.n	1000f64a <_vfiprintf_r+0x10a>
1000f5de:	6829      	ldr	r1, [r5, #0]
1000f5e0:	06cb      	lsls	r3, r1, #27
1000f5e2:	d504      	bpl.n	1000f5ee <_vfiprintf_r+0xae>
1000f5e4:	2353      	movs	r3, #83	; 0x53
1000f5e6:	aa02      	add	r2, sp, #8
1000f5e8:	3020      	adds	r0, #32
1000f5ea:	189b      	adds	r3, r3, r2
1000f5ec:	7018      	strb	r0, [r3, #0]
1000f5ee:	070b      	lsls	r3, r1, #28
1000f5f0:	d504      	bpl.n	1000f5fc <_vfiprintf_r+0xbc>
1000f5f2:	2353      	movs	r3, #83	; 0x53
1000f5f4:	202b      	movs	r0, #43	; 0x2b
1000f5f6:	aa02      	add	r2, sp, #8
1000f5f8:	189b      	adds	r3, r3, r2
1000f5fa:	7018      	strb	r0, [r3, #0]
1000f5fc:	7823      	ldrb	r3, [r4, #0]
1000f5fe:	2b2a      	cmp	r3, #42	; 0x2a
1000f600:	d02c      	beq.n	1000f65c <_vfiprintf_r+0x11c>
1000f602:	2000      	movs	r0, #0
1000f604:	210a      	movs	r1, #10
1000f606:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000f608:	7822      	ldrb	r2, [r4, #0]
1000f60a:	3a30      	subs	r2, #48	; 0x30
1000f60c:	2a09      	cmp	r2, #9
1000f60e:	d800      	bhi.n	1000f612 <_vfiprintf_r+0xd2>
1000f610:	e06b      	b.n	1000f6ea <_vfiprintf_r+0x1aa>
1000f612:	2800      	cmp	r0, #0
1000f614:	d02a      	beq.n	1000f66c <_vfiprintf_r+0x12c>
1000f616:	9309      	str	r3, [sp, #36]	; 0x24
1000f618:	e028      	b.n	1000f66c <_vfiprintf_r+0x12c>
1000f61a:	4b51      	ldr	r3, [pc, #324]	; (1000f760 <_vfiprintf_r+0x220>)
1000f61c:	429f      	cmp	r7, r3
1000f61e:	d101      	bne.n	1000f624 <_vfiprintf_r+0xe4>
1000f620:	68b7      	ldr	r7, [r6, #8]
1000f622:	e79e      	b.n	1000f562 <_vfiprintf_r+0x22>
1000f624:	4b4f      	ldr	r3, [pc, #316]	; (1000f764 <_vfiprintf_r+0x224>)
1000f626:	429f      	cmp	r7, r3
1000f628:	d19b      	bne.n	1000f562 <_vfiprintf_r+0x22>
1000f62a:	68f7      	ldr	r7, [r6, #12]
1000f62c:	e799      	b.n	1000f562 <_vfiprintf_r+0x22>
1000f62e:	0039      	movs	r1, r7
1000f630:	0030      	movs	r0, r6
1000f632:	f7ff fc3b 	bl	1000eeac <__swsetup_r>
1000f636:	2800      	cmp	r0, #0
1000f638:	d099      	beq.n	1000f56e <_vfiprintf_r+0x2e>
1000f63a:	2001      	movs	r0, #1
1000f63c:	4240      	negs	r0, r0
1000f63e:	b01f      	add	sp, #124	; 0x7c
1000f640:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000f642:	2b25      	cmp	r3, #37	; 0x25
1000f644:	d09f      	beq.n	1000f586 <_vfiprintf_r+0x46>
1000f646:	3401      	adds	r4, #1
1000f648:	e79a      	b.n	1000f580 <_vfiprintf_r+0x40>
1000f64a:	4b44      	ldr	r3, [pc, #272]	; (1000f75c <_vfiprintf_r+0x21c>)
1000f64c:	6829      	ldr	r1, [r5, #0]
1000f64e:	1ac0      	subs	r0, r0, r3
1000f650:	2301      	movs	r3, #1
1000f652:	4083      	lsls	r3, r0
1000f654:	430b      	orrs	r3, r1
1000f656:	602b      	str	r3, [r5, #0]
1000f658:	4664      	mov	r4, ip
1000f65a:	e7b7      	b.n	1000f5cc <_vfiprintf_r+0x8c>
1000f65c:	9b05      	ldr	r3, [sp, #20]
1000f65e:	1d18      	adds	r0, r3, #4
1000f660:	681b      	ldr	r3, [r3, #0]
1000f662:	9005      	str	r0, [sp, #20]
1000f664:	2b00      	cmp	r3, #0
1000f666:	db3a      	blt.n	1000f6de <_vfiprintf_r+0x19e>
1000f668:	9309      	str	r3, [sp, #36]	; 0x24
1000f66a:	4664      	mov	r4, ip
1000f66c:	7823      	ldrb	r3, [r4, #0]
1000f66e:	2b2e      	cmp	r3, #46	; 0x2e
1000f670:	d10b      	bne.n	1000f68a <_vfiprintf_r+0x14a>
1000f672:	7863      	ldrb	r3, [r4, #1]
1000f674:	1c62      	adds	r2, r4, #1
1000f676:	2b2a      	cmp	r3, #42	; 0x2a
1000f678:	d13f      	bne.n	1000f6fa <_vfiprintf_r+0x1ba>
1000f67a:	9b05      	ldr	r3, [sp, #20]
1000f67c:	3402      	adds	r4, #2
1000f67e:	1d1a      	adds	r2, r3, #4
1000f680:	681b      	ldr	r3, [r3, #0]
1000f682:	9205      	str	r2, [sp, #20]
1000f684:	2b00      	cmp	r3, #0
1000f686:	db35      	blt.n	1000f6f4 <_vfiprintf_r+0x1b4>
1000f688:	9307      	str	r3, [sp, #28]
1000f68a:	7821      	ldrb	r1, [r4, #0]
1000f68c:	2203      	movs	r2, #3
1000f68e:	4836      	ldr	r0, [pc, #216]	; (1000f768 <_vfiprintf_r+0x228>)
1000f690:	f000 faec 	bl	1000fc6c <memchr>
1000f694:	2800      	cmp	r0, #0
1000f696:	d007      	beq.n	1000f6a8 <_vfiprintf_r+0x168>
1000f698:	4b33      	ldr	r3, [pc, #204]	; (1000f768 <_vfiprintf_r+0x228>)
1000f69a:	682a      	ldr	r2, [r5, #0]
1000f69c:	1ac0      	subs	r0, r0, r3
1000f69e:	2340      	movs	r3, #64	; 0x40
1000f6a0:	4083      	lsls	r3, r0
1000f6a2:	4313      	orrs	r3, r2
1000f6a4:	602b      	str	r3, [r5, #0]
1000f6a6:	3401      	adds	r4, #1
1000f6a8:	7821      	ldrb	r1, [r4, #0]
1000f6aa:	1c63      	adds	r3, r4, #1
1000f6ac:	2206      	movs	r2, #6
1000f6ae:	482f      	ldr	r0, [pc, #188]	; (1000f76c <_vfiprintf_r+0x22c>)
1000f6b0:	9302      	str	r3, [sp, #8]
1000f6b2:	7629      	strb	r1, [r5, #24]
1000f6b4:	f000 fada 	bl	1000fc6c <memchr>
1000f6b8:	2800      	cmp	r0, #0
1000f6ba:	d044      	beq.n	1000f746 <_vfiprintf_r+0x206>
1000f6bc:	4b2c      	ldr	r3, [pc, #176]	; (1000f770 <_vfiprintf_r+0x230>)
1000f6be:	2b00      	cmp	r3, #0
1000f6c0:	d12f      	bne.n	1000f722 <_vfiprintf_r+0x1e2>
1000f6c2:	6829      	ldr	r1, [r5, #0]
1000f6c4:	9b05      	ldr	r3, [sp, #20]
1000f6c6:	2207      	movs	r2, #7
1000f6c8:	05c9      	lsls	r1, r1, #23
1000f6ca:	d528      	bpl.n	1000f71e <_vfiprintf_r+0x1de>
1000f6cc:	189b      	adds	r3, r3, r2
1000f6ce:	4393      	bics	r3, r2
1000f6d0:	3308      	adds	r3, #8
1000f6d2:	9305      	str	r3, [sp, #20]
1000f6d4:	696b      	ldr	r3, [r5, #20]
1000f6d6:	9a03      	ldr	r2, [sp, #12]
1000f6d8:	189b      	adds	r3, r3, r2
1000f6da:	616b      	str	r3, [r5, #20]
1000f6dc:	e74f      	b.n	1000f57e <_vfiprintf_r+0x3e>
1000f6de:	425b      	negs	r3, r3
1000f6e0:	60eb      	str	r3, [r5, #12]
1000f6e2:	2302      	movs	r3, #2
1000f6e4:	430b      	orrs	r3, r1
1000f6e6:	602b      	str	r3, [r5, #0]
1000f6e8:	e7bf      	b.n	1000f66a <_vfiprintf_r+0x12a>
1000f6ea:	434b      	muls	r3, r1
1000f6ec:	3401      	adds	r4, #1
1000f6ee:	189b      	adds	r3, r3, r2
1000f6f0:	2001      	movs	r0, #1
1000f6f2:	e789      	b.n	1000f608 <_vfiprintf_r+0xc8>
1000f6f4:	2301      	movs	r3, #1
1000f6f6:	425b      	negs	r3, r3
1000f6f8:	e7c6      	b.n	1000f688 <_vfiprintf_r+0x148>
1000f6fa:	2300      	movs	r3, #0
1000f6fc:	0014      	movs	r4, r2
1000f6fe:	200a      	movs	r0, #10
1000f700:	001a      	movs	r2, r3
1000f702:	606b      	str	r3, [r5, #4]
1000f704:	7821      	ldrb	r1, [r4, #0]
1000f706:	3930      	subs	r1, #48	; 0x30
1000f708:	2909      	cmp	r1, #9
1000f70a:	d903      	bls.n	1000f714 <_vfiprintf_r+0x1d4>
1000f70c:	2b00      	cmp	r3, #0
1000f70e:	d0bc      	beq.n	1000f68a <_vfiprintf_r+0x14a>
1000f710:	9207      	str	r2, [sp, #28]
1000f712:	e7ba      	b.n	1000f68a <_vfiprintf_r+0x14a>
1000f714:	4342      	muls	r2, r0
1000f716:	3401      	adds	r4, #1
1000f718:	1852      	adds	r2, r2, r1
1000f71a:	2301      	movs	r3, #1
1000f71c:	e7f2      	b.n	1000f704 <_vfiprintf_r+0x1c4>
1000f71e:	3307      	adds	r3, #7
1000f720:	e7d5      	b.n	1000f6ce <_vfiprintf_r+0x18e>
1000f722:	ab05      	add	r3, sp, #20
1000f724:	9300      	str	r3, [sp, #0]
1000f726:	003a      	movs	r2, r7
1000f728:	4b12      	ldr	r3, [pc, #72]	; (1000f774 <_vfiprintf_r+0x234>)
1000f72a:	0029      	movs	r1, r5
1000f72c:	0030      	movs	r0, r6
1000f72e:	e000      	b.n	1000f732 <_vfiprintf_r+0x1f2>
1000f730:	bf00      	nop
1000f732:	9003      	str	r0, [sp, #12]
1000f734:	9b03      	ldr	r3, [sp, #12]
1000f736:	3301      	adds	r3, #1
1000f738:	d1cc      	bne.n	1000f6d4 <_vfiprintf_r+0x194>
1000f73a:	89bb      	ldrh	r3, [r7, #12]
1000f73c:	065b      	lsls	r3, r3, #25
1000f73e:	d500      	bpl.n	1000f742 <_vfiprintf_r+0x202>
1000f740:	e77b      	b.n	1000f63a <_vfiprintf_r+0xfa>
1000f742:	980b      	ldr	r0, [sp, #44]	; 0x2c
1000f744:	e77b      	b.n	1000f63e <_vfiprintf_r+0xfe>
1000f746:	ab05      	add	r3, sp, #20
1000f748:	9300      	str	r3, [sp, #0]
1000f74a:	003a      	movs	r2, r7
1000f74c:	4b09      	ldr	r3, [pc, #36]	; (1000f774 <_vfiprintf_r+0x234>)
1000f74e:	0029      	movs	r1, r5
1000f750:	0030      	movs	r0, r6
1000f752:	f000 f87f 	bl	1000f854 <_printf_i>
1000f756:	e7ec      	b.n	1000f732 <_vfiprintf_r+0x1f2>
1000f758:	100107fc 	.word	0x100107fc
1000f75c:	1001083c 	.word	0x1001083c
1000f760:	1001081c 	.word	0x1001081c
1000f764:	100107dc 	.word	0x100107dc
1000f768:	10010842 	.word	0x10010842
1000f76c:	10010846 	.word	0x10010846
1000f770:	00000000 	.word	0x00000000
1000f774:	1000f51b 	.word	0x1000f51b

1000f778 <_printf_common>:
1000f778:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000f77a:	0015      	movs	r5, r2
1000f77c:	9301      	str	r3, [sp, #4]
1000f77e:	688a      	ldr	r2, [r1, #8]
1000f780:	690b      	ldr	r3, [r1, #16]
1000f782:	9000      	str	r0, [sp, #0]
1000f784:	000c      	movs	r4, r1
1000f786:	4293      	cmp	r3, r2
1000f788:	da00      	bge.n	1000f78c <_printf_common+0x14>
1000f78a:	0013      	movs	r3, r2
1000f78c:	0022      	movs	r2, r4
1000f78e:	602b      	str	r3, [r5, #0]
1000f790:	3243      	adds	r2, #67	; 0x43
1000f792:	7812      	ldrb	r2, [r2, #0]
1000f794:	2a00      	cmp	r2, #0
1000f796:	d001      	beq.n	1000f79c <_printf_common+0x24>
1000f798:	3301      	adds	r3, #1
1000f79a:	602b      	str	r3, [r5, #0]
1000f79c:	6823      	ldr	r3, [r4, #0]
1000f79e:	069b      	lsls	r3, r3, #26
1000f7a0:	d502      	bpl.n	1000f7a8 <_printf_common+0x30>
1000f7a2:	682b      	ldr	r3, [r5, #0]
1000f7a4:	3302      	adds	r3, #2
1000f7a6:	602b      	str	r3, [r5, #0]
1000f7a8:	2706      	movs	r7, #6
1000f7aa:	6823      	ldr	r3, [r4, #0]
1000f7ac:	401f      	ands	r7, r3
1000f7ae:	d027      	beq.n	1000f800 <_printf_common+0x88>
1000f7b0:	0023      	movs	r3, r4
1000f7b2:	3343      	adds	r3, #67	; 0x43
1000f7b4:	781b      	ldrb	r3, [r3, #0]
1000f7b6:	1e5a      	subs	r2, r3, #1
1000f7b8:	4193      	sbcs	r3, r2
1000f7ba:	6822      	ldr	r2, [r4, #0]
1000f7bc:	0692      	lsls	r2, r2, #26
1000f7be:	d430      	bmi.n	1000f822 <_printf_common+0xaa>
1000f7c0:	0022      	movs	r2, r4
1000f7c2:	9901      	ldr	r1, [sp, #4]
1000f7c4:	3243      	adds	r2, #67	; 0x43
1000f7c6:	9800      	ldr	r0, [sp, #0]
1000f7c8:	9e08      	ldr	r6, [sp, #32]
1000f7ca:	47b0      	blx	r6
1000f7cc:	1c43      	adds	r3, r0, #1
1000f7ce:	d025      	beq.n	1000f81c <_printf_common+0xa4>
1000f7d0:	2306      	movs	r3, #6
1000f7d2:	6820      	ldr	r0, [r4, #0]
1000f7d4:	682a      	ldr	r2, [r5, #0]
1000f7d6:	68e1      	ldr	r1, [r4, #12]
1000f7d8:	4003      	ands	r3, r0
1000f7da:	2500      	movs	r5, #0
1000f7dc:	2b04      	cmp	r3, #4
1000f7de:	d103      	bne.n	1000f7e8 <_printf_common+0x70>
1000f7e0:	1a8d      	subs	r5, r1, r2
1000f7e2:	43eb      	mvns	r3, r5
1000f7e4:	17db      	asrs	r3, r3, #31
1000f7e6:	401d      	ands	r5, r3
1000f7e8:	68a3      	ldr	r3, [r4, #8]
1000f7ea:	6922      	ldr	r2, [r4, #16]
1000f7ec:	4293      	cmp	r3, r2
1000f7ee:	dd01      	ble.n	1000f7f4 <_printf_common+0x7c>
1000f7f0:	1a9b      	subs	r3, r3, r2
1000f7f2:	18ed      	adds	r5, r5, r3
1000f7f4:	2700      	movs	r7, #0
1000f7f6:	42bd      	cmp	r5, r7
1000f7f8:	d120      	bne.n	1000f83c <_printf_common+0xc4>
1000f7fa:	2000      	movs	r0, #0
1000f7fc:	e010      	b.n	1000f820 <_printf_common+0xa8>
1000f7fe:	3701      	adds	r7, #1
1000f800:	68e3      	ldr	r3, [r4, #12]
1000f802:	682a      	ldr	r2, [r5, #0]
1000f804:	1a9b      	subs	r3, r3, r2
1000f806:	429f      	cmp	r7, r3
1000f808:	dad2      	bge.n	1000f7b0 <_printf_common+0x38>
1000f80a:	0022      	movs	r2, r4
1000f80c:	2301      	movs	r3, #1
1000f80e:	3219      	adds	r2, #25
1000f810:	9901      	ldr	r1, [sp, #4]
1000f812:	9800      	ldr	r0, [sp, #0]
1000f814:	9e08      	ldr	r6, [sp, #32]
1000f816:	47b0      	blx	r6
1000f818:	1c43      	adds	r3, r0, #1
1000f81a:	d1f0      	bne.n	1000f7fe <_printf_common+0x86>
1000f81c:	2001      	movs	r0, #1
1000f81e:	4240      	negs	r0, r0
1000f820:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1000f822:	2030      	movs	r0, #48	; 0x30
1000f824:	18e1      	adds	r1, r4, r3
1000f826:	3143      	adds	r1, #67	; 0x43
1000f828:	7008      	strb	r0, [r1, #0]
1000f82a:	0021      	movs	r1, r4
1000f82c:	1c5a      	adds	r2, r3, #1
1000f82e:	3145      	adds	r1, #69	; 0x45
1000f830:	7809      	ldrb	r1, [r1, #0]
1000f832:	18a2      	adds	r2, r4, r2
1000f834:	3243      	adds	r2, #67	; 0x43
1000f836:	3302      	adds	r3, #2
1000f838:	7011      	strb	r1, [r2, #0]
1000f83a:	e7c1      	b.n	1000f7c0 <_printf_common+0x48>
1000f83c:	0022      	movs	r2, r4
1000f83e:	2301      	movs	r3, #1
1000f840:	321a      	adds	r2, #26
1000f842:	9901      	ldr	r1, [sp, #4]
1000f844:	9800      	ldr	r0, [sp, #0]
1000f846:	9e08      	ldr	r6, [sp, #32]
1000f848:	47b0      	blx	r6
1000f84a:	1c43      	adds	r3, r0, #1
1000f84c:	d0e6      	beq.n	1000f81c <_printf_common+0xa4>
1000f84e:	3701      	adds	r7, #1
1000f850:	e7d1      	b.n	1000f7f6 <_printf_common+0x7e>
	...

1000f854 <_printf_i>:
1000f854:	b5f0      	push	{r4, r5, r6, r7, lr}
1000f856:	b08b      	sub	sp, #44	; 0x2c
1000f858:	9206      	str	r2, [sp, #24]
1000f85a:	000a      	movs	r2, r1
1000f85c:	3243      	adds	r2, #67	; 0x43
1000f85e:	9307      	str	r3, [sp, #28]
1000f860:	9005      	str	r0, [sp, #20]
1000f862:	9204      	str	r2, [sp, #16]
1000f864:	7e0a      	ldrb	r2, [r1, #24]
1000f866:	000c      	movs	r4, r1
1000f868:	9b10      	ldr	r3, [sp, #64]	; 0x40
1000f86a:	2a6e      	cmp	r2, #110	; 0x6e
1000f86c:	d100      	bne.n	1000f870 <_printf_i+0x1c>
1000f86e:	e08f      	b.n	1000f990 <_printf_i+0x13c>
1000f870:	d817      	bhi.n	1000f8a2 <_printf_i+0x4e>
1000f872:	2a63      	cmp	r2, #99	; 0x63
1000f874:	d02c      	beq.n	1000f8d0 <_printf_i+0x7c>
1000f876:	d808      	bhi.n	1000f88a <_printf_i+0x36>
1000f878:	2a00      	cmp	r2, #0
1000f87a:	d100      	bne.n	1000f87e <_printf_i+0x2a>
1000f87c:	e099      	b.n	1000f9b2 <_printf_i+0x15e>
1000f87e:	2a58      	cmp	r2, #88	; 0x58
1000f880:	d054      	beq.n	1000f92c <_printf_i+0xd8>
1000f882:	0026      	movs	r6, r4
1000f884:	3642      	adds	r6, #66	; 0x42
1000f886:	7032      	strb	r2, [r6, #0]
1000f888:	e029      	b.n	1000f8de <_printf_i+0x8a>
1000f88a:	2a64      	cmp	r2, #100	; 0x64
1000f88c:	d001      	beq.n	1000f892 <_printf_i+0x3e>
1000f88e:	2a69      	cmp	r2, #105	; 0x69
1000f890:	d1f7      	bne.n	1000f882 <_printf_i+0x2e>
1000f892:	6821      	ldr	r1, [r4, #0]
1000f894:	681a      	ldr	r2, [r3, #0]
1000f896:	0608      	lsls	r0, r1, #24
1000f898:	d523      	bpl.n	1000f8e2 <_printf_i+0x8e>
1000f89a:	1d11      	adds	r1, r2, #4
1000f89c:	6019      	str	r1, [r3, #0]
1000f89e:	6815      	ldr	r5, [r2, #0]
1000f8a0:	e025      	b.n	1000f8ee <_printf_i+0x9a>
1000f8a2:	2a73      	cmp	r2, #115	; 0x73
1000f8a4:	d100      	bne.n	1000f8a8 <_printf_i+0x54>
1000f8a6:	e088      	b.n	1000f9ba <_printf_i+0x166>
1000f8a8:	d808      	bhi.n	1000f8bc <_printf_i+0x68>
1000f8aa:	2a6f      	cmp	r2, #111	; 0x6f
1000f8ac:	d029      	beq.n	1000f902 <_printf_i+0xae>
1000f8ae:	2a70      	cmp	r2, #112	; 0x70
1000f8b0:	d1e7      	bne.n	1000f882 <_printf_i+0x2e>
1000f8b2:	2220      	movs	r2, #32
1000f8b4:	6809      	ldr	r1, [r1, #0]
1000f8b6:	430a      	orrs	r2, r1
1000f8b8:	6022      	str	r2, [r4, #0]
1000f8ba:	e003      	b.n	1000f8c4 <_printf_i+0x70>
1000f8bc:	2a75      	cmp	r2, #117	; 0x75
1000f8be:	d020      	beq.n	1000f902 <_printf_i+0xae>
1000f8c0:	2a78      	cmp	r2, #120	; 0x78
1000f8c2:	d1de      	bne.n	1000f882 <_printf_i+0x2e>
1000f8c4:	0022      	movs	r2, r4
1000f8c6:	2178      	movs	r1, #120	; 0x78
1000f8c8:	3245      	adds	r2, #69	; 0x45
1000f8ca:	7011      	strb	r1, [r2, #0]
1000f8cc:	4a6c      	ldr	r2, [pc, #432]	; (1000fa80 <_printf_i+0x22c>)
1000f8ce:	e030      	b.n	1000f932 <_printf_i+0xde>
1000f8d0:	000e      	movs	r6, r1
1000f8d2:	681a      	ldr	r2, [r3, #0]
1000f8d4:	3642      	adds	r6, #66	; 0x42
1000f8d6:	1d11      	adds	r1, r2, #4
1000f8d8:	6019      	str	r1, [r3, #0]
1000f8da:	6813      	ldr	r3, [r2, #0]
1000f8dc:	7033      	strb	r3, [r6, #0]
1000f8de:	2301      	movs	r3, #1
1000f8e0:	e079      	b.n	1000f9d6 <_printf_i+0x182>
1000f8e2:	0649      	lsls	r1, r1, #25
1000f8e4:	d5d9      	bpl.n	1000f89a <_printf_i+0x46>
1000f8e6:	1d11      	adds	r1, r2, #4
1000f8e8:	6019      	str	r1, [r3, #0]
1000f8ea:	2300      	movs	r3, #0
1000f8ec:	5ed5      	ldrsh	r5, [r2, r3]
1000f8ee:	2d00      	cmp	r5, #0
1000f8f0:	da03      	bge.n	1000f8fa <_printf_i+0xa6>
1000f8f2:	232d      	movs	r3, #45	; 0x2d
1000f8f4:	9a04      	ldr	r2, [sp, #16]
1000f8f6:	426d      	negs	r5, r5
1000f8f8:	7013      	strb	r3, [r2, #0]
1000f8fa:	4b62      	ldr	r3, [pc, #392]	; (1000fa84 <_printf_i+0x230>)
1000f8fc:	270a      	movs	r7, #10
1000f8fe:	9303      	str	r3, [sp, #12]
1000f900:	e02f      	b.n	1000f962 <_printf_i+0x10e>
1000f902:	6820      	ldr	r0, [r4, #0]
1000f904:	6819      	ldr	r1, [r3, #0]
1000f906:	0605      	lsls	r5, r0, #24
1000f908:	d503      	bpl.n	1000f912 <_printf_i+0xbe>
1000f90a:	1d08      	adds	r0, r1, #4
1000f90c:	6018      	str	r0, [r3, #0]
1000f90e:	680d      	ldr	r5, [r1, #0]
1000f910:	e005      	b.n	1000f91e <_printf_i+0xca>
1000f912:	0640      	lsls	r0, r0, #25
1000f914:	d5f9      	bpl.n	1000f90a <_printf_i+0xb6>
1000f916:	680d      	ldr	r5, [r1, #0]
1000f918:	1d08      	adds	r0, r1, #4
1000f91a:	6018      	str	r0, [r3, #0]
1000f91c:	b2ad      	uxth	r5, r5
1000f91e:	4b59      	ldr	r3, [pc, #356]	; (1000fa84 <_printf_i+0x230>)
1000f920:	2708      	movs	r7, #8
1000f922:	9303      	str	r3, [sp, #12]
1000f924:	2a6f      	cmp	r2, #111	; 0x6f
1000f926:	d018      	beq.n	1000f95a <_printf_i+0x106>
1000f928:	270a      	movs	r7, #10
1000f92a:	e016      	b.n	1000f95a <_printf_i+0x106>
1000f92c:	3145      	adds	r1, #69	; 0x45
1000f92e:	700a      	strb	r2, [r1, #0]
1000f930:	4a54      	ldr	r2, [pc, #336]	; (1000fa84 <_printf_i+0x230>)
1000f932:	9203      	str	r2, [sp, #12]
1000f934:	681a      	ldr	r2, [r3, #0]
1000f936:	6821      	ldr	r1, [r4, #0]
1000f938:	1d10      	adds	r0, r2, #4
1000f93a:	6018      	str	r0, [r3, #0]
1000f93c:	6815      	ldr	r5, [r2, #0]
1000f93e:	0608      	lsls	r0, r1, #24
1000f940:	d522      	bpl.n	1000f988 <_printf_i+0x134>
1000f942:	07cb      	lsls	r3, r1, #31
1000f944:	d502      	bpl.n	1000f94c <_printf_i+0xf8>
1000f946:	2320      	movs	r3, #32
1000f948:	4319      	orrs	r1, r3
1000f94a:	6021      	str	r1, [r4, #0]
1000f94c:	2710      	movs	r7, #16
1000f94e:	2d00      	cmp	r5, #0
1000f950:	d103      	bne.n	1000f95a <_printf_i+0x106>
1000f952:	2320      	movs	r3, #32
1000f954:	6822      	ldr	r2, [r4, #0]
1000f956:	439a      	bics	r2, r3
1000f958:	6022      	str	r2, [r4, #0]
1000f95a:	0023      	movs	r3, r4
1000f95c:	2200      	movs	r2, #0
1000f95e:	3343      	adds	r3, #67	; 0x43
1000f960:	701a      	strb	r2, [r3, #0]
1000f962:	6863      	ldr	r3, [r4, #4]
1000f964:	60a3      	str	r3, [r4, #8]
1000f966:	2b00      	cmp	r3, #0
1000f968:	db5c      	blt.n	1000fa24 <_printf_i+0x1d0>
1000f96a:	2204      	movs	r2, #4
1000f96c:	6821      	ldr	r1, [r4, #0]
1000f96e:	4391      	bics	r1, r2
1000f970:	6021      	str	r1, [r4, #0]
1000f972:	2d00      	cmp	r5, #0
1000f974:	d158      	bne.n	1000fa28 <_printf_i+0x1d4>
1000f976:	9e04      	ldr	r6, [sp, #16]
1000f978:	2b00      	cmp	r3, #0
1000f97a:	d064      	beq.n	1000fa46 <_printf_i+0x1f2>
1000f97c:	0026      	movs	r6, r4
1000f97e:	9b03      	ldr	r3, [sp, #12]
1000f980:	3642      	adds	r6, #66	; 0x42
1000f982:	781b      	ldrb	r3, [r3, #0]
1000f984:	7033      	strb	r3, [r6, #0]
1000f986:	e05e      	b.n	1000fa46 <_printf_i+0x1f2>
1000f988:	0648      	lsls	r0, r1, #25
1000f98a:	d5da      	bpl.n	1000f942 <_printf_i+0xee>
1000f98c:	b2ad      	uxth	r5, r5
1000f98e:	e7d8      	b.n	1000f942 <_printf_i+0xee>
1000f990:	6809      	ldr	r1, [r1, #0]
1000f992:	681a      	ldr	r2, [r3, #0]
1000f994:	0608      	lsls	r0, r1, #24
1000f996:	d505      	bpl.n	1000f9a4 <_printf_i+0x150>
1000f998:	1d11      	adds	r1, r2, #4
1000f99a:	6019      	str	r1, [r3, #0]
1000f99c:	6813      	ldr	r3, [r2, #0]
1000f99e:	6962      	ldr	r2, [r4, #20]
1000f9a0:	601a      	str	r2, [r3, #0]
1000f9a2:	e006      	b.n	1000f9b2 <_printf_i+0x15e>
1000f9a4:	0649      	lsls	r1, r1, #25
1000f9a6:	d5f7      	bpl.n	1000f998 <_printf_i+0x144>
1000f9a8:	1d11      	adds	r1, r2, #4
1000f9aa:	6019      	str	r1, [r3, #0]
1000f9ac:	6813      	ldr	r3, [r2, #0]
1000f9ae:	8aa2      	ldrh	r2, [r4, #20]
1000f9b0:	801a      	strh	r2, [r3, #0]
1000f9b2:	2300      	movs	r3, #0
1000f9b4:	9e04      	ldr	r6, [sp, #16]
1000f9b6:	6123      	str	r3, [r4, #16]
1000f9b8:	e054      	b.n	1000fa64 <_printf_i+0x210>
1000f9ba:	681a      	ldr	r2, [r3, #0]
1000f9bc:	1d11      	adds	r1, r2, #4
1000f9be:	6019      	str	r1, [r3, #0]
1000f9c0:	6816      	ldr	r6, [r2, #0]
1000f9c2:	2100      	movs	r1, #0
1000f9c4:	6862      	ldr	r2, [r4, #4]
1000f9c6:	0030      	movs	r0, r6
1000f9c8:	f000 f950 	bl	1000fc6c <memchr>
1000f9cc:	2800      	cmp	r0, #0
1000f9ce:	d001      	beq.n	1000f9d4 <_printf_i+0x180>
1000f9d0:	1b80      	subs	r0, r0, r6
1000f9d2:	6060      	str	r0, [r4, #4]
1000f9d4:	6863      	ldr	r3, [r4, #4]
1000f9d6:	6123      	str	r3, [r4, #16]
1000f9d8:	2300      	movs	r3, #0
1000f9da:	9a04      	ldr	r2, [sp, #16]
1000f9dc:	7013      	strb	r3, [r2, #0]
1000f9de:	e041      	b.n	1000fa64 <_printf_i+0x210>
1000f9e0:	6923      	ldr	r3, [r4, #16]
1000f9e2:	0032      	movs	r2, r6
1000f9e4:	9906      	ldr	r1, [sp, #24]
1000f9e6:	9805      	ldr	r0, [sp, #20]
1000f9e8:	9d07      	ldr	r5, [sp, #28]
1000f9ea:	47a8      	blx	r5
1000f9ec:	1c43      	adds	r3, r0, #1
1000f9ee:	d043      	beq.n	1000fa78 <_printf_i+0x224>
1000f9f0:	6823      	ldr	r3, [r4, #0]
1000f9f2:	2500      	movs	r5, #0
1000f9f4:	079b      	lsls	r3, r3, #30
1000f9f6:	d40f      	bmi.n	1000fa18 <_printf_i+0x1c4>
1000f9f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000f9fa:	68e0      	ldr	r0, [r4, #12]
1000f9fc:	4298      	cmp	r0, r3
1000f9fe:	da3d      	bge.n	1000fa7c <_printf_i+0x228>
1000fa00:	0018      	movs	r0, r3
1000fa02:	e03b      	b.n	1000fa7c <_printf_i+0x228>
1000fa04:	0022      	movs	r2, r4
1000fa06:	2301      	movs	r3, #1
1000fa08:	3219      	adds	r2, #25
1000fa0a:	9906      	ldr	r1, [sp, #24]
1000fa0c:	9805      	ldr	r0, [sp, #20]
1000fa0e:	9e07      	ldr	r6, [sp, #28]
1000fa10:	47b0      	blx	r6
1000fa12:	1c43      	adds	r3, r0, #1
1000fa14:	d030      	beq.n	1000fa78 <_printf_i+0x224>
1000fa16:	3501      	adds	r5, #1
1000fa18:	68e3      	ldr	r3, [r4, #12]
1000fa1a:	9a09      	ldr	r2, [sp, #36]	; 0x24
1000fa1c:	1a9b      	subs	r3, r3, r2
1000fa1e:	429d      	cmp	r5, r3
1000fa20:	dbf0      	blt.n	1000fa04 <_printf_i+0x1b0>
1000fa22:	e7e9      	b.n	1000f9f8 <_printf_i+0x1a4>
1000fa24:	2d00      	cmp	r5, #0
1000fa26:	d0a9      	beq.n	1000f97c <_printf_i+0x128>
1000fa28:	9e04      	ldr	r6, [sp, #16]
1000fa2a:	0028      	movs	r0, r5
1000fa2c:	0039      	movs	r1, r7
1000fa2e:	f7fe f897 	bl	1000db60 <__aeabi_uidivmod>
1000fa32:	9b03      	ldr	r3, [sp, #12]
1000fa34:	3e01      	subs	r6, #1
1000fa36:	5c5b      	ldrb	r3, [r3, r1]
1000fa38:	0028      	movs	r0, r5
1000fa3a:	7033      	strb	r3, [r6, #0]
1000fa3c:	0039      	movs	r1, r7
1000fa3e:	f7fe f809 	bl	1000da54 <__udivsi3>
1000fa42:	1e05      	subs	r5, r0, #0
1000fa44:	d1f1      	bne.n	1000fa2a <_printf_i+0x1d6>
1000fa46:	2f08      	cmp	r7, #8
1000fa48:	d109      	bne.n	1000fa5e <_printf_i+0x20a>
1000fa4a:	6823      	ldr	r3, [r4, #0]
1000fa4c:	07db      	lsls	r3, r3, #31
1000fa4e:	d506      	bpl.n	1000fa5e <_printf_i+0x20a>
1000fa50:	6863      	ldr	r3, [r4, #4]
1000fa52:	6922      	ldr	r2, [r4, #16]
1000fa54:	4293      	cmp	r3, r2
1000fa56:	dc02      	bgt.n	1000fa5e <_printf_i+0x20a>
1000fa58:	2330      	movs	r3, #48	; 0x30
1000fa5a:	3e01      	subs	r6, #1
1000fa5c:	7033      	strb	r3, [r6, #0]
1000fa5e:	9b04      	ldr	r3, [sp, #16]
1000fa60:	1b9b      	subs	r3, r3, r6
1000fa62:	6123      	str	r3, [r4, #16]
1000fa64:	9b07      	ldr	r3, [sp, #28]
1000fa66:	aa09      	add	r2, sp, #36	; 0x24
1000fa68:	9300      	str	r3, [sp, #0]
1000fa6a:	0021      	movs	r1, r4
1000fa6c:	9b06      	ldr	r3, [sp, #24]
1000fa6e:	9805      	ldr	r0, [sp, #20]
1000fa70:	f7ff fe82 	bl	1000f778 <_printf_common>
1000fa74:	1c43      	adds	r3, r0, #1
1000fa76:	d1b3      	bne.n	1000f9e0 <_printf_i+0x18c>
1000fa78:	2001      	movs	r0, #1
1000fa7a:	4240      	negs	r0, r0
1000fa7c:	b00b      	add	sp, #44	; 0x2c
1000fa7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000fa80:	1001085e 	.word	0x1001085e
1000fa84:	1001084d 	.word	0x1001084d

1000fa88 <_putc_r>:
1000fa88:	b570      	push	{r4, r5, r6, lr}
1000fa8a:	0006      	movs	r6, r0
1000fa8c:	000d      	movs	r5, r1
1000fa8e:	0014      	movs	r4, r2
1000fa90:	2800      	cmp	r0, #0
1000fa92:	d004      	beq.n	1000fa9e <_putc_r+0x16>
1000fa94:	6983      	ldr	r3, [r0, #24]
1000fa96:	2b00      	cmp	r3, #0
1000fa98:	d101      	bne.n	1000fa9e <_putc_r+0x16>
1000fa9a:	f7ff fb75 	bl	1000f188 <__sinit>
1000fa9e:	4b12      	ldr	r3, [pc, #72]	; (1000fae8 <_putc_r+0x60>)
1000faa0:	429c      	cmp	r4, r3
1000faa2:	d111      	bne.n	1000fac8 <_putc_r+0x40>
1000faa4:	6874      	ldr	r4, [r6, #4]
1000faa6:	68a3      	ldr	r3, [r4, #8]
1000faa8:	3b01      	subs	r3, #1
1000faaa:	60a3      	str	r3, [r4, #8]
1000faac:	2b00      	cmp	r3, #0
1000faae:	da05      	bge.n	1000fabc <_putc_r+0x34>
1000fab0:	69a2      	ldr	r2, [r4, #24]
1000fab2:	4293      	cmp	r3, r2
1000fab4:	db12      	blt.n	1000fadc <_putc_r+0x54>
1000fab6:	b2eb      	uxtb	r3, r5
1000fab8:	2b0a      	cmp	r3, #10
1000faba:	d00f      	beq.n	1000fadc <_putc_r+0x54>
1000fabc:	6823      	ldr	r3, [r4, #0]
1000fabe:	b2e8      	uxtb	r0, r5
1000fac0:	1c5a      	adds	r2, r3, #1
1000fac2:	6022      	str	r2, [r4, #0]
1000fac4:	701d      	strb	r5, [r3, #0]
1000fac6:	bd70      	pop	{r4, r5, r6, pc}
1000fac8:	4b08      	ldr	r3, [pc, #32]	; (1000faec <_putc_r+0x64>)
1000faca:	429c      	cmp	r4, r3
1000facc:	d101      	bne.n	1000fad2 <_putc_r+0x4a>
1000face:	68b4      	ldr	r4, [r6, #8]
1000fad0:	e7e9      	b.n	1000faa6 <_putc_r+0x1e>
1000fad2:	4b07      	ldr	r3, [pc, #28]	; (1000faf0 <_putc_r+0x68>)
1000fad4:	429c      	cmp	r4, r3
1000fad6:	d1e6      	bne.n	1000faa6 <_putc_r+0x1e>
1000fad8:	68f4      	ldr	r4, [r6, #12]
1000fada:	e7e4      	b.n	1000faa6 <_putc_r+0x1e>
1000fadc:	0022      	movs	r2, r4
1000fade:	0029      	movs	r1, r5
1000fae0:	0030      	movs	r0, r6
1000fae2:	f7ff f98d 	bl	1000ee00 <__swbuf_r>
1000fae6:	e7ee      	b.n	1000fac6 <_putc_r+0x3e>
1000fae8:	100107fc 	.word	0x100107fc
1000faec:	1001081c 	.word	0x1001081c
1000faf0:	100107dc 	.word	0x100107dc

1000faf4 <_sbrk_r>:
1000faf4:	2300      	movs	r3, #0
1000faf6:	b570      	push	{r4, r5, r6, lr}
1000faf8:	4c06      	ldr	r4, [pc, #24]	; (1000fb14 <_sbrk_r+0x20>)
1000fafa:	0005      	movs	r5, r0
1000fafc:	0008      	movs	r0, r1
1000fafe:	6023      	str	r3, [r4, #0]
1000fb00:	f7f9 fb8c 	bl	1000921c <_sbrk>
1000fb04:	1c43      	adds	r3, r0, #1
1000fb06:	d103      	bne.n	1000fb10 <_sbrk_r+0x1c>
1000fb08:	6823      	ldr	r3, [r4, #0]
1000fb0a:	2b00      	cmp	r3, #0
1000fb0c:	d000      	beq.n	1000fb10 <_sbrk_r+0x1c>
1000fb0e:	602b      	str	r3, [r5, #0]
1000fb10:	bd70      	pop	{r4, r5, r6, pc}
1000fb12:	46c0      	nop			; (mov r8, r8)
1000fb14:	10013030 	.word	0x10013030

1000fb18 <__sread>:
1000fb18:	b570      	push	{r4, r5, r6, lr}
1000fb1a:	000c      	movs	r4, r1
1000fb1c:	250e      	movs	r5, #14
1000fb1e:	5f49      	ldrsh	r1, [r1, r5]
1000fb20:	f000 f8b2 	bl	1000fc88 <_read_r>
1000fb24:	2800      	cmp	r0, #0
1000fb26:	db03      	blt.n	1000fb30 <__sread+0x18>
1000fb28:	6d63      	ldr	r3, [r4, #84]	; 0x54
1000fb2a:	181b      	adds	r3, r3, r0
1000fb2c:	6563      	str	r3, [r4, #84]	; 0x54
1000fb2e:	bd70      	pop	{r4, r5, r6, pc}
1000fb30:	89a3      	ldrh	r3, [r4, #12]
1000fb32:	4a02      	ldr	r2, [pc, #8]	; (1000fb3c <__sread+0x24>)
1000fb34:	4013      	ands	r3, r2
1000fb36:	81a3      	strh	r3, [r4, #12]
1000fb38:	e7f9      	b.n	1000fb2e <__sread+0x16>
1000fb3a:	46c0      	nop			; (mov r8, r8)
1000fb3c:	ffffefff 	.word	0xffffefff

1000fb40 <__swrite>:
1000fb40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000fb42:	001f      	movs	r7, r3
1000fb44:	898b      	ldrh	r3, [r1, #12]
1000fb46:	0005      	movs	r5, r0
1000fb48:	000c      	movs	r4, r1
1000fb4a:	0016      	movs	r6, r2
1000fb4c:	05db      	lsls	r3, r3, #23
1000fb4e:	d505      	bpl.n	1000fb5c <__swrite+0x1c>
1000fb50:	230e      	movs	r3, #14
1000fb52:	5ec9      	ldrsh	r1, [r1, r3]
1000fb54:	2200      	movs	r2, #0
1000fb56:	2302      	movs	r3, #2
1000fb58:	f000 f874 	bl	1000fc44 <_lseek_r>
1000fb5c:	89a3      	ldrh	r3, [r4, #12]
1000fb5e:	4a05      	ldr	r2, [pc, #20]	; (1000fb74 <__swrite+0x34>)
1000fb60:	0028      	movs	r0, r5
1000fb62:	4013      	ands	r3, r2
1000fb64:	81a3      	strh	r3, [r4, #12]
1000fb66:	0032      	movs	r2, r6
1000fb68:	230e      	movs	r3, #14
1000fb6a:	5ee1      	ldrsh	r1, [r4, r3]
1000fb6c:	003b      	movs	r3, r7
1000fb6e:	f000 f81f 	bl	1000fbb0 <_write_r>
1000fb72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000fb74:	ffffefff 	.word	0xffffefff

1000fb78 <__sseek>:
1000fb78:	b570      	push	{r4, r5, r6, lr}
1000fb7a:	000c      	movs	r4, r1
1000fb7c:	250e      	movs	r5, #14
1000fb7e:	5f49      	ldrsh	r1, [r1, r5]
1000fb80:	f000 f860 	bl	1000fc44 <_lseek_r>
1000fb84:	89a3      	ldrh	r3, [r4, #12]
1000fb86:	1c42      	adds	r2, r0, #1
1000fb88:	d103      	bne.n	1000fb92 <__sseek+0x1a>
1000fb8a:	4a05      	ldr	r2, [pc, #20]	; (1000fba0 <__sseek+0x28>)
1000fb8c:	4013      	ands	r3, r2
1000fb8e:	81a3      	strh	r3, [r4, #12]
1000fb90:	bd70      	pop	{r4, r5, r6, pc}
1000fb92:	2280      	movs	r2, #128	; 0x80
1000fb94:	0152      	lsls	r2, r2, #5
1000fb96:	4313      	orrs	r3, r2
1000fb98:	81a3      	strh	r3, [r4, #12]
1000fb9a:	6560      	str	r0, [r4, #84]	; 0x54
1000fb9c:	e7f8      	b.n	1000fb90 <__sseek+0x18>
1000fb9e:	46c0      	nop			; (mov r8, r8)
1000fba0:	ffffefff 	.word	0xffffefff

1000fba4 <__sclose>:
1000fba4:	b510      	push	{r4, lr}
1000fba6:	230e      	movs	r3, #14
1000fba8:	5ec9      	ldrsh	r1, [r1, r3]
1000fbaa:	f000 f815 	bl	1000fbd8 <_close_r>
1000fbae:	bd10      	pop	{r4, pc}

1000fbb0 <_write_r>:
1000fbb0:	b570      	push	{r4, r5, r6, lr}
1000fbb2:	0005      	movs	r5, r0
1000fbb4:	0008      	movs	r0, r1
1000fbb6:	0011      	movs	r1, r2
1000fbb8:	2200      	movs	r2, #0
1000fbba:	4c06      	ldr	r4, [pc, #24]	; (1000fbd4 <_write_r+0x24>)
1000fbbc:	6022      	str	r2, [r4, #0]
1000fbbe:	001a      	movs	r2, r3
1000fbc0:	f7f9 fb04 	bl	100091cc <_write>
1000fbc4:	1c43      	adds	r3, r0, #1
1000fbc6:	d103      	bne.n	1000fbd0 <_write_r+0x20>
1000fbc8:	6823      	ldr	r3, [r4, #0]
1000fbca:	2b00      	cmp	r3, #0
1000fbcc:	d000      	beq.n	1000fbd0 <_write_r+0x20>
1000fbce:	602b      	str	r3, [r5, #0]
1000fbd0:	bd70      	pop	{r4, r5, r6, pc}
1000fbd2:	46c0      	nop			; (mov r8, r8)
1000fbd4:	10013030 	.word	0x10013030

1000fbd8 <_close_r>:
1000fbd8:	2300      	movs	r3, #0
1000fbda:	b570      	push	{r4, r5, r6, lr}
1000fbdc:	4c06      	ldr	r4, [pc, #24]	; (1000fbf8 <_close_r+0x20>)
1000fbde:	0005      	movs	r5, r0
1000fbe0:	0008      	movs	r0, r1
1000fbe2:	6023      	str	r3, [r4, #0]
1000fbe4:	f7f9 fb2c 	bl	10009240 <_close>
1000fbe8:	1c43      	adds	r3, r0, #1
1000fbea:	d103      	bne.n	1000fbf4 <_close_r+0x1c>
1000fbec:	6823      	ldr	r3, [r4, #0]
1000fbee:	2b00      	cmp	r3, #0
1000fbf0:	d000      	beq.n	1000fbf4 <_close_r+0x1c>
1000fbf2:	602b      	str	r3, [r5, #0]
1000fbf4:	bd70      	pop	{r4, r5, r6, pc}
1000fbf6:	46c0      	nop			; (mov r8, r8)
1000fbf8:	10013030 	.word	0x10013030

1000fbfc <_fstat_r>:
1000fbfc:	2300      	movs	r3, #0
1000fbfe:	b570      	push	{r4, r5, r6, lr}
1000fc00:	4c06      	ldr	r4, [pc, #24]	; (1000fc1c <_fstat_r+0x20>)
1000fc02:	0005      	movs	r5, r0
1000fc04:	0008      	movs	r0, r1
1000fc06:	0011      	movs	r1, r2
1000fc08:	6023      	str	r3, [r4, #0]
1000fc0a:	f7f9 fb1c 	bl	10009246 <_fstat>
1000fc0e:	1c43      	adds	r3, r0, #1
1000fc10:	d103      	bne.n	1000fc1a <_fstat_r+0x1e>
1000fc12:	6823      	ldr	r3, [r4, #0]
1000fc14:	2b00      	cmp	r3, #0
1000fc16:	d000      	beq.n	1000fc1a <_fstat_r+0x1e>
1000fc18:	602b      	str	r3, [r5, #0]
1000fc1a:	bd70      	pop	{r4, r5, r6, pc}
1000fc1c:	10013030 	.word	0x10013030

1000fc20 <_isatty_r>:
1000fc20:	2300      	movs	r3, #0
1000fc22:	b570      	push	{r4, r5, r6, lr}
1000fc24:	4c06      	ldr	r4, [pc, #24]	; (1000fc40 <_isatty_r+0x20>)
1000fc26:	0005      	movs	r5, r0
1000fc28:	0008      	movs	r0, r1
1000fc2a:	6023      	str	r3, [r4, #0]
1000fc2c:	f7f9 fb10 	bl	10009250 <_isatty>
1000fc30:	1c43      	adds	r3, r0, #1
1000fc32:	d103      	bne.n	1000fc3c <_isatty_r+0x1c>
1000fc34:	6823      	ldr	r3, [r4, #0]
1000fc36:	2b00      	cmp	r3, #0
1000fc38:	d000      	beq.n	1000fc3c <_isatty_r+0x1c>
1000fc3a:	602b      	str	r3, [r5, #0]
1000fc3c:	bd70      	pop	{r4, r5, r6, pc}
1000fc3e:	46c0      	nop			; (mov r8, r8)
1000fc40:	10013030 	.word	0x10013030

1000fc44 <_lseek_r>:
1000fc44:	b570      	push	{r4, r5, r6, lr}
1000fc46:	0005      	movs	r5, r0
1000fc48:	0008      	movs	r0, r1
1000fc4a:	0011      	movs	r1, r2
1000fc4c:	2200      	movs	r2, #0
1000fc4e:	4c06      	ldr	r4, [pc, #24]	; (1000fc68 <_lseek_r+0x24>)
1000fc50:	6022      	str	r2, [r4, #0]
1000fc52:	001a      	movs	r2, r3
1000fc54:	f7f9 fafe 	bl	10009254 <_lseek>
1000fc58:	1c43      	adds	r3, r0, #1
1000fc5a:	d103      	bne.n	1000fc64 <_lseek_r+0x20>
1000fc5c:	6823      	ldr	r3, [r4, #0]
1000fc5e:	2b00      	cmp	r3, #0
1000fc60:	d000      	beq.n	1000fc64 <_lseek_r+0x20>
1000fc62:	602b      	str	r3, [r5, #0]
1000fc64:	bd70      	pop	{r4, r5, r6, pc}
1000fc66:	46c0      	nop			; (mov r8, r8)
1000fc68:	10013030 	.word	0x10013030

1000fc6c <memchr>:
1000fc6c:	b2c9      	uxtb	r1, r1
1000fc6e:	1882      	adds	r2, r0, r2
1000fc70:	4290      	cmp	r0, r2
1000fc72:	d101      	bne.n	1000fc78 <memchr+0xc>
1000fc74:	2000      	movs	r0, #0
1000fc76:	4770      	bx	lr
1000fc78:	7803      	ldrb	r3, [r0, #0]
1000fc7a:	428b      	cmp	r3, r1
1000fc7c:	d0fb      	beq.n	1000fc76 <memchr+0xa>
1000fc7e:	3001      	adds	r0, #1
1000fc80:	e7f6      	b.n	1000fc70 <memchr+0x4>

1000fc82 <__malloc_lock>:
1000fc82:	4770      	bx	lr

1000fc84 <__malloc_unlock>:
1000fc84:	4770      	bx	lr
	...

1000fc88 <_read_r>:
1000fc88:	b570      	push	{r4, r5, r6, lr}
1000fc8a:	0005      	movs	r5, r0
1000fc8c:	0008      	movs	r0, r1
1000fc8e:	0011      	movs	r1, r2
1000fc90:	2200      	movs	r2, #0
1000fc92:	4c06      	ldr	r4, [pc, #24]	; (1000fcac <_read_r+0x24>)
1000fc94:	6022      	str	r2, [r4, #0]
1000fc96:	001a      	movs	r2, r3
1000fc98:	f7f9 fa76 	bl	10009188 <_read>
1000fc9c:	1c43      	adds	r3, r0, #1
1000fc9e:	d103      	bne.n	1000fca8 <_read_r+0x20>
1000fca0:	6823      	ldr	r3, [r4, #0]
1000fca2:	2b00      	cmp	r3, #0
1000fca4:	d000      	beq.n	1000fca8 <_read_r+0x20>
1000fca6:	602b      	str	r3, [r5, #0]
1000fca8:	bd70      	pop	{r4, r5, r6, pc}
1000fcaa:	46c0      	nop			; (mov r8, r8)
1000fcac:	10013030 	.word	0x10013030

1000fcb0 <__aeabi_lmul>:
1000fcb0:	b5f0      	push	{r4, r5, r6, r7, lr}
1000fcb2:	46ce      	mov	lr, r9
1000fcb4:	4647      	mov	r7, r8
1000fcb6:	0415      	lsls	r5, r2, #16
1000fcb8:	0c2d      	lsrs	r5, r5, #16
1000fcba:	002e      	movs	r6, r5
1000fcbc:	b580      	push	{r7, lr}
1000fcbe:	0407      	lsls	r7, r0, #16
1000fcc0:	0c14      	lsrs	r4, r2, #16
1000fcc2:	0c3f      	lsrs	r7, r7, #16
1000fcc4:	4699      	mov	r9, r3
1000fcc6:	0c03      	lsrs	r3, r0, #16
1000fcc8:	437e      	muls	r6, r7
1000fcca:	435d      	muls	r5, r3
1000fccc:	4367      	muls	r7, r4
1000fcce:	4363      	muls	r3, r4
1000fcd0:	197f      	adds	r7, r7, r5
1000fcd2:	0c34      	lsrs	r4, r6, #16
1000fcd4:	19e4      	adds	r4, r4, r7
1000fcd6:	469c      	mov	ip, r3
1000fcd8:	42a5      	cmp	r5, r4
1000fcda:	d903      	bls.n	1000fce4 <__aeabi_lmul+0x34>
1000fcdc:	2380      	movs	r3, #128	; 0x80
1000fcde:	025b      	lsls	r3, r3, #9
1000fce0:	4698      	mov	r8, r3
1000fce2:	44c4      	add	ip, r8
1000fce4:	464b      	mov	r3, r9
1000fce6:	4351      	muls	r1, r2
1000fce8:	4343      	muls	r3, r0
1000fcea:	0436      	lsls	r6, r6, #16
1000fcec:	0c36      	lsrs	r6, r6, #16
1000fcee:	0c25      	lsrs	r5, r4, #16
1000fcf0:	0424      	lsls	r4, r4, #16
1000fcf2:	4465      	add	r5, ip
1000fcf4:	19a4      	adds	r4, r4, r6
1000fcf6:	1859      	adds	r1, r3, r1
1000fcf8:	1949      	adds	r1, r1, r5
1000fcfa:	0020      	movs	r0, r4
1000fcfc:	bc0c      	pop	{r2, r3}
1000fcfe:	4690      	mov	r8, r2
1000fd00:	4699      	mov	r9, r3
1000fd02:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000fd04:	10008518 	.word	0x10008518
1000fd08:	10008526 	.word	0x10008526
1000fd0c:	10008534 	.word	0x10008534
1000fd10:	10008542 	.word	0x10008542
1000fd14:	10008550 	.word	0x10008550
1000fd18:	1000855e 	.word	0x1000855e
1000fd1c:	1000856c 	.word	0x1000856c
1000fd20:	1000857c 	.word	0x1000857c
1000fd24:	1000858c 	.word	0x1000858c
1000fd28:	1000859c 	.word	0x1000859c
1000fd2c:	100085ac 	.word	0x100085ac
1000fd30:	100085bc 	.word	0x100085bc
1000fd34:	100085cc 	.word	0x100085cc
1000fd38:	100085dc 	.word	0x100085dc
1000fd3c:	100085ec 	.word	0x100085ec
1000fd40:	100085fc 	.word	0x100085fc
1000fd44:	1000860c 	.word	0x1000860c
1000fd48:	1000861c 	.word	0x1000861c
1000fd4c:	1000862c 	.word	0x1000862c
1000fd50:	1000863c 	.word	0x1000863c
1000fd54:	1000864c 	.word	0x1000864c
1000fd58:	1000865c 	.word	0x1000865c
1000fd5c:	1000866c 	.word	0x1000866c
1000fd60:	1000867c 	.word	0x1000867c
1000fd64:	1000868c 	.word	0x1000868c
1000fd68:	1000869c 	.word	0x1000869c
1000fd6c:	100086ac 	.word	0x100086ac
1000fd70:	100086bc 	.word	0x100086bc
1000fd74:	100086ca 	.word	0x100086ca
1000fd78:	100086d8 	.word	0x100086d8
1000fd7c:	100086e6 	.word	0x100086e6
1000fd80:	100086f4 	.word	0x100086f4
1000fd84:	10008702 	.word	0x10008702
1000fd88:	10008710 	.word	0x10008710
1000fd8c:	1000871e 	.word	0x1000871e
1000fd90:	1000872c 	.word	0x1000872c
1000fd94:	1000873c 	.word	0x1000873c
1000fd98:	1000874c 	.word	0x1000874c
1000fd9c:	1000875c 	.word	0x1000875c
1000fda0:	1000876c 	.word	0x1000876c
1000fda4:	1000877c 	.word	0x1000877c
1000fda8:	1000878c 	.word	0x1000878c
1000fdac:	1000879c 	.word	0x1000879c
1000fdb0:	100087ac 	.word	0x100087ac
1000fdb4:	100087bc 	.word	0x100087bc
1000fdb8:	100087cc 	.word	0x100087cc
1000fdbc:	100087dc 	.word	0x100087dc
1000fdc0:	100087ec 	.word	0x100087ec
1000fdc4:	100087fc 	.word	0x100087fc
1000fdc8:	1000880c 	.word	0x1000880c
1000fdcc:	1000881c 	.word	0x1000881c
1000fdd0:	1000882c 	.word	0x1000882c
1000fdd4:	1000883a 	.word	0x1000883a
1000fdd8:	10008848 	.word	0x10008848
1000fddc:	10008888 	.word	0x10008888
1000fde0:	100088b0 	.word	0x100088b0
1000fde4:	100088d8 	.word	0x100088d8
1000fde8:	10008900 	.word	0x10008900
1000fdec:	10008b40 	.word	0x10008b40
1000fdf0:	10008930 	.word	0x10008930
1000fdf4:	10008948 	.word	0x10008948
1000fdf8:	100089c0 	.word	0x100089c0
1000fdfc:	100089d8 	.word	0x100089d8
1000fe00:	10008960 	.word	0x10008960
1000fe04:	10008978 	.word	0x10008978
1000fe08:	10008990 	.word	0x10008990
1000fe0c:	100089a8 	.word	0x100089a8
1000fe10:	100089f0 	.word	0x100089f0
1000fe14:	10008ca4 	.word	0x10008ca4
1000fe18:	10008ca4 	.word	0x10008ca4
1000fe1c:	10008ca4 	.word	0x10008ca4
1000fe20:	10008ca4 	.word	0x10008ca4
1000fe24:	10008ca4 	.word	0x10008ca4
1000fe28:	10008ca4 	.word	0x10008ca4
1000fe2c:	10008ca4 	.word	0x10008ca4
1000fe30:	10008ca4 	.word	0x10008ca4
1000fe34:	10008a98 	.word	0x10008a98
1000fe38:	10008ab0 	.word	0x10008ab0
1000fe3c:	10008ac8 	.word	0x10008ac8
1000fe40:	10008b54 	.word	0x10008b54
1000fe44:	10008a20 	.word	0x10008a20
1000fe48:	10008ca4 	.word	0x10008ca4
1000fe4c:	10008ca4 	.word	0x10008ca4
1000fe50:	10008ca4 	.word	0x10008ca4
1000fe54:	10008ca4 	.word	0x10008ca4
1000fe58:	10008ca4 	.word	0x10008ca4
1000fe5c:	10008ca4 	.word	0x10008ca4
1000fe60:	10008ae0 	.word	0x10008ae0
1000fe64:	10008af8 	.word	0x10008af8
1000fe68:	10008b10 	.word	0x10008b10
1000fe6c:	10008b28 	.word	0x10008b28
1000fe70:	10008ca4 	.word	0x10008ca4
1000fe74:	10008c5c 	.word	0x10008c5c
1000fe78:	10008c74 	.word	0x10008c74
1000fe7c:	10008ca4 	.word	0x10008ca4
1000fe80:	10008ca4 	.word	0x10008ca4
1000fe84:	10008b7c 	.word	0x10008b7c
1000fe88:	10008b90 	.word	0x10008b90
1000fe8c:	10008ba4 	.word	0x10008ba4
1000fe90:	10008bb8 	.word	0x10008bb8
1000fe94:	10008ca4 	.word	0x10008ca4
1000fe98:	10008ca4 	.word	0x10008ca4
1000fe9c:	10008ca4 	.word	0x10008ca4
1000fea0:	10008ca4 	.word	0x10008ca4
1000fea4:	10008ca4 	.word	0x10008ca4
1000fea8:	10008ca4 	.word	0x10008ca4
1000feac:	10008ca4 	.word	0x10008ca4
1000feb0:	10008ca4 	.word	0x10008ca4
1000feb4:	10008874 	.word	0x10008874
1000feb8:	1000889c 	.word	0x1000889c
1000febc:	100088c4 	.word	0x100088c4
1000fec0:	100088ec 	.word	0x100088ec
1000fec4:	10008918 	.word	0x10008918
1000fec8:	10008a08 	.word	0x10008a08
1000fecc:	10008a38 	.word	0x10008a38
1000fed0:	10008a50 	.word	0x10008a50
1000fed4:	10008a68 	.word	0x10008a68
1000fed8:	10008a80 	.word	0x10008a80
1000fedc:	10008b68 	.word	0x10008b68
1000fee0:	10008c30 	.word	0x10008c30
1000fee4:	10008c44 	.word	0x10008c44
1000fee8:	10008c8c 	.word	0x10008c8c
1000feec:	10009322 	.word	0x10009322
1000fef0:	100092e0 	.word	0x100092e0
1000fef4:	1000930a 	.word	0x1000930a
1000fef8:	1000930a 	.word	0x1000930a
1000fefc:	1000930a 	.word	0x1000930a
1000ff00:	10009322 	.word	0x10009322
1000ff04:	1000930a 	.word	0x1000930a
1000ff08:	1000930a 	.word	0x1000930a
1000ff0c:	10009e56 	.word	0x10009e56
1000ff10:	10009ec2 	.word	0x10009ec2
1000ff14:	10009e3e 	.word	0x10009e3e
1000ff18:	10009ec8 	.word	0x10009ec8
1000ff1c:	10009e44 	.word	0x10009e44
1000ff20:	10009e4a 	.word	0x10009e4a
1000ff24:	10009e50 	.word	0x10009e50
1000ff28:	34333231 	.word	0x34333231
1000ff2c:	00003635 	.word	0x00003635
1000ff30:	efcdab00 	.word	0xefcdab00
1000ff34:	00efcdab 	.word	0x00efcdab
1000ff38:	b2d60600 	.word	0xb2d60600
1000ff3c:	f8f005f0 	.word	0xf8f005f0
1000ff40:	00000000 	.word	0x00000000
1000ff44:	6e6e6f43 	.word	0x6e6e6f43
1000ff48:	65746365 	.word	0x65746365
1000ff4c:	6f742064 	.word	0x6f742064
1000ff50:	65657020 	.word	0x65657020
1000ff54:	65642072 	.word	0x65642072
1000ff58:	65636976 	.word	0x65636976
1000ff5c:	74697720 	.word	0x74697720
1000ff60:	64612068 	.word	0x64612068
1000ff64:	73657264 	.word	0x73657264
1000ff68:	78302073 	.word	0x78302073
1000ff6c:	78323025 	.word	0x78323025
1000ff70:	78323025 	.word	0x78323025
1000ff74:	78323025 	.word	0x78323025
1000ff78:	78323025 	.word	0x78323025
1000ff7c:	78323025 	.word	0x78323025
1000ff80:	78323025 	.word	0x78323025
1000ff84:	00000000 	.word	0x00000000
1000ff88:	6e6e6f43 	.word	0x6e6e6f43
1000ff8c:	69746365 	.word	0x69746365
1000ff90:	48206e6f 	.word	0x48206e6f
1000ff94:	6c646e61 	.word	0x6c646e61
1000ff98:	64252065 	.word	0x64252065
1000ff9c:	00000000 	.word	0x00000000
1000ffa0:	6f736552 	.word	0x6f736552
1000ffa4:	6e69766c 	.word	0x6e69766c
1000ffa8:	61522067 	.word	0x61522067
1000ffac:	6d6f646e 	.word	0x6d6f646e
1000ffb0:	64646120 	.word	0x64646120
1000ffb4:	73736572 	.word	0x73736572
1000ffb8:	69616620 	.word	0x69616620
1000ffbc:	2a64656c 	.word	0x2a64656c
1000ffc0:	0000002a 	.word	0x0000002a
1000ffc4:	2078614d 	.word	0x2078614d
1000ffc8:	626d756e 	.word	0x626d756e
1000ffcc:	6f207265 	.word	0x6f207265
1000ffd0:	6f632066 	.word	0x6f632066
1000ffd4:	63656e6e 	.word	0x63656e6e
1000ffd8:	6e6f6974 	.word	0x6e6f6974
1000ffdc:	61657220 	.word	0x61657220
1000ffe0:	64656863 	.word	0x64656863
1000ffe4:	6425203a 	.word	0x6425203a
1000ffe8:	3d3d3d20 	.word	0x3d3d3d20
1000ffec:	7369443e 	.word	0x7369443e
1000fff0:	6e6e6f63 	.word	0x6e6e6f63
1000fff4:	69746365 	.word	0x69746365
1000fff8:	2e2e676e 	.word	0x2e2e676e
1000fffc:	0000002e 	.word	0x0000002e
10010000:	69766544 	.word	0x69766544
10010004:	43206563 	.word	0x43206563
10010008:	656e6e6f 	.word	0x656e6e6f
1001000c:	6f697463 	.word	0x6f697463
10010010:	6146206e 	.word	0x6146206e
10010014:	64656c69 	.word	0x64656c69
10010018:	53202d20 	.word	0x53202d20
1001001c:	75746174 	.word	0x75746174
10010020:	25203a73 	.word	0x25203a73
10010024:	00000064 	.word	0x00000064
10010028:	74696e49 	.word	0x74696e49
1001002c:	696c6169 	.word	0x696c6169
10010030:	676e697a 	.word	0x676e697a
10010034:	4d415320 	.word	0x4d415320
10010038:	00313142 	.word	0x00313142
1001003c:	424d4153 	.word	0x424d4153
10010040:	49203131 	.word	0x49203131
10010044:	6974696e 	.word	0x6974696e
10010048:	7a696c61 	.word	0x7a696c61
1001004c:	6f697461 	.word	0x6f697461
10010050:	6166206e 	.word	0x6166206e
10010054:	64656c69 	.word	0x64656c69
10010058:	00000000 	.word	0x00000000
1001005c:	61656c50 	.word	0x61656c50
10010060:	63206573 	.word	0x63206573
10010064:	6b636568 	.word	0x6b636568
10010068:	65687420 	.word	0x65687420
1001006c:	776f7020 	.word	0x776f7020
10010070:	61207265 	.word	0x61207265
10010074:	6320646e 	.word	0x6320646e
10010078:	656e6e6f 	.word	0x656e6e6f
1001007c:	6f697463 	.word	0x6f697463
10010080:	202f206e 	.word	0x202f206e
10010084:	64726168 	.word	0x64726168
10010088:	65726177 	.word	0x65726177
1001008c:	6e6f6320 	.word	0x6e6f6320
10010090:	7463656e 	.word	0x7463656e
10010094:	0000726f 	.word	0x0000726f
10010098:	454d5441 	.word	0x454d5441
1001009c:	4c422d4c 	.word	0x4c422d4c
100100a0:	00000045 	.word	0x00000045
100100a4:	69766544 	.word	0x69766544
100100a8:	6e206563 	.word	0x6e206563
100100ac:	20656d61 	.word	0x20656d61
100100b0:	20746573 	.word	0x20746573
100100b4:	6c696166 	.word	0x6c696166
100100b8:	00006465 	.word	0x00006465
100100bc:	61204442 	.word	0x61204442
100100c0:	65726464 	.word	0x65726464
100100c4:	67207373 	.word	0x67207373
100100c8:	66207465 	.word	0x66207465
100100cc:	656c6961 	.word	0x656c6961
100100d0:	00000064 	.word	0x00000064
100100d4:	41204442 	.word	0x41204442
100100d8:	65726464 	.word	0x65726464
100100dc:	303a7373 	.word	0x303a7373
100100e0:	32302578 	.word	0x32302578
100100e4:	32302558 	.word	0x32302558
100100e8:	32302558 	.word	0x32302558
100100ec:	32302558 	.word	0x32302558
100100f0:	32302558 	.word	0x32302558
100100f4:	32302558 	.word	0x32302558
100100f8:	41202c58 	.word	0x41202c58
100100fc:	65726464 	.word	0x65726464
10010100:	54207373 	.word	0x54207373
10010104:	3a657079 	.word	0x3a657079
10010108:	00006425 	.word	0x00006425
1001010c:	20746553 	.word	0x20746553
10010110:	20454c42 	.word	0x20454c42
10010114:	69766544 	.word	0x69766544
10010118:	63206563 	.word	0x63206563
1001011c:	69666e6f 	.word	0x69666e6f
10010120:	61727567 	.word	0x61727567
10010124:	6e6f6974 	.word	0x6e6f6974
10010128:	69616620 	.word	0x69616620
1001012c:	0064656c 	.word	0x0064656c
10010130:	20746553 	.word	0x20746553
10010134:	20454c42 	.word	0x20454c42
10010138:	69766544 	.word	0x69766544
1001013c:	41206563 	.word	0x41206563
10010140:	65726464 	.word	0x65726464
10010144:	66207373 	.word	0x66207373
10010148:	656c6961 	.word	0x656c6961
1001014c:	00000064 	.word	0x00000064
10010150:	69766544 	.word	0x69766544
10010154:	64206563 	.word	0x64206563
10010158:	6f637369 	.word	0x6f637369
1001015c:	63656e6e 	.word	0x63656e6e
10010160:	20646574 	.word	0x20646574
10010164:	73616552 	.word	0x73616552
10010168:	303a6e6f 	.word	0x303a6e6f
1001016c:	32302578 	.word	0x32302578
10010170:	61482078 	.word	0x61482078
10010174:	656c646e 	.word	0x656c646e
10010178:	2578303d 	.word	0x2578303d
1001017c:	00000078 	.word	0x00000078
10010180:	72696150 	.word	0x72696150
10010184:	20676e69 	.word	0x20676e69
10010188:	6f666e69 	.word	0x6f666e69
1001018c:	74616d72 	.word	0x74616d72
10010190:	206e6f69 	.word	0x206e6f69
10010194:	7020666f 	.word	0x7020666f
10010198:	20726565 	.word	0x20726565
1001019c:	69766564 	.word	0x69766564
100101a0:	69206563 	.word	0x69206563
100101a4:	6f6e2073 	.word	0x6f6e2073
100101a8:	76612074 	.word	0x76612074
100101ac:	616c6961 	.word	0x616c6961
100101b0:	2e656c62 	.word	0x2e656c62
100101b4:	00000000 	.word	0x00000000
100101b8:	61656c50 	.word	0x61656c50
100101bc:	75206573 	.word	0x75206573
100101c0:	6961706e 	.word	0x6961706e
100101c4:	68742072 	.word	0x68742072
100101c8:	65642065 	.word	0x65642065
100101cc:	65636976 	.word	0x65636976
100101d0:	6f726620 	.word	0x6f726620
100101d4:	6570206d 	.word	0x6570206d
100101d8:	64207265 	.word	0x64207265
100101dc:	63697665 	.word	0x63697665
100101e0:	6f6d2865 	.word	0x6f6d2865
100101e4:	656c6962 	.word	0x656c6962
100101e8:	65732029 	.word	0x65732029
100101ec:	6e697474 	.word	0x6e697474
100101f0:	6d207367 	.word	0x6d207367
100101f4:	20756e65 	.word	0x20756e65
100101f8:	20646e61 	.word	0x20646e61
100101fc:	72617473 	.word	0x72617473
10010200:	61702074 	.word	0x61702074
10010204:	6e697269 	.word	0x6e697269
10010208:	67612067 	.word	0x67612067
1001020c:	006e6961 	.word	0x006e6961
10010210:	72636e45 	.word	0x72636e45
10010214:	69747079 	.word	0x69747079
10010218:	52206e6f 	.word	0x52206e6f
1001021c:	65757165 	.word	0x65757165
10010220:	52207473 	.word	0x52207473
10010224:	796c7065 	.word	0x796c7065
10010228:	69614620 	.word	0x69614620
1001022c:	0064656c 	.word	0x0064656c
10010230:	72636e45 	.word	0x72636e45
10010234:	69747079 	.word	0x69747079
10010238:	66206e6f 	.word	0x66206e6f
1001023c:	656c6961 	.word	0x656c6961
10010240:	00000064 	.word	0x00000064
10010244:	72636e45 	.word	0x72636e45
10010248:	69747079 	.word	0x69747079
1001024c:	63206e6f 	.word	0x63206e6f
10010250:	6c706d6f 	.word	0x6c706d6f
10010254:	64657465 	.word	0x64657465
10010258:	63757320 	.word	0x63757320
1001025c:	73736563 	.word	0x73736563
10010260:	6c6c7566 	.word	0x6c6c7566
10010264:	00000079 	.word	0x00000079
10010268:	20454c42 	.word	0x20454c42
1001026c:	69766544 	.word	0x69766544
10010270:	6e206563 	.word	0x6e206563
10010274:	6620746f 	.word	0x6620746f
10010278:	646e756f 	.word	0x646e756f
1001027c:	636e6520 	.word	0x636e6520
10010280:	74707972 	.word	0x74707972
10010284:	206e6f69 	.word	0x206e6f69
10010288:	6f666e69 	.word	0x6f666e69
1001028c:	00000000 	.word	0x00000000

10010290 <ble_mgr_gap_handle>:
10010290:	10009259 10009415 10009271 00000000     Y.......q.......
100102a0:	00000000 10009551 100092cd 1000926b     ....Q.......k...
100102b0:	10009875 1000975d 10009a89 1000988d     u...]...........
100102c0:	10009bed 10009d41 10009359 10009499     ....A...Y.......
	...

100102dc <ble_mgr_gatt_server_handle>:
	...
100102f4:	1000925d 1000929d 10009261 00000000     ].......a.......
10010304:	2055544d 6e616843 46206567 656c6961     MTU Change Faile
10010314:	43202c64 656e6e6f 6f697463 6148206e     d, Connection Ha
10010324:	656c646e 2c64253a 65704f20 69746172     ndle:%d, Operati
10010334:	253a6e6f 00000064 72696150 20676e69     on:%d...Pairing 
10010344:	6c696166 2e2e6465 7369442e 6e6e6f63     failed...Disconn
10010354:	69746365 0000676e 63736944 656e6e6f     ecting..Disconne
10010364:	52207463 65757165 46207473 656c6961     ct Request Faile
10010374:	00000064 72696150 20676e69 636f7270     d...Pairing proc
10010384:	72756465 6f632065 656c706d 20646574     edure completed 
10010394:	63637573 66737365 796c6c75 00000000     successfully....
100103a4:	20454c42 69766544 6e206563 6620746f     BLE Device not f
100103b4:	646e756f 206f7420 726f7473 68742065     ound to store th
100103c4:	61702065 6e697269 6e692067 00006f66     e pairing info..
100103d4:	65746e45 68742072 61502065 656b7373     Enter the Passke
100103e4:	2d362879 69676944 69202974 6554206e     y(6-Digit) in Te
100103f4:	6e696d72 003a6c61 206e6950 656d6954     rminal:.Pin Time
10010404:	0074756f 63736944 656e6e6f 6e697463     out.Disconnectin
10010414:	2e2e2067 0000002e 61656c50 45206573     g ......Please E
10010424:	7265746e 65687420 6c6f6620 69776f6c     nter the followi
10010434:	5020676e 2d737361 65646f63 206e6f28     ng Pass-code(on 
10010444:	6568746f 65442072 65636976 00003a29     other Device):..
10010454:	72696150 79656b2d 70657220 6620796c     Pair-key reply f
10010464:	656c6961 00000064 20424f4f 74616546     ailed...OOB Feat
10010474:	20657275 20746f4e 70707573 6574726f     ure Not supporte
10010484:	00000064 65746e45 20646572 73736150     d...Entered Pass
10010494:	646f632d 00003a65 72696150 71655220     -code:..Pair Req
100104a4:	74736575 41202d20 65687475 6369746e     uest - Authentic
100104b4:	6f697461 6146206e 64656c69 00000000     ation Failed....
100104c4:	6f666e49 78616d3a 6d756d69 2e6f6e20     Info:maximum no.
100104d4:	7320666f 206e6163 69766564 72206563     of scan device r
100104e4:	68636165 2e2e6465 6f74532e 6e697070     eached...Stoppin
100104f4:	63532067 00006e61 6c696146 74206465     g Scan..Failed t
10010504:	7473206f 7320706f 6e6e6163 00676e69     o stop scanning.
10010514:	0000000d 6e616353 676e696e 61662020     ....Scanning  fa
10010524:	64656c69 00000000 72636e45 69747079     iled....Encrypti
10010534:	4e206e6f 7320746f 74726174 00006465     on Not started..
10010544:	76616c53 65532065 69727563 52207974     Slave Security R
10010554:	2d207165 74754120 746e6568 74616369     eq - Authenticat
10010564:	206e6f69 6c696146 00006465 00000080     ion Failed......
10010574:	00001800 b2d60600 f8f005f0 00000000     ................
10010584:	74696e49 696c6169 676e697a 6f724220     Initializing Bro
10010594:	61636461 72657473 70704120 6163696c     adcaster Applica
100105a4:	6e6f6974 00000000 65766441 73697472     tion....Advertis
100105b4:	6e656d65 79742074 73206570 74207465     ement type set t
100105c4:	6373206f 616e6e61 20656c62 69646e75     o scannable undi
100105d4:	74636572 00006465 454d5441 52422d4c     rected..ATMEL-BR
100105e4:	4344414f 00545341 706d6f63 6574656c     OADCAST.complete
100105f4:	6d616e20 65732065 00000074 756e616d      name set...manu
10010604:	74636166 72657275 74616420 65732061     facturer data se
10010614:	00000074 20454c42 616f7242 73616364     t...BLE Broadcas
10010624:	61642074 73206174 66207465 656c6961     t data set faile
10010634:	00000064 20454c42 616f7242 73616364     d...BLE Broadcas
10010644:	61642074 73206174 73207465 65636375     t data set succe
10010654:	00007373 20454c42 616f7242 73616364     ss..BLE Broadcas
10010664:	74732074 20747261 6c696166 25286465     t start failed(%
10010674:	00002964 72617453 20646574 616f7242     d)..Started Broa
10010684:	73616364 676e6974 00000000 69646461     dcasting....addi
10010694:	6320676e 6c706d6f 20657465 61636f6c     ng complete loca
100106a4:	616e206c 6620656d 656c6961 00000064     l name failed...
100106b4:	65707061 6e617261 73206563 00007465     appearance set..
100106c4:	69646461 6120676e 61657070 636e6172     adding appearanc
100106d4:	61662065 64656c69 00000000 69646461     e failed....addi
100106e4:	6320676e 6c706d6f 20657465 7473696c     ng complete list
100106f4:	20666f20 76726573 20656369 64697575      of service uuid
10010704:	66203631 656c6961 00000064 706d6f63     16 failed...comp
10010714:	6574656c 73696c20 666f2074 72657320     lete list of ser
10010724:	65636976 69757520 20363164 00746573     vice uuid16 set.
10010734:	65766441 73697472 6e656d65 61642074     Advertisement da
10010744:	74206174 20657079 20746573 6c696166     ta type set fail
10010754:	25286465 00002964 69646461 6d20676e     ed(%d)..adding m
10010764:	66756e61 75746361 20726572 61746164     anufacturer data
10010774:	69616620 0064656c 656d7441 6f43206c      failed.Atmel Co
10010784:	002e7072                                         rp.

10010787 <CSWTCH.47>:
10010787:	03010300 03030303 03030303 00020303     ................
10010797:	00dd9800 00dc5810 00dc5810 00dc5410     .....X...X...T..
100107a7:	00dd7010 00dd7010 00dd6210 00dc5410     .p...p...b...T..
100107b7:	00dd7010 00dd6210 00dd7010 00dc5410     .p...b...p...T..
100107c7:	00dd7810 00dd7810 00dd7810 00df7c10     .x...x...x...|..
100107d7:	0108a010                                         .

100107d8 <_global_impure_ptr>:
100107d8:	100108a0                                ....

100107dc <__sf_fake_stderr>:
	...

100107fc <__sf_fake_stdin>:
	...

1001081c <__sf_fake_stdout>:
	...
1001083c:	2b302d23 6c680020 6665004c 47464567     #-0+ .hlL.efgEFG
1001084c:	32313000 36353433 41393837 45444342     .0123456789ABCDE
1001085c:	31300046 35343332 39383736 64636261     F.0123456789abcd
1001086c:	00006665                                ef..

10010870 <_init>:
10010870:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10010872:	46c0      	nop			; (mov r8, r8)
10010874:	bcf8      	pop	{r3, r4, r5, r6, r7}
10010876:	bc08      	pop	{r3}
10010878:	469e      	mov	lr, r3
1001087a:	4770      	bx	lr

1001087c <__init_array_start>:
1001087c:	100080a5 	.word	0x100080a5

10010880 <_fini>:
10010880:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10010882:	46c0      	nop			; (mov r8, r8)
10010884:	bcf8      	pop	{r3, r4, r5, r6, r7}
10010886:	bc08      	pop	{r3}
10010888:	469e      	mov	lr, r3
1001088a:	4770      	bx	lr

1001088c <__fini_array_start>:
1001088c:	1000807d 	.word	0x1000807d
